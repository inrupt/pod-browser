name: CI

on: [push]

env:
  CI: true
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Available OS's: https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
        os: [ubuntu-18.04]
        node-version: [12.x, 10.x]
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.SUBMODULE_TOKEN }}
        submodules: true
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1.4.1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache node modules
      uses: actions/cache@v1.1.2
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-node${{ runner.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    - run: cd lib/solid-auth-fetcher && npm i && npm run build && cd ../../
    - run: cd lib/prism && npm i && npm run build && cd ../../
    - run: npm ci
    - run: npm run build
    - run: npm test
    - run: npm run e2e-test
    - run: npx prettier --check "src/**"
      # Prettier for some reason reports that the formatting is off on Windows.
      # Since a single check is sufficient for code formatting, we skip it there:
      if: runner.os != 'Windows'
    - name: Archive code coverage results
      uses: actions/upload-artifact@v1.0.0
      with:
        name: code-coverage-report
        path: coverage
    - name: Archive production artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: dist
        path: dist
  release-npm:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2.1.0
    - name: Prepare for publication to GitHub Packages
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
        registry-url: 'https://registry.npmjs.org'
    - name: Determine npm tag
      # Remove non-alphanumeric characters
      # See https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
      run: echo "::set-env name=TAG_SLUG::$(echo ${GITHUB_REF#refs/heads/} | tr -cd '[:alnum:]-')"
    - name: Prepare prerelease version
      run: |
        git config user.name $GITHUB_ACTOR
        git config user.email gh-actions-${GITHUB_ACTOR}@github.com
        # Make sure the prerelease is tagged with the branch name, and that they are sorted by build:
        npm version prerelease --preid=$TAG_SLUG-$GITHUB_RUN_ID-$GITHUB_RUN_NUMBER
    - run: npm ci
    - run: npm publish --tag "$TAG_SLUG"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - run: |
        echo "Package published. To install, run:"
        echo ""
        echo "    npm install lit-solid@$TAG_SLUG"