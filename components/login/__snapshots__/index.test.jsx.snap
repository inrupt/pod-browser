// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login form Renders a login form, with button bound to swapLoginType 1`] = `
<WithTheme
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-ExtraBold": [Function],
        "fonts/Raleway/Raleway-Medium": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#4E4E4E",
          "secondary": "#4E4E4E",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 800,
        "fontWeightLight": 500,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.375rem",
          "fontWeight": 800,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.45,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.125rem",
          "fontWeight": 800,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.27,
        },
        "h3": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.05rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1.2,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.1,
        },
        "h5": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h6": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "0.625rem",
          "fontWeight": 800,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "up": [Function],
          "values": Object {
            "lg": 1280,
            "md": 960,
            "sm": 600,
            "xl": 1920,
            "xs": 0,
          },
          "width": [Function],
        },
        "direction": "ltr",
        "iconSet": Object {
          "config": Object {
            "cssFiles": Array [
              "css/all.css",
            ],
            "fonts": Array [
              Object {
                "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                "fontsPath": "./webfonts",
                "licensePath": "./LICENSE.txt",
                "source": "fa-solid-900.eot",
                "sources": Array [
                  Object {
                    "format": "embedded-opentype",
                    "path": "fa-solid-900.eot",
                    "urlAddition": "?#iefix",
                  },
                  Object {
                    "format": "woff2",
                    "path": "fa-solid-900.woff2",
                  },
                  Object {
                    "format": "woff",
                    "path": "fa-solid-900.woff",
                  },
                  Object {
                    "format": "truetype",
                    "path": "fa-solid-900.ttf",
                  },
                  Object {
                    "format": "svg",
                    "path": "fa-solid-900.svg",
                    "urlAddition": "#fontawesome",
                  },
                ],
              },
            ],
            "label": "Font Awesome Solid",
            "name": "fontawesome-solid",
            "npmModule": "@fortawesome/fontawesome-free",
            "type": 0,
          },
          "iconColor": [Function],
          "styles": [Function],
        },
        "icons": Object {
          "config": Object {
            "cssFiles": Array [
              "css/all.css",
            ],
            "fonts": Array [
              Object {
                "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                "fontsPath": "./webfonts",
                "licensePath": "./LICENSE.txt",
                "source": "fa-solid-900.eot",
                "sources": Array [
                  Object {
                    "format": "embedded-opentype",
                    "path": "fa-solid-900.eot",
                    "urlAddition": "?#iefix",
                  },
                  Object {
                    "format": "woff2",
                    "path": "fa-solid-900.woff2",
                  },
                  Object {
                    "format": "woff",
                    "path": "fa-solid-900.woff",
                  },
                  Object {
                    "format": "truetype",
                    "path": "fa-solid-900.ttf",
                  },
                  Object {
                    "format": "svg",
                    "path": "fa-solid-900.svg",
                    "urlAddition": "#fontawesome",
                  },
                ],
              },
            ],
            "label": "Font Awesome Solid",
            "name": "fontawesome-solid",
            "npmModule": "@fortawesome/fontawesome-free",
            "type": 0,
          },
          "iconColor": [Function],
          "styles": [Function],
        },
        "label": "SDK Default",
        "licenses": Array [
          "fonts/Raleway/OFL.txt",
        ],
        "localFonts": Object {
          "fonts/Raleway/Raleway-ExtraBold": [Function],
          "fonts/Raleway/Raleway-Medium": [Function],
        },
        "mixins": Object {
          "gutters": [Function],
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "name": "sdk-default",
        "overrides": Object {},
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "adjustAlpha": [Function],
          "augmentColor": [Function],
          "background": Object {
            "default": "#FFFFFF",
            "paper": "#fff",
          },
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#d32f2f",
            "light": "#e57373",
            "main": "#f44336",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#d5d5d5",
            "A200": "#aaaaaa",
            "A400": "#303030",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#1976d2",
            "light": "#64b5f6",
            "main": "#2196f3",
          },
          "primary": Object {
            "contrastText": "#fff",
            "dark": "rgb(86, 53, 178)",
            "light": "rgb(150, 112, 255)",
            "main": "#7C4DFF",
          },
          "secondary": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#083575",
            "light": "#01C9EA",
            "main": "#18A9E6",
          },
          "success": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#388e3c",
            "light": "#81c784",
            "main": "#4caf50",
          },
          "text": Object {
            "disabled": "rgba(0, 0, 0, 0.38)",
            "hint": "rgba(0, 0, 0, 0.38)",
            "primary": "#4E4E4E",
            "secondary": "#4E4E4E",
          },
          "tonalOffset": 0.2,
          "type": "light",
          "warning": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#f57c00",
            "light": "#ffb74d",
            "main": "#ff9800",
          },
        },
        "props": Object {},
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "stylesheets": Array [
          "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
        ],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body": Object {
            "fontFamily": "\\"Raleway-Medium\\"",
            "fontSize": "0.9375rem",
            "fontWeight": 500,
            "letterSpacing": "0.01071em",
            "lineHeight": 1.43,
          },
          "body1": Object {
            "fontFamily": "\\"Raleway-ExtraBold\\"",
            "fontSize": "1rem",
            "fontWeight": 800,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "\\"Raleway-Medium\\"",
            "fontSize": "0.9375rem",
            "fontWeight": 500,
            "letterSpacing": "0.01071em",
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.02857em",
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.03333em",
            "lineHeight": 1.66,
          },
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeightBold": 800,
          "fontWeightLight": 500,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "fontFamily": "\\"Raleway-ExtraBold\\"",
            "fontSize": "1.375rem",
            "fontWeight": 800,
            "letterSpacing": "-0.01562em",
            "lineHeight": 1.45,
          },
          "h2": Object {
            "fontFamily": "\\"Raleway-ExtraBold\\"",
            "fontSize": "1.125rem",
            "fontWeight": 800,
            "letterSpacing": "-0.00833em",
            "lineHeight": 1.27,
          },
          "h3": Object {
            "fontFamily": "\\"Raleway-ExtraBold\\"",
            "fontSize": "1.05rem",
            "fontWeight": 800,
            "letterSpacing": "0em",
            "lineHeight": 1.2,
          },
          "h4": Object {
            "fontFamily": "\\"Raleway-ExtraBold\\"",
            "fontSize": "1rem",
            "fontWeight": 800,
            "letterSpacing": "0.00735em",
            "lineHeight": 1.1,
          },
          "h5": Object {
            "fontFamily": "\\"Raleway-ExtraBold\\"",
            "fontSize": "1rem",
            "fontWeight": 800,
            "letterSpacing": "0em",
            "lineHeight": 1,
          },
          "h6": Object {
            "fontFamily": "\\"Raleway-ExtraBold\\"",
            "fontSize": "0.625rem",
            "fontWeight": 800,
            "letterSpacing": "0.0075em",
            "lineHeight": 1,
          },
          "heading": Object {
            "fontFamily": "\\"Raleway-ExtraBold\\"",
            "fontSize": "1rem",
            "fontWeight": 800,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.5,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.08333em",
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "round": [Function],
          "subtitle1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.00714em",
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <Login>
      <div
        className="makeStyles-login-form-17"
      >
        <Provider>
          <form
            onSubmit={[Function]}
          >
            <Styled(MuiBox)
              my={2}
            >
              <div
                className="MuiBox-root MuiBox-root-23"
              >
                <Styled(MuiBox)
                  mt={2}
                >
                  <div
                    className="MuiBox-root MuiBox-root-24"
                  >
                    <h3>
                      Log In
                    </h3>
                    <WithStyles(ForwardRef(Autocomplete))
                      freeSolo={true}
                      id="provider-select"
                      onChange={[Function]}
                      onInputChange={[Function]}
                      options={
                        Array [
                          "https://inrupt.net/",
                          "https://dev.inrupt.net/",
                          "https://solid.community/",
                        ]
                      }
                      renderInput={[Function]}
                    >
                      <ForwardRef(Autocomplete)
                        classes={
                          Object {
                            "clearIndicator": "MuiAutocomplete-clearIndicator",
                            "clearIndicatorDirty": "MuiAutocomplete-clearIndicatorDirty",
                            "endAdornment": "MuiAutocomplete-endAdornment",
                            "focused": "Mui-focused",
                            "fullWidth": "MuiAutocomplete-fullWidth",
                            "groupLabel": "MuiAutocomplete-groupLabel",
                            "groupUl": "MuiAutocomplete-groupUl",
                            "hasClearIcon": "MuiAutocomplete-hasClearIcon",
                            "hasPopupIcon": "MuiAutocomplete-hasPopupIcon",
                            "input": "MuiAutocomplete-input",
                            "inputFocused": "MuiAutocomplete-inputFocused",
                            "inputRoot": "MuiAutocomplete-inputRoot",
                            "listbox": "MuiAutocomplete-listbox",
                            "loading": "MuiAutocomplete-loading",
                            "noOptions": "MuiAutocomplete-noOptions",
                            "option": "MuiAutocomplete-option",
                            "paper": "MuiAutocomplete-paper",
                            "popper": "MuiAutocomplete-popper",
                            "popperDisablePortal": "MuiAutocomplete-popperDisablePortal",
                            "popupIndicator": "MuiAutocomplete-popupIndicator",
                            "popupIndicatorOpen": "MuiAutocomplete-popupIndicatorOpen",
                            "root": "MuiAutocomplete-root",
                            "tag": "MuiAutocomplete-tag",
                            "tagSizeSmall": "MuiAutocomplete-tagSizeSmall",
                          }
                        }
                        freeSolo={true}
                        id="provider-select"
                        onChange={[Function]}
                        onInputChange={[Function]}
                        options={
                          Array [
                            "https://inrupt.net/",
                            "https://dev.inrupt.net/",
                            "https://solid.community/",
                          ]
                        }
                        renderInput={[Function]}
                      >
                        <div
                          aria-expanded={false}
                          aria-owns={null}
                          className="MuiAutocomplete-root MuiAutocomplete-hasClearIcon"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          role="combobox"
                        >
                          <WithStyles(ForwardRef(TextField))
                            InputLabelProps={
                              Object {
                                "htmlFor": "provider-select",
                                "id": "provider-select-label",
                              }
                            }
                            InputProps={
                              Object {
                                "className": "MuiAutocomplete-inputRoot",
                                "endAdornment": <div
                                  className="MuiAutocomplete-endAdornment"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    aria-label="Clear"
                                    className="MuiAutocomplete-clearIndicator"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Clear"
                                  >
                                    <Memo
                                      fontSize="small"
                                    />
                                  </WithStyles(ForwardRef(IconButton))>
                                </div>,
                                "ref": [Function],
                                "startAdornment": undefined,
                              }
                            }
                            disabled={false}
                            fullWidth={true}
                            id="provider-select"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": null,
                                "autoCapitalize": "none",
                                "autoComplete": "off",
                                "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                "disabled": false,
                                "id": "provider-select",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onFocus": [Function],
                                "onMouseDown": [Function],
                                "ref": Object {
                                  "current": <input
                                    aria-autocomplete="list"
                                    aria-invalid="false"
                                    autocapitalize="none"
                                    autocomplete="off"
                                    class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                    id="provider-select"
                                    required=""
                                    spellcheck="false"
                                    type="url"
                                    value=""
                                  />,
                                },
                                "spellCheck": "false",
                                "value": "",
                              }
                            }
                            label="Select ID provider"
                            margin="normal"
                            required={true}
                            type="url"
                            variant="outlined"
                          >
                            <ForwardRef(TextField)
                              InputLabelProps={
                                Object {
                                  "htmlFor": "provider-select",
                                  "id": "provider-select-label",
                                }
                              }
                              InputProps={
                                Object {
                                  "className": "MuiAutocomplete-inputRoot",
                                  "endAdornment": <div
                                    className="MuiAutocomplete-endAdornment"
                                  >
                                    <WithStyles(ForwardRef(IconButton))
                                      aria-label="Clear"
                                      className="MuiAutocomplete-clearIndicator"
                                      onClick={[Function]}
                                      tabIndex={-1}
                                      title="Clear"
                                    >
                                      <Memo
                                        fontSize="small"
                                      />
                                    </WithStyles(ForwardRef(IconButton))>
                                  </div>,
                                  "ref": [Function],
                                  "startAdornment": undefined,
                                }
                              }
                              classes={
                                Object {
                                  "root": "MuiTextField-root",
                                }
                              }
                              disabled={false}
                              fullWidth={true}
                              id="provider-select"
                              inputProps={
                                Object {
                                  "aria-activedescendant": null,
                                  "aria-autocomplete": "list",
                                  "aria-controls": null,
                                  "autoCapitalize": "none",
                                  "autoComplete": "off",
                                  "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                  "disabled": false,
                                  "id": "provider-select",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "onMouseDown": [Function],
                                  "ref": Object {
                                    "current": <input
                                      aria-autocomplete="list"
                                      aria-invalid="false"
                                      autocapitalize="none"
                                      autocomplete="off"
                                      class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                      id="provider-select"
                                      required=""
                                      spellcheck="false"
                                      type="url"
                                      value=""
                                    />,
                                  },
                                  "spellCheck": "false",
                                  "value": "",
                                }
                              }
                              label="Select ID provider"
                              margin="normal"
                              required={true}
                              type="url"
                              variant="outlined"
                            >
                              <WithStyles(ForwardRef(FormControl))
                                className="MuiTextField-root"
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={true}
                                margin="normal"
                                required={true}
                                variant="outlined"
                              >
                                <ForwardRef(FormControl)
                                  className="MuiTextField-root"
                                  classes={
                                    Object {
                                      "fullWidth": "MuiFormControl-fullWidth",
                                      "marginDense": "MuiFormControl-marginDense",
                                      "marginNormal": "MuiFormControl-marginNormal",
                                      "root": "MuiFormControl-root",
                                    }
                                  }
                                  color="primary"
                                  disabled={false}
                                  error={false}
                                  fullWidth={true}
                                  margin="normal"
                                  required={true}
                                  variant="outlined"
                                >
                                  <div
                                    className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                  >
                                    <WithStyles(ForwardRef(InputLabel))
                                      htmlFor="provider-select"
                                      id="provider-select-label"
                                    >
                                      <ForwardRef(InputLabel)
                                        classes={
                                          Object {
                                            "animated": "MuiInputLabel-animated",
                                            "asterisk": "MuiInputLabel-asterisk",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "filled": "MuiInputLabel-filled",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInputLabel-formControl",
                                            "marginDense": "MuiInputLabel-marginDense",
                                            "outlined": "MuiInputLabel-outlined",
                                            "required": "Mui-required",
                                            "root": "MuiInputLabel-root",
                                            "shrink": "MuiInputLabel-shrink",
                                          }
                                        }
                                        htmlFor="provider-select"
                                        id="provider-select-label"
                                      >
                                        <WithStyles(ForwardRef(FormLabel))
                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                          classes={
                                            Object {
                                              "asterisk": "MuiInputLabel-asterisk",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "required": "Mui-required",
                                            }
                                          }
                                          data-shrink={false}
                                          htmlFor="provider-select"
                                          id="provider-select-label"
                                        >
                                          <ForwardRef(FormLabel)
                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                            classes={
                                              Object {
                                                "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                "colorSecondary": "MuiFormLabel-colorSecondary",
                                                "disabled": "Mui-disabled Mui-disabled",
                                                "error": "Mui-error Mui-error",
                                                "filled": "MuiFormLabel-filled",
                                                "focused": "Mui-focused Mui-focused",
                                                "required": "Mui-required Mui-required",
                                                "root": "MuiFormLabel-root",
                                              }
                                            }
                                            data-shrink={false}
                                            htmlFor="provider-select"
                                            id="provider-select-label"
                                          >
                                            <label
                                              className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined Mui-required Mui-required"
                                              data-shrink={false}
                                              htmlFor="provider-select"
                                              id="provider-select-label"
                                            >
                                              Select ID provider
                                              <span
                                                aria-hidden={true}
                                                className="MuiFormLabel-asterisk MuiInputLabel-asterisk"
                                              >
                                                 
                                                *
                                              </span>
                                            </label>
                                          </ForwardRef(FormLabel)>
                                        </WithStyles(ForwardRef(FormLabel))>
                                      </ForwardRef(InputLabel)>
                                    </WithStyles(ForwardRef(InputLabel))>
                                    <WithStyles(ForwardRef(OutlinedInput))
                                      autoFocus={false}
                                      className="MuiAutocomplete-inputRoot"
                                      endAdornment={
                                        <div
                                          className="MuiAutocomplete-endAdornment"
                                        >
                                          <WithStyles(ForwardRef(IconButton))
                                            aria-label="Clear"
                                            className="MuiAutocomplete-clearIndicator"
                                            onClick={[Function]}
                                            tabIndex={-1}
                                            title="Clear"
                                          >
                                            <Memo
                                              fontSize="small"
                                            />
                                          </WithStyles(ForwardRef(IconButton))>
                                        </div>
                                      }
                                      fullWidth={true}
                                      id="provider-select"
                                      inputProps={
                                        Object {
                                          "aria-activedescendant": null,
                                          "aria-autocomplete": "list",
                                          "aria-controls": null,
                                          "autoCapitalize": "none",
                                          "autoComplete": "off",
                                          "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                          "disabled": false,
                                          "id": "provider-select",
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "onFocus": [Function],
                                          "onMouseDown": [Function],
                                          "ref": Object {
                                            "current": <input
                                              aria-autocomplete="list"
                                              aria-invalid="false"
                                              autocapitalize="none"
                                              autocomplete="off"
                                              class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                              id="provider-select"
                                              required=""
                                              spellcheck="false"
                                              type="url"
                                              value=""
                                            />,
                                          },
                                          "spellCheck": "false",
                                          "value": "",
                                        }
                                      }
                                      label={
                                        <React.Fragment>
                                          Select ID provider
                                           *
                                        </React.Fragment>
                                      }
                                      multiline={false}
                                      type="url"
                                    >
                                      <ForwardRef(OutlinedInput)
                                        autoFocus={false}
                                        className="MuiAutocomplete-inputRoot"
                                        classes={
                                          Object {
                                            "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                            "adornedStart": "MuiOutlinedInput-adornedStart",
                                            "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "input": "MuiOutlinedInput-input",
                                            "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                            "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                            "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                            "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                            "marginDense": "MuiOutlinedInput-marginDense",
                                            "multiline": "MuiOutlinedInput-multiline",
                                            "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                            "root": "MuiOutlinedInput-root",
                                          }
                                        }
                                        endAdornment={
                                          <div
                                            className="MuiAutocomplete-endAdornment"
                                          >
                                            <WithStyles(ForwardRef(IconButton))
                                              aria-label="Clear"
                                              className="MuiAutocomplete-clearIndicator"
                                              onClick={[Function]}
                                              tabIndex={-1}
                                              title="Clear"
                                            >
                                              <Memo
                                                fontSize="small"
                                              />
                                            </WithStyles(ForwardRef(IconButton))>
                                          </div>
                                        }
                                        fullWidth={true}
                                        id="provider-select"
                                        inputProps={
                                          Object {
                                            "aria-activedescendant": null,
                                            "aria-autocomplete": "list",
                                            "aria-controls": null,
                                            "autoCapitalize": "none",
                                            "autoComplete": "off",
                                            "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                            "disabled": false,
                                            "id": "provider-select",
                                            "onBlur": [Function],
                                            "onChange": [Function],
                                            "onFocus": [Function],
                                            "onMouseDown": [Function],
                                            "ref": Object {
                                              "current": <input
                                                aria-autocomplete="list"
                                                aria-invalid="false"
                                                autocapitalize="none"
                                                autocomplete="off"
                                                class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                id="provider-select"
                                                required=""
                                                spellcheck="false"
                                                type="url"
                                                value=""
                                              />,
                                            },
                                            "spellCheck": "false",
                                            "value": "",
                                          }
                                        }
                                        label={
                                          <React.Fragment>
                                            Select ID provider
                                             *
                                          </React.Fragment>
                                        }
                                        multiline={false}
                                        type="url"
                                      >
                                        <WithStyles(ForwardRef(InputBase))
                                          autoFocus={false}
                                          className="MuiAutocomplete-inputRoot"
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                              "adornedStart": "MuiOutlinedInput-adornedStart",
                                              "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "input": "MuiOutlinedInput-input",
                                              "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                              "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                              "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                              "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                              "marginDense": "MuiOutlinedInput-marginDense",
                                              "multiline": "MuiOutlinedInput-multiline",
                                              "notchedOutline": null,
                                              "root": "MuiOutlinedInput-root",
                                            }
                                          }
                                          endAdornment={
                                            <div
                                              className="MuiAutocomplete-endAdornment"
                                            >
                                              <WithStyles(ForwardRef(IconButton))
                                                aria-label="Clear"
                                                className="MuiAutocomplete-clearIndicator"
                                                onClick={[Function]}
                                                tabIndex={-1}
                                                title="Clear"
                                              >
                                                <Memo
                                                  fontSize="small"
                                                />
                                              </WithStyles(ForwardRef(IconButton))>
                                            </div>
                                          }
                                          fullWidth={true}
                                          id="provider-select"
                                          inputComponent="input"
                                          inputProps={
                                            Object {
                                              "aria-activedescendant": null,
                                              "aria-autocomplete": "list",
                                              "aria-controls": null,
                                              "autoCapitalize": "none",
                                              "autoComplete": "off",
                                              "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                              "disabled": false,
                                              "id": "provider-select",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "onMouseDown": [Function],
                                              "ref": Object {
                                                "current": <input
                                                  aria-autocomplete="list"
                                                  aria-invalid="false"
                                                  autocapitalize="none"
                                                  autocomplete="off"
                                                  class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                  id="provider-select"
                                                  required=""
                                                  spellcheck="false"
                                                  type="url"
                                                  value=""
                                                />,
                                              },
                                              "spellCheck": "false",
                                              "value": "",
                                            }
                                          }
                                          multiline={false}
                                          renderSuffix={[Function]}
                                          type="url"
                                        >
                                          <ForwardRef(InputBase)
                                            autoFocus={false}
                                            className="MuiAutocomplete-inputRoot"
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                "disabled": "Mui-disabled Mui-disabled",
                                                "error": "Mui-error Mui-error",
                                                "focused": "Mui-focused Mui-focused",
                                                "formControl": "MuiInputBase-formControl",
                                                "fullWidth": "MuiInputBase-fullWidth",
                                                "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                "root": "MuiInputBase-root MuiOutlinedInput-root",
                                              }
                                            }
                                            endAdornment={
                                              <div
                                                className="MuiAutocomplete-endAdornment"
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  aria-label="Clear"
                                                  className="MuiAutocomplete-clearIndicator"
                                                  onClick={[Function]}
                                                  tabIndex={-1}
                                                  title="Clear"
                                                >
                                                  <Memo
                                                    fontSize="small"
                                                  />
                                                </WithStyles(ForwardRef(IconButton))>
                                              </div>
                                            }
                                            fullWidth={true}
                                            id="provider-select"
                                            inputComponent="input"
                                            inputProps={
                                              Object {
                                                "aria-activedescendant": null,
                                                "aria-autocomplete": "list",
                                                "aria-controls": null,
                                                "autoCapitalize": "none",
                                                "autoComplete": "off",
                                                "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                "disabled": false,
                                                "id": "provider-select",
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onFocus": [Function],
                                                "onMouseDown": [Function],
                                                "ref": Object {
                                                  "current": <input
                                                    aria-autocomplete="list"
                                                    aria-invalid="false"
                                                    autocapitalize="none"
                                                    autocomplete="off"
                                                    class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                    id="provider-select"
                                                    required=""
                                                    spellcheck="false"
                                                    type="url"
                                                    value=""
                                                  />,
                                                },
                                                "spellCheck": "false",
                                                "value": "",
                                              }
                                            }
                                            multiline={false}
                                            renderSuffix={[Function]}
                                            type="url"
                                          >
                                            <div
                                              className="MuiInputBase-root MuiOutlinedInput-root MuiAutocomplete-inputRoot MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                              onClick={[Function]}
                                            >
                                              <input
                                                aria-activedescendant={null}
                                                aria-autocomplete="list"
                                                aria-controls={null}
                                                aria-invalid={false}
                                                autoCapitalize="none"
                                                autoComplete="off"
                                                autoFocus={false}
                                                className="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                disabled={false}
                                                id="provider-select"
                                                onAnimationStart={[Function]}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onMouseDown={[Function]}
                                                required={true}
                                                spellCheck="false"
                                                type="url"
                                                value=""
                                              />
                                              <div
                                                className="MuiAutocomplete-endAdornment"
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  aria-label="Clear"
                                                  className="MuiAutocomplete-clearIndicator"
                                                  onClick={[Function]}
                                                  tabIndex={-1}
                                                  title="Clear"
                                                >
                                                  <ForwardRef(IconButton)
                                                    aria-label="Clear"
                                                    className="MuiAutocomplete-clearIndicator"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiIconButton-colorInherit",
                                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                                        "edgeStart": "MuiIconButton-edgeStart",
                                                        "label": "MuiIconButton-label",
                                                        "root": "MuiIconButton-root",
                                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    tabIndex={-1}
                                                    title="Clear"
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      aria-label="Clear"
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiAutocomplete-clearIndicator"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onClick={[Function]}
                                                      tabIndex={-1}
                                                      title="Clear"
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        aria-label="Clear"
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiAutocomplete-clearIndicator"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        onClick={[Function]}
                                                        tabIndex={-1}
                                                        title="Clear"
                                                      >
                                                        <button
                                                          aria-label="Clear"
                                                          className="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-clearIndicator"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={-1}
                                                          title="Clear"
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiIconButton-label"
                                                          >
                                                            <ForwardRef(CloseIcon)
                                                              fontSize="small"
                                                            >
                                                              <WithStyles(ForwardRef(SvgIcon))
                                                                fontSize="small"
                                                              >
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                  fontSize="small"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef(CloseIcon)>
                                                          </span>
                                                          <WithStyles(memo)
                                                            center={true}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={true}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </div>
                                              <WithStyles(ForwardRef(NotchedOutline))
                                                className="MuiOutlinedInput-notchedOutline"
                                                label={
                                                  <React.Fragment>
                                                    Select ID provider
                                                     *
                                                  </React.Fragment>
                                                }
                                                labelWidth={0}
                                                notched={false}
                                              >
                                                <ForwardRef(NotchedOutline)
                                                  className="MuiOutlinedInput-notchedOutline"
                                                  classes={
                                                    Object {
                                                      "legend": "PrivateNotchedOutline-legend-26",
                                                      "legendLabelled": "PrivateNotchedOutline-legendLabelled-27",
                                                      "legendNotched": "PrivateNotchedOutline-legendNotched-28",
                                                      "root": "PrivateNotchedOutline-root-25",
                                                    }
                                                  }
                                                  label={
                                                    <React.Fragment>
                                                      Select ID provider
                                                       *
                                                    </React.Fragment>
                                                  }
                                                  labelWidth={0}
                                                  notched={false}
                                                >
                                                  <fieldset
                                                    aria-hidden={true}
                                                    className="PrivateNotchedOutline-root-25 MuiOutlinedInput-notchedOutline"
                                                  >
                                                    <legend
                                                      className="PrivateNotchedOutline-legendLabelled-27"
                                                    >
                                                      <span>
                                                        Select ID provider
                                                         *
                                                      </span>
                                                    </legend>
                                                  </fieldset>
                                                </ForwardRef(NotchedOutline)>
                                              </WithStyles(ForwardRef(NotchedOutline))>
                                            </div>
                                          </ForwardRef(InputBase)>
                                        </WithStyles(ForwardRef(InputBase))>
                                      </ForwardRef(OutlinedInput)>
                                    </WithStyles(ForwardRef(OutlinedInput))>
                                  </div>
                                </ForwardRef(FormControl)>
                              </WithStyles(ForwardRef(FormControl))>
                            </ForwardRef(TextField)>
                          </WithStyles(ForwardRef(TextField))>
                        </div>
                      </ForwardRef(Autocomplete)>
                    </WithStyles(ForwardRef(Autocomplete))>
                    <button
                      className="makeStyles-button-19"
                      onClick={[Function]}
                      type="submit"
                    >
                      Log In
                    </button>
                  </div>
                </Styled(MuiBox)>
              </div>
            </Styled(MuiBox)>
          </form>
        </Provider>
      </div>
    </Login>
  </ThemeProvider>
</WithTheme>
`;
