// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Container view it renders a Contents view when the router query has an iri 1`] = `
<Component
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-ExtraBold": [Function],
        "fonts/Raleway/Raleway-Medium": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#4E4E4E",
          "secondary": "#4E4E4E",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 800,
        "fontWeightLight": 500,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.375rem",
          "fontWeight": 800,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.45,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.125rem",
          "fontWeight": 800,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.27,
        },
        "h3": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.05rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1.2,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.1,
        },
        "h5": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h6": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "0.625rem",
          "fontWeight": 800,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <StylesProvider
    generateClassName={[Function]}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1280,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "iconSet": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "icons": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "label": "SDK Default",
          "licenses": Array [
            "fonts/Raleway/OFL.txt",
          ],
          "localFonts": Object {
            "fonts/Raleway/Raleway-ExtraBold": [Function],
            "fonts/Raleway/Raleway-Medium": [Function],
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "name": "sdk-default",
          "overrides": Object {},
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "adjustAlpha": [Function],
            "augmentColor": [Function],
            "background": Object {
              "default": "#FFFFFF",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#f44336",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(86, 53, 178)",
              "light": "rgb(150, 112, 255)",
              "main": "#7C4DFF",
            },
            "secondary": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#083575",
              "light": "#01C9EA",
              "main": "#18A9E6",
            },
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#4E4E4E",
              "secondary": "#4E4E4E",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {},
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "stylesheets": Array [
            "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
          ],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "body1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 800,
            "fontWeightLight": 500,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.375rem",
              "fontWeight": 800,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.45,
            },
            "h2": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.125rem",
              "fontWeight": 800,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.27,
            },
            "h3": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.05rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1.2,
            },
            "h4": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.1,
            },
            "h5": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1,
            },
            "h6": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "0.625rem",
              "fontWeight": 800,
              "letterSpacing": "0.0075em",
              "lineHeight": 1,
            },
            "heading": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <DetailsContextMenuProvider>
        <DetailsContextMenu />
      </DetailsContextMenuProvider>
    </ThemeProvider>
  </StylesProvider>
</Component>
`;

exports[`Container view it renders a loading view when context has no iri 1`] = `
<Component
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-ExtraBold": [Function],
        "fonts/Raleway/Raleway-Medium": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#4E4E4E",
          "secondary": "#4E4E4E",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 800,
        "fontWeightLight": 500,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.375rem",
          "fontWeight": 800,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.45,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.125rem",
          "fontWeight": 800,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.27,
        },
        "h3": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.05rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1.2,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.1,
        },
        "h5": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h6": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "0.625rem",
          "fontWeight": 800,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <StylesProvider
    generateClassName={[Function]}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1280,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "iconSet": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "icons": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "label": "SDK Default",
          "licenses": Array [
            "fonts/Raleway/OFL.txt",
          ],
          "localFonts": Object {
            "fonts/Raleway/Raleway-ExtraBold": [Function],
            "fonts/Raleway/Raleway-Medium": [Function],
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "name": "sdk-default",
          "overrides": Object {},
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "adjustAlpha": [Function],
            "augmentColor": [Function],
            "background": Object {
              "default": "#FFFFFF",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#f44336",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(86, 53, 178)",
              "light": "rgb(150, 112, 255)",
              "main": "#7C4DFF",
            },
            "secondary": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#083575",
              "light": "#01C9EA",
              "main": "#18A9E6",
            },
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#4E4E4E",
              "secondary": "#4E4E4E",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {},
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "stylesheets": Array [
            "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
          ],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "body1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 800,
            "fontWeightLight": 500,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.375rem",
              "fontWeight": 800,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.45,
            },
            "h2": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.125rem",
              "fontWeight": 800,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.27,
            },
            "h3": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.05rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1.2,
            },
            "h4": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.1,
            },
            "h5": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1,
            },
            "h6": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "0.625rem",
              "fontWeight": 800,
              "letterSpacing": "0.0075em",
              "lineHeight": 1,
            },
            "heading": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <DetailsContextMenuProvider>
        <DetailsContextMenu />
      </DetailsContextMenuProvider>
    </ThemeProvider>
  </StylesProvider>
</Component>
`;

exports[`Contents it renders a DetailsError component when there's an error 1`] = `
<Component
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-ExtraBold": [Function],
        "fonts/Raleway/Raleway-Medium": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#4E4E4E",
          "secondary": "#4E4E4E",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 800,
        "fontWeightLight": 500,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.375rem",
          "fontWeight": 800,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.45,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.125rem",
          "fontWeight": 800,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.27,
        },
        "h3": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.05rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1.2,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.1,
        },
        "h5": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h6": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "0.625rem",
          "fontWeight": 800,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <StylesProvider
    generateClassName={[Function]}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1280,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "iconSet": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "icons": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "label": "SDK Default",
          "licenses": Array [
            "fonts/Raleway/OFL.txt",
          ],
          "localFonts": Object {
            "fonts/Raleway/Raleway-ExtraBold": [Function],
            "fonts/Raleway/Raleway-Medium": [Function],
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "name": "sdk-default",
          "overrides": Object {},
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "adjustAlpha": [Function],
            "augmentColor": [Function],
            "background": Object {
              "default": "#FFFFFF",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#f44336",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(86, 53, 178)",
              "light": "rgb(150, 112, 255)",
              "main": "#7C4DFF",
            },
            "secondary": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#083575",
              "light": "#01C9EA",
              "main": "#18A9E6",
            },
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#4E4E4E",
              "secondary": "#4E4E4E",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {},
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "stylesheets": Array [
            "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
          ],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "body1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 800,
            "fontWeightLight": 500,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.375rem",
              "fontWeight": 800,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.45,
            },
            "h2": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.125rem",
              "fontWeight": 800,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.27,
            },
            "h3": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.05rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1.2,
            },
            "h4": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.1,
            },
            "h5": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1,
            },
            "h6": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "0.625rem",
              "fontWeight": 800,
              "letterSpacing": "0.0075em",
              "lineHeight": 1,
            },
            "heading": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <AlertContextProvider>
        <Contents
          action="details"
          iri="/iri/"
          onUpdate={[Function]}
        >
          <DetailsError
            iri="/iri/"
            message="There was an error fetching the details."
            name="iri"
          >
            <section
              className="PodBrowser-centeredSection"
            >
              <h3
                className="PodBrowser-content-h3"
                title="/iri/"
              >
                iri
              </h3>
            </section>
            <WithStyles(ForwardRef(Divider))>
              <ForwardRef(Divider)
                classes={
                  Object {
                    "absolute": "PodBrowser-absolute",
                    "flexItem": "PodBrowser-flexItem",
                    "inset": "PodBrowser-inset",
                    "light": "PodBrowser-light",
                    "middle": "PodBrowser-middle",
                    "root": "PodBrowser-root",
                    "vertical": "PodBrowser-vertical",
                  }
                }
              >
                <hr
                  className="PodBrowser-root"
                />
              </ForwardRef(Divider)>
            </WithStyles(ForwardRef(Divider))>
            <section
              className="PodBrowser-centeredSection"
            >
              <h5
                className="PodBrowser-content-h5"
              >
                Error
              </h5>
              <p>
                There was an error fetching the details.
              </p>
            </section>
          </DetailsError>
        </Contents>
      </AlertContextProvider>
    </ThemeProvider>
  </StylesProvider>
</Component>
`;

exports[`Contents it renders a DetailsLoading component if there's no data and the action is details 1`] = `
<Component
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-ExtraBold": [Function],
        "fonts/Raleway/Raleway-Medium": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#4E4E4E",
          "secondary": "#4E4E4E",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 800,
        "fontWeightLight": 500,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.375rem",
          "fontWeight": 800,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.45,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.125rem",
          "fontWeight": 800,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.27,
        },
        "h3": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.05rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1.2,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.1,
        },
        "h5": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h6": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "0.625rem",
          "fontWeight": 800,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <StylesProvider
    generateClassName={[Function]}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1280,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "iconSet": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "icons": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "label": "SDK Default",
          "licenses": Array [
            "fonts/Raleway/OFL.txt",
          ],
          "localFonts": Object {
            "fonts/Raleway/Raleway-ExtraBold": [Function],
            "fonts/Raleway/Raleway-Medium": [Function],
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "name": "sdk-default",
          "overrides": Object {},
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "adjustAlpha": [Function],
            "augmentColor": [Function],
            "background": Object {
              "default": "#FFFFFF",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#f44336",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(86, 53, 178)",
              "light": "rgb(150, 112, 255)",
              "main": "#7C4DFF",
            },
            "secondary": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#083575",
              "light": "#01C9EA",
              "main": "#18A9E6",
            },
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#4E4E4E",
              "secondary": "#4E4E4E",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {},
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "stylesheets": Array [
            "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
          ],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "body1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 800,
            "fontWeightLight": 500,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.375rem",
              "fontWeight": 800,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.45,
            },
            "h2": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.125rem",
              "fontWeight": 800,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.27,
            },
            "h3": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.05rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1.2,
            },
            "h4": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.1,
            },
            "h5": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1,
            },
            "h6": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "0.625rem",
              "fontWeight": 800,
              "letterSpacing": "0.0075em",
              "lineHeight": 1,
            },
            "heading": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <Contents
        action="details"
        iri="/iri/"
        onUpdate={[Function]}
      >
        <DetailsLoading
          iri="/iri/"
          name="iri"
          onDelete={[Function]}
          onDeleteError={[Function]}
        >
          <section
            className="PodBrowser-centeredSection"
          >
            <h3
              className="PodBrowser-content-h3"
              title="/iri/"
            >
              iri
            </h3>
          </section>
          <WithStyles(ForwardRef(Divider))>
            <ForwardRef(Divider)
              classes={
                Object {
                  "absolute": "PodBrowser-absolute",
                  "flexItem": "PodBrowser-flexItem",
                  "inset": "PodBrowser-inset",
                  "light": "PodBrowser-light",
                  "middle": "PodBrowser-middle",
                  "root": "PodBrowser-root",
                  "vertical": "PodBrowser-vertical",
                }
              }
            >
              <hr
                className="PodBrowser-root"
              />
            </ForwardRef(Divider)>
          </WithStyles(ForwardRef(Divider))>
          <WithStyles(ForwardRef(Accordion))
            disabled={true}
          >
            <ForwardRef(Accordion)
              classes={
                Object {
                  "disabled": "PodBrowser-disabled",
                  "expanded": "PodBrowser-expanded",
                  "root": "PodBrowser-root",
                  "rounded": "PodBrowser-rounded",
                }
              }
              disabled={true}
            >
              <WithStyles(ForwardRef(Paper))
                className="PodBrowser-root PodBrowser-disabled PodBrowser-rounded"
                square={false}
              >
                <ForwardRef(Paper)
                  className="PodBrowser-root PodBrowser-disabled PodBrowser-rounded"
                  classes={
                    Object {
                      "elevation0": "PodBrowser-elevation0",
                      "elevation1": "PodBrowser-elevation1",
                      "elevation10": "PodBrowser-elevation10",
                      "elevation11": "PodBrowser-elevation11",
                      "elevation12": "PodBrowser-elevation12",
                      "elevation13": "PodBrowser-elevation13",
                      "elevation14": "PodBrowser-elevation14",
                      "elevation15": "PodBrowser-elevation15",
                      "elevation16": "PodBrowser-elevation16",
                      "elevation17": "PodBrowser-elevation17",
                      "elevation18": "PodBrowser-elevation18",
                      "elevation19": "PodBrowser-elevation19",
                      "elevation2": "PodBrowser-elevation2",
                      "elevation20": "PodBrowser-elevation20",
                      "elevation21": "PodBrowser-elevation21",
                      "elevation22": "PodBrowser-elevation22",
                      "elevation23": "PodBrowser-elevation23",
                      "elevation24": "PodBrowser-elevation24",
                      "elevation3": "PodBrowser-elevation3",
                      "elevation4": "PodBrowser-elevation4",
                      "elevation5": "PodBrowser-elevation5",
                      "elevation6": "PodBrowser-elevation6",
                      "elevation7": "PodBrowser-elevation7",
                      "elevation8": "PodBrowser-elevation8",
                      "elevation9": "PodBrowser-elevation9",
                      "outlined": "PodBrowser-outlined",
                      "root": "PodBrowser-root",
                      "rounded": "PodBrowser-rounded",
                    }
                  }
                  square={false}
                >
                  <div
                    className="PodBrowser-root PodBrowser-root PodBrowser-disabled PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                  >
                    <WithStyles(ForwardRef(AccordionSummary))
                      key=".0"
                    >
                      <ForwardRef(AccordionSummary)
                        classes={
                          Object {
                            "content": "PodBrowser-content",
                            "disabled": "PodBrowser-disabled",
                            "expandIcon": "PodBrowser-expandIcon",
                            "expanded": "PodBrowser-expanded",
                            "focused": "PodBrowser-focused",
                            "root": "PodBrowser-root",
                          }
                        }
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-expanded={false}
                          className="PodBrowser-root PodBrowser-disabled"
                          component="div"
                          disableRipple={true}
                          disabled={true}
                          focusRipple={false}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocusVisible={[Function]}
                        >
                          <ForwardRef(ButtonBase)
                            aria-expanded={false}
                            className="PodBrowser-root PodBrowser-disabled"
                            classes={
                              Object {
                                "disabled": "PodBrowser-disabled",
                                "focusVisible": "PodBrowser-focusVisible",
                                "root": "PodBrowser-root",
                              }
                            }
                            component="div"
                            disableRipple={true}
                            disabled={true}
                            focusRipple={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocusVisible={[Function]}
                          >
                            <div
                              aria-disabled={true}
                              aria-expanded={false}
                              className="PodBrowser-root PodBrowser-root PodBrowser-disabled PodBrowser-disabled"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={-1}
                            >
                              <div
                                className="PodBrowser-content"
                              >
                                Actions
                              </div>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(AccordionSummary)>
                    </WithStyles(ForwardRef(AccordionSummary))>
                    <WithStyles(ForwardRef(Collapse))
                      in={false}
                      timeout="auto"
                    >
                      <ForwardRef(Collapse)
                        classes={
                          Object {
                            "container": "PodBrowser-container",
                            "entered": "PodBrowser-entered",
                            "hidden": "PodBrowser-hidden",
                            "wrapper": "PodBrowser-wrapper",
                            "wrapperInner": "PodBrowser-wrapperInner",
                          }
                        }
                        in={false}
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <div
                            className="PodBrowser-container PodBrowser-hidden"
                            style={
                              Object {
                                "minHeight": "0px",
                              }
                            }
                          >
                            <div
                              className="PodBrowser-wrapper"
                            >
                              <div
                                className="PodBrowser-wrapperInner"
                              >
                                <div
                                  role="region"
                                />
                              </div>
                            </div>
                          </div>
                        </Transition>
                      </ForwardRef(Collapse)>
                    </WithStyles(ForwardRef(Collapse))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(Accordion)>
          </WithStyles(ForwardRef(Accordion))>
          <WithStyles(ForwardRef(Accordion))
            disabled={true}
          >
            <ForwardRef(Accordion)
              classes={
                Object {
                  "disabled": "PodBrowser-disabled",
                  "expanded": "PodBrowser-expanded",
                  "root": "PodBrowser-root",
                  "rounded": "PodBrowser-rounded",
                }
              }
              disabled={true}
            >
              <WithStyles(ForwardRef(Paper))
                className="PodBrowser-root PodBrowser-disabled PodBrowser-rounded"
                square={false}
              >
                <ForwardRef(Paper)
                  className="PodBrowser-root PodBrowser-disabled PodBrowser-rounded"
                  classes={
                    Object {
                      "elevation0": "PodBrowser-elevation0",
                      "elevation1": "PodBrowser-elevation1",
                      "elevation10": "PodBrowser-elevation10",
                      "elevation11": "PodBrowser-elevation11",
                      "elevation12": "PodBrowser-elevation12",
                      "elevation13": "PodBrowser-elevation13",
                      "elevation14": "PodBrowser-elevation14",
                      "elevation15": "PodBrowser-elevation15",
                      "elevation16": "PodBrowser-elevation16",
                      "elevation17": "PodBrowser-elevation17",
                      "elevation18": "PodBrowser-elevation18",
                      "elevation19": "PodBrowser-elevation19",
                      "elevation2": "PodBrowser-elevation2",
                      "elevation20": "PodBrowser-elevation20",
                      "elevation21": "PodBrowser-elevation21",
                      "elevation22": "PodBrowser-elevation22",
                      "elevation23": "PodBrowser-elevation23",
                      "elevation24": "PodBrowser-elevation24",
                      "elevation3": "PodBrowser-elevation3",
                      "elevation4": "PodBrowser-elevation4",
                      "elevation5": "PodBrowser-elevation5",
                      "elevation6": "PodBrowser-elevation6",
                      "elevation7": "PodBrowser-elevation7",
                      "elevation8": "PodBrowser-elevation8",
                      "elevation9": "PodBrowser-elevation9",
                      "outlined": "PodBrowser-outlined",
                      "root": "PodBrowser-root",
                      "rounded": "PodBrowser-rounded",
                    }
                  }
                  square={false}
                >
                  <div
                    className="PodBrowser-root PodBrowser-root PodBrowser-disabled PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                  >
                    <WithStyles(ForwardRef(AccordionSummary))
                      key=".0"
                    >
                      <ForwardRef(AccordionSummary)
                        classes={
                          Object {
                            "content": "PodBrowser-content",
                            "disabled": "PodBrowser-disabled",
                            "expandIcon": "PodBrowser-expandIcon",
                            "expanded": "PodBrowser-expanded",
                            "focused": "PodBrowser-focused",
                            "root": "PodBrowser-root",
                          }
                        }
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-expanded={false}
                          className="PodBrowser-root PodBrowser-disabled"
                          component="div"
                          disableRipple={true}
                          disabled={true}
                          focusRipple={false}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocusVisible={[Function]}
                        >
                          <ForwardRef(ButtonBase)
                            aria-expanded={false}
                            className="PodBrowser-root PodBrowser-disabled"
                            classes={
                              Object {
                                "disabled": "PodBrowser-disabled",
                                "focusVisible": "PodBrowser-focusVisible",
                                "root": "PodBrowser-root",
                              }
                            }
                            component="div"
                            disableRipple={true}
                            disabled={true}
                            focusRipple={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocusVisible={[Function]}
                          >
                            <div
                              aria-disabled={true}
                              aria-expanded={false}
                              className="PodBrowser-root PodBrowser-root PodBrowser-disabled PodBrowser-disabled"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={-1}
                            >
                              <div
                                className="PodBrowser-content"
                              >
                                Details
                              </div>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(AccordionSummary)>
                    </WithStyles(ForwardRef(AccordionSummary))>
                    <WithStyles(ForwardRef(Collapse))
                      in={false}
                      timeout="auto"
                    >
                      <ForwardRef(Collapse)
                        classes={
                          Object {
                            "container": "PodBrowser-container",
                            "entered": "PodBrowser-entered",
                            "hidden": "PodBrowser-hidden",
                            "wrapper": "PodBrowser-wrapper",
                            "wrapperInner": "PodBrowser-wrapperInner",
                          }
                        }
                        in={false}
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <div
                            className="PodBrowser-container PodBrowser-hidden"
                            style={
                              Object {
                                "minHeight": "0px",
                              }
                            }
                          >
                            <div
                              className="PodBrowser-wrapper"
                            >
                              <div
                                className="PodBrowser-wrapperInner"
                              >
                                <div
                                  role="region"
                                />
                              </div>
                            </div>
                          </div>
                        </Transition>
                      </ForwardRef(Collapse)>
                    </WithStyles(ForwardRef(Collapse))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(Accordion)>
          </WithStyles(ForwardRef(Accordion))>
          <WithStyles(ForwardRef(Accordion))
            disabled={true}
          >
            <ForwardRef(Accordion)
              classes={
                Object {
                  "disabled": "PodBrowser-disabled",
                  "expanded": "PodBrowser-expanded",
                  "root": "PodBrowser-root",
                  "rounded": "PodBrowser-rounded",
                }
              }
              disabled={true}
            >
              <WithStyles(ForwardRef(Paper))
                className="PodBrowser-root PodBrowser-disabled PodBrowser-rounded"
                square={false}
              >
                <ForwardRef(Paper)
                  className="PodBrowser-root PodBrowser-disabled PodBrowser-rounded"
                  classes={
                    Object {
                      "elevation0": "PodBrowser-elevation0",
                      "elevation1": "PodBrowser-elevation1",
                      "elevation10": "PodBrowser-elevation10",
                      "elevation11": "PodBrowser-elevation11",
                      "elevation12": "PodBrowser-elevation12",
                      "elevation13": "PodBrowser-elevation13",
                      "elevation14": "PodBrowser-elevation14",
                      "elevation15": "PodBrowser-elevation15",
                      "elevation16": "PodBrowser-elevation16",
                      "elevation17": "PodBrowser-elevation17",
                      "elevation18": "PodBrowser-elevation18",
                      "elevation19": "PodBrowser-elevation19",
                      "elevation2": "PodBrowser-elevation2",
                      "elevation20": "PodBrowser-elevation20",
                      "elevation21": "PodBrowser-elevation21",
                      "elevation22": "PodBrowser-elevation22",
                      "elevation23": "PodBrowser-elevation23",
                      "elevation24": "PodBrowser-elevation24",
                      "elevation3": "PodBrowser-elevation3",
                      "elevation4": "PodBrowser-elevation4",
                      "elevation5": "PodBrowser-elevation5",
                      "elevation6": "PodBrowser-elevation6",
                      "elevation7": "PodBrowser-elevation7",
                      "elevation8": "PodBrowser-elevation8",
                      "elevation9": "PodBrowser-elevation9",
                      "outlined": "PodBrowser-outlined",
                      "root": "PodBrowser-root",
                      "rounded": "PodBrowser-rounded",
                    }
                  }
                  square={false}
                >
                  <div
                    className="PodBrowser-root PodBrowser-root PodBrowser-disabled PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                  >
                    <WithStyles(ForwardRef(AccordionSummary))
                      key=".0"
                    >
                      <ForwardRef(AccordionSummary)
                        classes={
                          Object {
                            "content": "PodBrowser-content",
                            "disabled": "PodBrowser-disabled",
                            "expandIcon": "PodBrowser-expandIcon",
                            "expanded": "PodBrowser-expanded",
                            "focused": "PodBrowser-focused",
                            "root": "PodBrowser-root",
                          }
                        }
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-expanded={false}
                          className="PodBrowser-root PodBrowser-disabled"
                          component="div"
                          disableRipple={true}
                          disabled={true}
                          focusRipple={false}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocusVisible={[Function]}
                        >
                          <ForwardRef(ButtonBase)
                            aria-expanded={false}
                            className="PodBrowser-root PodBrowser-disabled"
                            classes={
                              Object {
                                "disabled": "PodBrowser-disabled",
                                "focusVisible": "PodBrowser-focusVisible",
                                "root": "PodBrowser-root",
                              }
                            }
                            component="div"
                            disableRipple={true}
                            disabled={true}
                            focusRipple={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocusVisible={[Function]}
                          >
                            <div
                              aria-disabled={true}
                              aria-expanded={false}
                              className="PodBrowser-root PodBrowser-root PodBrowser-disabled PodBrowser-disabled"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={-1}
                            >
                              <div
                                className="PodBrowser-content"
                              >
                                Permissions
                              </div>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(AccordionSummary)>
                    </WithStyles(ForwardRef(AccordionSummary))>
                    <WithStyles(ForwardRef(Collapse))
                      in={false}
                      timeout="auto"
                    >
                      <ForwardRef(Collapse)
                        classes={
                          Object {
                            "container": "PodBrowser-container",
                            "entered": "PodBrowser-entered",
                            "hidden": "PodBrowser-hidden",
                            "wrapper": "PodBrowser-wrapper",
                            "wrapperInner": "PodBrowser-wrapperInner",
                          }
                        }
                        in={false}
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <div
                            className="PodBrowser-container PodBrowser-hidden"
                            style={
                              Object {
                                "minHeight": "0px",
                              }
                            }
                          >
                            <div
                              className="PodBrowser-wrapper"
                            >
                              <div
                                className="PodBrowser-wrapperInner"
                              >
                                <div
                                  role="region"
                                />
                              </div>
                            </div>
                          </div>
                        </Transition>
                      </ForwardRef(Collapse)>
                    </WithStyles(ForwardRef(Collapse))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(Accordion)>
          </WithStyles(ForwardRef(Accordion))>
        </DetailsLoading>
      </Contents>
    </ThemeProvider>
  </StylesProvider>
</Component>
`;

exports[`Contents it renders a ResourceDetails component when there's data and the action is details 1`] = `
<Component
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-ExtraBold": [Function],
        "fonts/Raleway/Raleway-Medium": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#4E4E4E",
          "secondary": "#4E4E4E",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 800,
        "fontWeightLight": 500,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.375rem",
          "fontWeight": 800,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.45,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.125rem",
          "fontWeight": 800,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.27,
        },
        "h3": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.05rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1.2,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.1,
        },
        "h5": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h6": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "0.625rem",
          "fontWeight": 800,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <StylesProvider
    generateClassName={[Function]}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1280,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "iconSet": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "icons": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "label": "SDK Default",
          "licenses": Array [
            "fonts/Raleway/OFL.txt",
          ],
          "localFonts": Object {
            "fonts/Raleway/Raleway-ExtraBold": [Function],
            "fonts/Raleway/Raleway-Medium": [Function],
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "name": "sdk-default",
          "overrides": Object {},
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "adjustAlpha": [Function],
            "augmentColor": [Function],
            "background": Object {
              "default": "#FFFFFF",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#f44336",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(86, 53, 178)",
              "light": "rgb(150, 112, 255)",
              "main": "#7C4DFF",
            },
            "secondary": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#083575",
              "light": "#01C9EA",
              "main": "#18A9E6",
            },
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#4E4E4E",
              "secondary": "#4E4E4E",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {},
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "stylesheets": Array [
            "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
          ],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "body1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 800,
            "fontWeightLight": 500,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.375rem",
              "fontWeight": 800,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.45,
            },
            "h2": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.125rem",
              "fontWeight": 800,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.27,
            },
            "h3": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.05rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1.2,
            },
            "h4": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.1,
            },
            "h5": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1,
            },
            "h6": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "0.625rem",
              "fontWeight": 800,
              "letterSpacing": "0.0075em",
              "lineHeight": 1,
            },
            "heading": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <MockedSessionContextProvider>
        <g
          session={
            Object {
              "fetch": [MockFunction],
              "handleIncomingRedirect": [MockFunction] {
                "calls": Array [
                  Array [
                    "http://localhost/",
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": Promise {},
                  },
                ],
              },
              "info": Object {
                "isLoggedIn": true,
                "sessionId": "some-session-id",
                "webId": "http://example.com/webId#me",
              },
              "on": [MockFunction] {
                "calls": Array [
                  Array [
                    "logout",
                    [Function],
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
            }
          }
          sessionId="test-session"
          sessionRequestInProgress={false}
        >
          <Contents
            action="details"
            iri="/iri/"
            onUpdate={[Function]}
          >
            <ResourceDetails
              onDelete={[Function]}
              onDeleteError={[Function]}
              resource={
                Object {
                  "iri": "/iri/",
                  "name": "iri",
                  "permissions": Array [
                    Object {
                      "acl": Object {
                        "append": true,
                        "control": true,
                        "read": true,
                        "write": true,
                      },
                      "alias": "Full Control",
                      "webId": "webId",
                    },
                  ],
                  "types": Array [
                    "Container",
                  ],
                }
              }
            >
              <section
                className="PodBrowser-headerSection"
              >
                <h3
                  className="PodBrowser-content-h3"
                  data-testid="resource-title"
                  title="/iri/"
                >
                  iri
                </h3>
              </section>
              <WithStyles(ForwardRef(Divider))>
                <ForwardRef(Divider)
                  classes={
                    Object {
                      "absolute": "PodBrowser-absolute",
                      "flexItem": "PodBrowser-flexItem",
                      "inset": "PodBrowser-inset",
                      "light": "PodBrowser-light",
                      "middle": "PodBrowser-middle",
                      "root": "PodBrowser-root",
                      "vertical": "PodBrowser-vertical",
                    }
                  }
                >
                  <hr
                    className="PodBrowser-root"
                  />
                </ForwardRef(Divider)>
              </WithStyles(ForwardRef(Divider))>
              <section
                className="PodBrowser-centeredSection"
              >
                <h5
                  className="PodBrowser-content-h5"
                >
                  Actions
                </h5>
                <WithStyles(ForwardRef(List))>
                  <ForwardRef(List)
                    classes={
                      Object {
                        "dense": "PodBrowser-dense",
                        "padding": "PodBrowser-padding",
                        "root": "PodBrowser-root",
                        "subheader": "PodBrowser-subheader",
                      }
                    }
                  >
                    <ul
                      className="PodBrowser-root PodBrowser-padding"
                    >
                      <WithStyles(ForwardRef(ListItem))
                        button={true}
                        component={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          }
                        }
                        resourceIri="/iri/"
                      >
                        <ForwardRef(ListItem)
                          button={true}
                          classes={
                            Object {
                              "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                              "button": "PodBrowser-button",
                              "container": "PodBrowser-container",
                              "dense": "PodBrowser-dense",
                              "disabled": "PodBrowser-disabled",
                              "divider": "PodBrowser-divider",
                              "focusVisible": "PodBrowser-focusVisible",
                              "gutters": "PodBrowser-gutters",
                              "root": "PodBrowser-root",
                              "secondaryAction": "PodBrowser-secondaryAction",
                              "selected": "PodBrowser-selected",
                            }
                          }
                          component={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            }
                          }
                          resourceIri="/iri/"
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            className="PodBrowser-root PodBrowser-gutters PodBrowser-button"
                            component={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              }
                            }
                            disabled={false}
                            focusVisibleClassName="PodBrowser-focusVisible"
                            resourceIri="/iri/"
                          >
                            <ForwardRef(ButtonBase)
                              className="PodBrowser-root PodBrowser-gutters PodBrowser-button"
                              classes={
                                Object {
                                  "disabled": "PodBrowser-disabled",
                                  "focusVisible": "PodBrowser-focusVisible",
                                  "root": "PodBrowser-root",
                                }
                              }
                              component={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                }
                              }
                              disabled={false}
                              focusVisibleClassName="PodBrowser-focusVisible"
                              resourceIri="/iri/"
                            >
                              <ForwardRef
                                aria-disabled={false}
                                className="PodBrowser-root PodBrowser-root PodBrowser-gutters PodBrowser-button"
                                onBlur={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                resourceIri="/iri/"
                                role="button"
                                tabIndex={0}
                              >
                                <ResourceLink
                                  action="sharing"
                                  aria-disabled={false}
                                  className="PodBrowser-root PodBrowser-root PodBrowser-gutters PodBrowser-button"
                                  containerIri={null}
                                  data-testid="share-permissions-button"
                                  onBlur={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  resourceIri="/iri/"
                                  role="button"
                                  tabIndex={0}
                                >
                                  <Link
                                    as={
                                      Object {
                                        "pathname": "/resource/[iri]",
                                        "query": Object {
                                          "action": "sharing",
                                          "resourceIri": "/iri/",
                                        },
                                      }
                                    }
                                    href={
                                      Object {
                                        "pathname": "/resource/[iri]",
                                        "query": Object {
                                          "action": "sharing",
                                          "resourceIri": "/iri/",
                                        },
                                      }
                                    }
                                    replace={true}
                                  >
                                    <a
                                      aria-disabled={false}
                                      className="PodBrowser-root PodBrowser-root PodBrowser-gutters PodBrowser-button"
                                      data-testid="share-permissions-button"
                                      href="/resource/[iri]?action=sharing&resourceIri=%2Firi%2F"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      <WithStyles(ForwardRef(ListItemIcon))
                                        key=".0"
                                      >
                                        <ForwardRef(ListItemIcon)
                                          classes={
                                            Object {
                                              "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                              "root": "PodBrowser-root",
                                            }
                                          }
                                        >
                                          <div
                                            className="PodBrowser-root"
                                          >
                                            <ForwardRef>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "PodBrowser-colorAction",
                                                      "colorDisabled": "PodBrowser-colorDisabled",
                                                      "colorError": "PodBrowser-colorError",
                                                      "colorPrimary": "PodBrowser-colorPrimary",
                                                      "colorSecondary": "PodBrowser-colorSecondary",
                                                      "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                      "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                      "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                      "root": "PodBrowser-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="PodBrowser-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </div>
                                        </ForwardRef(ListItemIcon)>
                                      </WithStyles(ForwardRef(ListItemIcon))>
                                      <WithStyles(ForwardRef(ListItemText))
                                        key=".1"
                                        primary="Sharing & App Permissions"
                                      >
                                        <ForwardRef(ListItemText)
                                          classes={
                                            Object {
                                              "dense": "PodBrowser-dense",
                                              "inset": "PodBrowser-inset",
                                              "multiline": "PodBrowser-multiline",
                                              "primary": "PodBrowser-primary",
                                              "root": "PodBrowser-root",
                                              "secondary": "PodBrowser-secondary",
                                            }
                                          }
                                          primary="Sharing & App Permissions"
                                        >
                                          <div
                                            className="PodBrowser-root"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              className="PodBrowser-primary"
                                              component="span"
                                              display="block"
                                              variant="body1"
                                            >
                                              <ForwardRef(Typography)
                                                className="PodBrowser-primary"
                                                classes={
                                                  Object {
                                                    "alignCenter": "PodBrowser-alignCenter",
                                                    "alignJustify": "PodBrowser-alignJustify",
                                                    "alignLeft": "PodBrowser-alignLeft",
                                                    "alignRight": "PodBrowser-alignRight",
                                                    "body1": "PodBrowser-body1",
                                                    "body2": "PodBrowser-body2",
                                                    "button": "PodBrowser-button",
                                                    "caption": "PodBrowser-caption",
                                                    "colorError": "PodBrowser-colorError",
                                                    "colorInherit": "PodBrowser-colorInherit",
                                                    "colorPrimary": "PodBrowser-colorPrimary",
                                                    "colorSecondary": "PodBrowser-colorSecondary",
                                                    "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                    "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                    "displayBlock": "PodBrowser-displayBlock",
                                                    "displayInline": "PodBrowser-displayInline",
                                                    "gutterBottom": "PodBrowser-gutterBottom",
                                                    "h1": "PodBrowser-h1",
                                                    "h2": "PodBrowser-h2",
                                                    "h3": "PodBrowser-h3",
                                                    "h4": "PodBrowser-h4",
                                                    "h5": "PodBrowser-h5",
                                                    "h6": "PodBrowser-h6",
                                                    "noWrap": "PodBrowser-noWrap",
                                                    "overline": "PodBrowser-overline",
                                                    "paragraph": "PodBrowser-paragraph",
                                                    "root": "PodBrowser-root",
                                                    "srOnly": "PodBrowser-srOnly",
                                                    "subtitle1": "PodBrowser-subtitle1",
                                                    "subtitle2": "PodBrowser-subtitle2",
                                                  }
                                                }
                                                component="span"
                                                display="block"
                                                variant="body1"
                                              >
                                                <span
                                                  className="PodBrowser-root PodBrowser-primary PodBrowser-body1 PodBrowser-displayBlock"
                                                >
                                                  Sharing & App Permissions
                                                </span>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </div>
                                        </ForwardRef(ListItemText)>
                                      </WithStyles(ForwardRef(ListItemText))>
                                      <WithStyles(memo)
                                        center={false}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "PodBrowser-child",
                                              "childLeaving": "PodBrowser-childLeaving",
                                              "childPulsate": "PodBrowser-childPulsate",
                                              "ripple": "PodBrowser-ripple",
                                              "ripplePulsate": "PodBrowser-ripplePulsate",
                                              "rippleVisible": "PodBrowser-rippleVisible",
                                              "root": "PodBrowser-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="PodBrowser-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </a>
                                  </Link>
                                </ResourceLink>
                              </ForwardRef>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(ListItem)>
                      </WithStyles(ForwardRef(ListItem))>
                      <WithStyles(ForwardRef(ListItem))
                        button={true}
                        component={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          }
                        }
                        name="iri"
                        onDelete={[Function]}
                        onDeleteError={[Function]}
                        resourceIri="/iri/"
                      >
                        <ForwardRef(ListItem)
                          button={true}
                          classes={
                            Object {
                              "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                              "button": "PodBrowser-button",
                              "container": "PodBrowser-container",
                              "dense": "PodBrowser-dense",
                              "disabled": "PodBrowser-disabled",
                              "divider": "PodBrowser-divider",
                              "focusVisible": "PodBrowser-focusVisible",
                              "gutters": "PodBrowser-gutters",
                              "root": "PodBrowser-root",
                              "secondaryAction": "PodBrowser-secondaryAction",
                              "selected": "PodBrowser-selected",
                            }
                          }
                          component={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            }
                          }
                          name="iri"
                          onDelete={[Function]}
                          onDeleteError={[Function]}
                          resourceIri="/iri/"
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            className="PodBrowser-root PodBrowser-gutters PodBrowser-button"
                            component={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              }
                            }
                            disabled={false}
                            focusVisibleClassName="PodBrowser-focusVisible"
                            name="iri"
                            onDelete={[Function]}
                            onDeleteError={[Function]}
                            resourceIri="/iri/"
                          >
                            <ForwardRef(ButtonBase)
                              className="PodBrowser-root PodBrowser-gutters PodBrowser-button"
                              classes={
                                Object {
                                  "disabled": "PodBrowser-disabled",
                                  "focusVisible": "PodBrowser-focusVisible",
                                  "root": "PodBrowser-root",
                                }
                              }
                              component={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                }
                              }
                              disabled={false}
                              focusVisibleClassName="PodBrowser-focusVisible"
                              name="iri"
                              onDelete={[Function]}
                              onDeleteError={[Function]}
                              resourceIri="/iri/"
                            >
                              <ForwardRef
                                aria-disabled={false}
                                className="PodBrowser-root PodBrowser-root PodBrowser-gutters PodBrowser-button"
                                name="iri"
                                onBlur={[Function]}
                                onDelete={[Function]}
                                onDeleteError={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                resourceIri="/iri/"
                                role="button"
                                tabIndex={0}
                              >
                                <a
                                  aria-disabled={false}
                                  className="PodBrowser-root PodBrowser-root PodBrowser-gutters PodBrowser-button"
                                  data-testid="delete-button"
                                  href="#delete"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <WithStyles(ForwardRef(ListItemIcon))
                                    key=".0"
                                  >
                                    <ForwardRef(ListItemIcon)
                                      classes={
                                        Object {
                                          "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                          "root": "PodBrowser-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="PodBrowser-root"
                                      >
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "PodBrowser-colorAction",
                                                  "colorDisabled": "PodBrowser-colorDisabled",
                                                  "colorError": "PodBrowser-colorError",
                                                  "colorPrimary": "PodBrowser-colorPrimary",
                                                  "colorSecondary": "PodBrowser-colorSecondary",
                                                  "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                  "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                  "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                  "root": "PodBrowser-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="PodBrowser-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </div>
                                    </ForwardRef(ListItemIcon)>
                                  </WithStyles(ForwardRef(ListItemIcon))>
                                  <WithStyles(ForwardRef(ListItemText))
                                    key=".1"
                                    primary="Delete"
                                  >
                                    <ForwardRef(ListItemText)
                                      classes={
                                        Object {
                                          "dense": "PodBrowser-dense",
                                          "inset": "PodBrowser-inset",
                                          "multiline": "PodBrowser-multiline",
                                          "primary": "PodBrowser-primary",
                                          "root": "PodBrowser-root",
                                          "secondary": "PodBrowser-secondary",
                                        }
                                      }
                                      primary="Delete"
                                    >
                                      <div
                                        className="PodBrowser-root"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="PodBrowser-primary"
                                          component="span"
                                          display="block"
                                          variant="body1"
                                        >
                                          <ForwardRef(Typography)
                                            className="PodBrowser-primary"
                                            classes={
                                              Object {
                                                "alignCenter": "PodBrowser-alignCenter",
                                                "alignJustify": "PodBrowser-alignJustify",
                                                "alignLeft": "PodBrowser-alignLeft",
                                                "alignRight": "PodBrowser-alignRight",
                                                "body1": "PodBrowser-body1",
                                                "body2": "PodBrowser-body2",
                                                "button": "PodBrowser-button",
                                                "caption": "PodBrowser-caption",
                                                "colorError": "PodBrowser-colorError",
                                                "colorInherit": "PodBrowser-colorInherit",
                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                "displayBlock": "PodBrowser-displayBlock",
                                                "displayInline": "PodBrowser-displayInline",
                                                "gutterBottom": "PodBrowser-gutterBottom",
                                                "h1": "PodBrowser-h1",
                                                "h2": "PodBrowser-h2",
                                                "h3": "PodBrowser-h3",
                                                "h4": "PodBrowser-h4",
                                                "h5": "PodBrowser-h5",
                                                "h6": "PodBrowser-h6",
                                                "noWrap": "PodBrowser-noWrap",
                                                "overline": "PodBrowser-overline",
                                                "paragraph": "PodBrowser-paragraph",
                                                "root": "PodBrowser-root",
                                                "srOnly": "PodBrowser-srOnly",
                                                "subtitle1": "PodBrowser-subtitle1",
                                                "subtitle2": "PodBrowser-subtitle2",
                                              }
                                            }
                                            component="span"
                                            display="block"
                                            variant="body1"
                                          >
                                            <span
                                              className="PodBrowser-root PodBrowser-primary PodBrowser-body1 PodBrowser-displayBlock"
                                            >
                                              Delete
                                            </span>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(ListItemText)>
                                  </WithStyles(ForwardRef(ListItemText))>
                                  <WithStyles(memo)
                                    center={false}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={false}
                                      classes={
                                        Object {
                                          "child": "PodBrowser-child",
                                          "childLeaving": "PodBrowser-childLeaving",
                                          "childPulsate": "PodBrowser-childPulsate",
                                          "ripple": "PodBrowser-ripple",
                                          "ripplePulsate": "PodBrowser-ripplePulsate",
                                          "rippleVisible": "PodBrowser-rippleVisible",
                                          "root": "PodBrowser-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="PodBrowser-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(memo)>
                                </a>
                              </ForwardRef>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(ListItem)>
                      </WithStyles(ForwardRef(ListItem))>
                    </ul>
                  </ForwardRef(List)>
                </WithStyles(ForwardRef(List))>
              </section>
              <WithStyles(ForwardRef(Divider))>
                <ForwardRef(Divider)
                  classes={
                    Object {
                      "absolute": "PodBrowser-absolute",
                      "flexItem": "PodBrowser-flexItem",
                      "inset": "PodBrowser-inset",
                      "light": "PodBrowser-light",
                      "middle": "PodBrowser-middle",
                      "root": "PodBrowser-root",
                      "vertical": "PodBrowser-vertical",
                    }
                  }
                >
                  <hr
                    className="PodBrowser-root"
                  />
                </ForwardRef(Divider)>
              </WithStyles(ForwardRef(Divider))>
              <section
                className="PodBrowser-centeredSection"
              >
                <h5
                  className="PodBrowser-content-h5"
                >
                  Details
                </h5>
              </section>
              <WithStyles(ForwardRef(Divider))>
                <ForwardRef(Divider)
                  classes={
                    Object {
                      "absolute": "PodBrowser-absolute",
                      "flexItem": "PodBrowser-flexItem",
                      "inset": "PodBrowser-inset",
                      "light": "PodBrowser-light",
                      "middle": "PodBrowser-middle",
                      "root": "PodBrowser-root",
                      "vertical": "PodBrowser-vertical",
                    }
                  }
                >
                  <hr
                    className="PodBrowser-root"
                  />
                </ForwardRef(Divider)>
              </WithStyles(ForwardRef(Divider))>
              <section
                className="PodBrowser-centeredSection"
              >
                <WithStyles(ForwardRef(List))>
                  <ForwardRef(List)
                    classes={
                      Object {
                        "dense": "PodBrowser-dense",
                        "padding": "PodBrowser-padding",
                        "root": "PodBrowser-root",
                        "subheader": "PodBrowser-subheader",
                      }
                    }
                  >
                    <ul
                      className="PodBrowser-root PodBrowser-padding"
                    >
                      <WithStyles(ForwardRef(ListItem))
                        className="PodBrowser-listItem"
                      >
                        <ForwardRef(ListItem)
                          className="PodBrowser-listItem"
                          classes={
                            Object {
                              "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                              "button": "PodBrowser-button",
                              "container": "PodBrowser-container",
                              "dense": "PodBrowser-dense",
                              "disabled": "PodBrowser-disabled",
                              "divider": "PodBrowser-divider",
                              "focusVisible": "PodBrowser-focusVisible",
                              "gutters": "PodBrowser-gutters",
                              "root": "PodBrowser-root",
                              "secondaryAction": "PodBrowser-secondaryAction",
                              "selected": "PodBrowser-selected",
                            }
                          }
                        >
                          <li
                            className="PodBrowser-root PodBrowser-listItem PodBrowser-gutters"
                            disabled={false}
                          >
                            <WithStyles(ForwardRef(Typography))
                              className="PodBrowser-detailText"
                              key=".0"
                            >
                              <ForwardRef(Typography)
                                className="PodBrowser-detailText"
                                classes={
                                  Object {
                                    "alignCenter": "PodBrowser-alignCenter",
                                    "alignJustify": "PodBrowser-alignJustify",
                                    "alignLeft": "PodBrowser-alignLeft",
                                    "alignRight": "PodBrowser-alignRight",
                                    "body1": "PodBrowser-body1",
                                    "body2": "PodBrowser-body2",
                                    "button": "PodBrowser-button",
                                    "caption": "PodBrowser-caption",
                                    "colorError": "PodBrowser-colorError",
                                    "colorInherit": "PodBrowser-colorInherit",
                                    "colorPrimary": "PodBrowser-colorPrimary",
                                    "colorSecondary": "PodBrowser-colorSecondary",
                                    "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                    "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                    "displayBlock": "PodBrowser-displayBlock",
                                    "displayInline": "PodBrowser-displayInline",
                                    "gutterBottom": "PodBrowser-gutterBottom",
                                    "h1": "PodBrowser-h1",
                                    "h2": "PodBrowser-h2",
                                    "h3": "PodBrowser-h3",
                                    "h4": "PodBrowser-h4",
                                    "h5": "PodBrowser-h5",
                                    "h6": "PodBrowser-h6",
                                    "noWrap": "PodBrowser-noWrap",
                                    "overline": "PodBrowser-overline",
                                    "paragraph": "PodBrowser-paragraph",
                                    "root": "PodBrowser-root",
                                    "srOnly": "PodBrowser-srOnly",
                                    "subtitle1": "PodBrowser-subtitle1",
                                    "subtitle2": "PodBrowser-subtitle2",
                                  }
                                }
                              >
                                <p
                                  className="PodBrowser-root PodBrowser-detailText PodBrowser-body1"
                                >
                                  Thing Type:
                                </p>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                            <WithStyles(ForwardRef(Typography))
                              className="PodBrowser-typeValue PodBrowser-detailText"
                              key=".1"
                            >
                              <ForwardRef(Typography)
                                className="PodBrowser-typeValue PodBrowser-detailText"
                                classes={
                                  Object {
                                    "alignCenter": "PodBrowser-alignCenter",
                                    "alignJustify": "PodBrowser-alignJustify",
                                    "alignLeft": "PodBrowser-alignLeft",
                                    "alignRight": "PodBrowser-alignRight",
                                    "body1": "PodBrowser-body1",
                                    "body2": "PodBrowser-body2",
                                    "button": "PodBrowser-button",
                                    "caption": "PodBrowser-caption",
                                    "colorError": "PodBrowser-colorError",
                                    "colorInherit": "PodBrowser-colorInherit",
                                    "colorPrimary": "PodBrowser-colorPrimary",
                                    "colorSecondary": "PodBrowser-colorSecondary",
                                    "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                    "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                    "displayBlock": "PodBrowser-displayBlock",
                                    "displayInline": "PodBrowser-displayInline",
                                    "gutterBottom": "PodBrowser-gutterBottom",
                                    "h1": "PodBrowser-h1",
                                    "h2": "PodBrowser-h2",
                                    "h3": "PodBrowser-h3",
                                    "h4": "PodBrowser-h4",
                                    "h5": "PodBrowser-h5",
                                    "h6": "PodBrowser-h6",
                                    "noWrap": "PodBrowser-noWrap",
                                    "overline": "PodBrowser-overline",
                                    "paragraph": "PodBrowser-paragraph",
                                    "root": "PodBrowser-root",
                                    "srOnly": "PodBrowser-srOnly",
                                    "subtitle1": "PodBrowser-subtitle1",
                                    "subtitle2": "PodBrowser-subtitle2",
                                  }
                                }
                              >
                                <p
                                  className="PodBrowser-root PodBrowser-typeValue PodBrowser-detailText PodBrowser-body1"
                                >
                                  Container
                                </p>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </li>
                        </ForwardRef(ListItem)>
                      </WithStyles(ForwardRef(ListItem))>
                    </ul>
                  </ForwardRef(List)>
                </WithStyles(ForwardRef(List))>
              </section>
              <WithStyles(ForwardRef(Divider))>
                <ForwardRef(Divider)
                  classes={
                    Object {
                      "absolute": "PodBrowser-absolute",
                      "flexItem": "PodBrowser-flexItem",
                      "inset": "PodBrowser-inset",
                      "light": "PodBrowser-light",
                      "middle": "PodBrowser-middle",
                      "root": "PodBrowser-root",
                      "vertical": "PodBrowser-vertical",
                    }
                  }
                >
                  <hr
                    className="PodBrowser-root"
                  />
                </ForwardRef(Divider)>
              </WithStyles(ForwardRef(Divider))>
              <section
                className="PodBrowser-centeredSection"
              >
                <DownloadLink
                  className="PodBrowser-downloadButton"
                  iri="/iri/"
                  type="Container"
                />
              </section>
            </ResourceDetails>
          </Contents>
        </g>
      </MockedSessionContextProvider>
    </ThemeProvider>
  </StylesProvider>
</Component>
`;

exports[`Contents it renders a ResourceSharing component when there's data and the action is sharing 1`] = `
<Component
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-ExtraBold": [Function],
        "fonts/Raleway/Raleway-Medium": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#4E4E4E",
          "secondary": "#4E4E4E",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 800,
        "fontWeightLight": 500,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.375rem",
          "fontWeight": 800,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.45,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.125rem",
          "fontWeight": 800,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.27,
        },
        "h3": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.05rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1.2,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.1,
        },
        "h5": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h6": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "0.625rem",
          "fontWeight": 800,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <StylesProvider
    generateClassName={[Function]}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1280,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "iconSet": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "icons": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "label": "SDK Default",
          "licenses": Array [
            "fonts/Raleway/OFL.txt",
          ],
          "localFonts": Object {
            "fonts/Raleway/Raleway-ExtraBold": [Function],
            "fonts/Raleway/Raleway-Medium": [Function],
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "name": "sdk-default",
          "overrides": Object {},
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "adjustAlpha": [Function],
            "augmentColor": [Function],
            "background": Object {
              "default": "#FFFFFF",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#f44336",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(86, 53, 178)",
              "light": "rgb(150, 112, 255)",
              "main": "#7C4DFF",
            },
            "secondary": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#083575",
              "light": "#01C9EA",
              "main": "#18A9E6",
            },
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#4E4E4E",
              "secondary": "#4E4E4E",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {},
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "stylesheets": Array [
            "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
          ],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "body1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 800,
            "fontWeightLight": 500,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.375rem",
              "fontWeight": 800,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.45,
            },
            "h2": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.125rem",
              "fontWeight": 800,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.27,
            },
            "h3": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.05rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1.2,
            },
            "h4": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.1,
            },
            "h5": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1,
            },
            "h6": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "0.625rem",
              "fontWeight": 800,
              "letterSpacing": "0.0075em",
              "lineHeight": 1,
            },
            "heading": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
<<<<<<< master
      <MockedSessionContextProvider>
        <g
          session={
            Object {
              "fetch": [MockFunction],
              "handleIncomingRedirect": [MockFunction] {
                "calls": Array [
                  Array [
                    "http://localhost/",
                  ],
                ],
                "results": Array [
=======
      <AlertContextProvider>
        <Contents
          action="sharing"
          iri="/iri/"
          onUpdate={[Function]}
        >
          <ResourceDetails
            onDelete={[Function]}
            onDeleteError={[Function]}
            resource={
              Object {
                "dataset": Object {},
                "defaultPermissions": Array [],
                "iri": "/iri/",
                "name": "iri",
                "permissions": Array [
>>>>>>> Partial work (saving before introducing context for resource)
                  Object {
                    "acl": Object {
                      "append": true,
                      "control": true,
                      "read": true,
                      "write": true,
                    },
                    "alias": "Full Control",
                    "profile": Object {
                      "avatar": "/avatar",
                      "webId": "webId",
                    },
                    "webId": "webId",
                  },
                  Object {
                    "acl": Object {
                      "append": true,
                      "control": true,
                      "read": true,
                      "write": true,
                    },
                    "alias": "Full Control",
                    "profile": Object {
                      "avatar": "/avatar",
                      "webId": "collaborator",
                    },
                    "webId": "collaborator",
                  },
                ],
                "types": Array [
                  "Container",
                ],
              }
            }
          >
            <section
              className="PodBrowser-headerSection"
            >
              <h3
                className="PodBrowser-content-h3"
                data-testid="resource-title"
                title="/iri/"
              >
                iri
              </h3>
            </section>
            <WithStyles(ForwardRef(Divider))>
              <ForwardRef(Divider)
                classes={
                  Object {
                    "absolute": "PodBrowser-absolute",
                    "flexItem": "PodBrowser-flexItem",
                    "inset": "PodBrowser-inset",
                    "light": "PodBrowser-light",
                    "middle": "PodBrowser-middle",
                    "root": "PodBrowser-root",
                    "vertical": "PodBrowser-vertical",
                  }
                }
              >
                <hr
                  className="PodBrowser-root"
                />
              </ForwardRef(Divider)>
            </WithStyles(ForwardRef(Divider))>
            <WithStyles(ForwardRef(Accordion))
              defaultExpanded={true}
            >
              <ForwardRef(Accordion)
                classes={
                  Object {
                    "disabled": "PodBrowser-disabled",
                    "expanded": "PodBrowser-expanded",
                    "root": "PodBrowser-root",
                    "rounded": "PodBrowser-rounded",
                  }
                }
                defaultExpanded={true}
              >
                <WithStyles(ForwardRef(Paper))
                  className="PodBrowser-root PodBrowser-expanded PodBrowser-rounded"
                  square={false}
                >
                  <ForwardRef(Paper)
                    className="PodBrowser-root PodBrowser-expanded PodBrowser-rounded"
                    classes={
                      Object {
                        "elevation0": "PodBrowser-elevation0",
                        "elevation1": "PodBrowser-elevation1",
                        "elevation10": "PodBrowser-elevation10",
                        "elevation11": "PodBrowser-elevation11",
                        "elevation12": "PodBrowser-elevation12",
                        "elevation13": "PodBrowser-elevation13",
                        "elevation14": "PodBrowser-elevation14",
                        "elevation15": "PodBrowser-elevation15",
                        "elevation16": "PodBrowser-elevation16",
                        "elevation17": "PodBrowser-elevation17",
                        "elevation18": "PodBrowser-elevation18",
                        "elevation19": "PodBrowser-elevation19",
                        "elevation2": "PodBrowser-elevation2",
                        "elevation20": "PodBrowser-elevation20",
                        "elevation21": "PodBrowser-elevation21",
                        "elevation22": "PodBrowser-elevation22",
                        "elevation23": "PodBrowser-elevation23",
                        "elevation24": "PodBrowser-elevation24",
                        "elevation3": "PodBrowser-elevation3",
                        "elevation4": "PodBrowser-elevation4",
                        "elevation5": "PodBrowser-elevation5",
                        "elevation6": "PodBrowser-elevation6",
                        "elevation7": "PodBrowser-elevation7",
                        "elevation8": "PodBrowser-elevation8",
                        "elevation9": "PodBrowser-elevation9",
                        "outlined": "PodBrowser-outlined",
                        "root": "PodBrowser-root",
                        "rounded": "PodBrowser-rounded",
                      }
                    }
                    square={false}
                  >
                    <div
                      className="PodBrowser-root PodBrowser-root PodBrowser-expanded PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                    >
                      <WithStyles(ForwardRef(AccordionSummary))
                        expandIcon={<Memo(ExpandMoreIcon) />}
                        key=".0"
                      >
                        <ForwardRef(AccordionSummary)
                          classes={
                            Object {
                              "content": "PodBrowser-content",
                              "disabled": "PodBrowser-disabled",
                              "expandIcon": "PodBrowser-expandIcon",
                              "expanded": "PodBrowser-expanded",
                              "focused": "PodBrowser-focused",
                              "root": "PodBrowser-root",
                            }
                          }
                          expandIcon={<Memo(ExpandMoreIcon) />}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            aria-expanded={true}
                            className="PodBrowser-root PodBrowser-expanded"
                            component="div"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocusVisible={[Function]}
                          >
                            <ForwardRef(ButtonBase)
                              aria-expanded={true}
                              className="PodBrowser-root PodBrowser-expanded"
                              classes={
                                Object {
                                  "disabled": "PodBrowser-disabled",
                                  "focusVisible": "PodBrowser-focusVisible",
                                  "root": "PodBrowser-root",
                                }
                              }
                              component="div"
                              disableRipple={true}
                              disabled={false}
                              focusRipple={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocusVisible={[Function]}
                            >
                              <div
                                aria-disabled={false}
                                aria-expanded={true}
                                className="PodBrowser-root PodBrowser-root PodBrowser-expanded"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                role="button"
                                tabIndex={0}
                              >
                                <div
                                  className="PodBrowser-content PodBrowser-expanded"
                                >
                                  Actions
                                </div>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-hidden={true}
                                  className="PodBrowser-expandIcon PodBrowser-expanded"
                                  component="div"
                                  edge="end"
                                  role={null}
                                  tabIndex={null}
                                >
                                  <ForwardRef(IconButton)
                                    aria-hidden={true}
                                    className="PodBrowser-expandIcon PodBrowser-expanded"
                                    classes={
                                      Object {
                                        "colorInherit": "PodBrowser-colorInherit",
                                        "colorPrimary": "PodBrowser-colorPrimary",
                                        "colorSecondary": "PodBrowser-colorSecondary",
                                        "disabled": "PodBrowser-disabled",
                                        "edgeEnd": "PodBrowser-edgeEnd",
                                        "edgeStart": "PodBrowser-edgeStart",
                                        "label": "PodBrowser-label",
                                        "root": "PodBrowser-root",
                                        "sizeSmall": "PodBrowser-sizeSmall",
                                      }
                                    }
                                    component="div"
                                    edge="end"
                                    role={null}
                                    tabIndex={null}
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-hidden={true}
                                      centerRipple={true}
                                      className="PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                      component="div"
                                      disabled={false}
                                      focusRipple={true}
                                      role={null}
                                      tabIndex={null}
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-hidden={true}
                                        centerRipple={true}
                                        className="PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                        classes={
                                          Object {
                                            "disabled": "PodBrowser-disabled",
                                            "focusVisible": "PodBrowser-focusVisible",
                                            "root": "PodBrowser-root",
                                          }
                                        }
                                        component="div"
                                        disabled={false}
                                        focusRipple={true}
                                        role={null}
                                        tabIndex={null}
                                      >
                                        <div
                                          aria-disabled={false}
                                          aria-hidden={true}
                                          className="PodBrowser-root PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role={null}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="PodBrowser-label"
                                          >
                                            <ForwardRef>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "PodBrowser-colorAction",
                                                      "colorDisabled": "PodBrowser-colorDisabled",
                                                      "colorError": "PodBrowser-colorError",
                                                      "colorPrimary": "PodBrowser-colorPrimary",
                                                      "colorSecondary": "PodBrowser-colorSecondary",
                                                      "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                      "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                      "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                      "root": "PodBrowser-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="PodBrowser-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "PodBrowser-child",
                                                  "childLeaving": "PodBrowser-childLeaving",
                                                  "childPulsate": "PodBrowser-childPulsate",
                                                  "ripple": "PodBrowser-ripple",
                                                  "ripplePulsate": "PodBrowser-ripplePulsate",
                                                  "rippleVisible": "PodBrowser-rippleVisible",
                                                  "root": "PodBrowser-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="PodBrowser-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </div>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                              </div>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(AccordionSummary)>
                      </WithStyles(ForwardRef(AccordionSummary))>
                      <WithStyles(ForwardRef(Collapse))
                        in={true}
                        timeout="auto"
                      >
                        <ForwardRef(Collapse)
                          classes={
                            Object {
                              "container": "PodBrowser-container",
                              "entered": "PodBrowser-entered",
                              "hidden": "PodBrowser-hidden",
                              "wrapper": "PodBrowser-wrapper",
                              "wrapperInner": "PodBrowser-wrapperInner",
                            }
                          }
                          in={true}
                          timeout="auto"
                        >
                          <Transition
                            addEndListener={[Function]}
                            appear={false}
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={null}
                            unmountOnExit={false}
                          >
                            <div
                              className="PodBrowser-container PodBrowser-entered"
                              style={
                                Object {
                                  "minHeight": "0px",
                                }
                              }
                            >
                              <div
                                className="PodBrowser-wrapper"
                              >
                                <div
                                  className="PodBrowser-wrapperInner"
                                >
                                  <div
                                    role="region"
                                  >
                                    <WithStyles(ForwardRef(AccordionDetails))
                                      key=".1"
                                    >
                                      <ForwardRef(AccordionDetails)
                                        classes={
                                          Object {
                                            "root": "PodBrowser-root",
                                          }
                                        }
                                      >
                                        <div
                                          className="PodBrowser-root"
                                        >
                                          <ActionMenu>
                                            <ul
                                              className="PodBrowser-action-menu"
                                            >
                                              <ActionMenuItem>
                                                <li
                                                  className="PodBrowser-action-menu__item"
                                                >
                                                  <DownloadLink
                                                    className="PodBrowser-action-menu__trigger"
                                                    data-testid="download-resource-button"
                                                    iri="/iri/"
                                                    type="Container"
                                                  />
                                                </li>
                                              </ActionMenuItem>
                                              <ActionMenuItem>
                                                <li
                                                  className="PodBrowser-action-menu__item"
                                                >
                                                  <button
                                                    className="PodBrowser-action-menu__trigger"
                                                    data-testid="share-permissions-button"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    Sharing & App Permissions
                                                  </button>
                                                </li>
                                              </ActionMenuItem>
                                              <ActionMenuItem>
                                                <li
                                                  className="PodBrowser-action-menu__item"
                                                >
                                                  <DeleteLink
                                                    className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--danger"
                                                    data-testid="download-resource-button"
                                                    name="iri"
                                                    onDelete={[Function]}
                                                    onDeleteError={[Function]}
                                                    resourceIri="/iri/"
                                                  >
                                                    <a
                                                      className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--danger"
                                                      data-testid="download-resource-button"
                                                      href="#delete"
                                                      onClick={[Function]}
                                                    >
                                                      Delete
                                                    </a>
                                                  </DeleteLink>
                                                </li>
                                              </ActionMenuItem>
                                            </ul>
                                          </ActionMenu>
                                        </div>
                                      </ForwardRef(AccordionDetails)>
                                    </WithStyles(ForwardRef(AccordionDetails))>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Transition>
                        </ForwardRef(Collapse)>
                      </WithStyles(ForwardRef(Collapse))>
                    </div>
                  </ForwardRef(Paper)>
                </WithStyles(ForwardRef(Paper))>
              </ForwardRef(Accordion)>
            </WithStyles(ForwardRef(Accordion))>
            <WithStyles(ForwardRef(Accordion))>
              <ForwardRef(Accordion)
                classes={
                  Object {
                    "disabled": "PodBrowser-disabled",
                    "expanded": "PodBrowser-expanded",
                    "root": "PodBrowser-root",
                    "rounded": "PodBrowser-rounded",
                  }
                }
              >
                <WithStyles(ForwardRef(Paper))
                  className="PodBrowser-root PodBrowser-rounded"
                  square={false}
                >
                  <ForwardRef(Paper)
                    className="PodBrowser-root PodBrowser-rounded"
                    classes={
                      Object {
                        "elevation0": "PodBrowser-elevation0",
                        "elevation1": "PodBrowser-elevation1",
                        "elevation10": "PodBrowser-elevation10",
                        "elevation11": "PodBrowser-elevation11",
                        "elevation12": "PodBrowser-elevation12",
                        "elevation13": "PodBrowser-elevation13",
                        "elevation14": "PodBrowser-elevation14",
                        "elevation15": "PodBrowser-elevation15",
                        "elevation16": "PodBrowser-elevation16",
                        "elevation17": "PodBrowser-elevation17",
                        "elevation18": "PodBrowser-elevation18",
                        "elevation19": "PodBrowser-elevation19",
                        "elevation2": "PodBrowser-elevation2",
                        "elevation20": "PodBrowser-elevation20",
                        "elevation21": "PodBrowser-elevation21",
                        "elevation22": "PodBrowser-elevation22",
                        "elevation23": "PodBrowser-elevation23",
                        "elevation24": "PodBrowser-elevation24",
                        "elevation3": "PodBrowser-elevation3",
                        "elevation4": "PodBrowser-elevation4",
                        "elevation5": "PodBrowser-elevation5",
                        "elevation6": "PodBrowser-elevation6",
                        "elevation7": "PodBrowser-elevation7",
                        "elevation8": "PodBrowser-elevation8",
                        "elevation9": "PodBrowser-elevation9",
                        "outlined": "PodBrowser-outlined",
                        "root": "PodBrowser-root",
                        "rounded": "PodBrowser-rounded",
                      }
                    }
                    square={false}
                  >
                    <div
                      className="PodBrowser-root PodBrowser-root PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                    >
                      <WithStyles(ForwardRef(AccordionSummary))
                        expandIcon={<Memo(ExpandMoreIcon) />}
                        key=".0"
                      >
                        <ForwardRef(AccordionSummary)
                          classes={
                            Object {
                              "content": "PodBrowser-content",
                              "disabled": "PodBrowser-disabled",
                              "expandIcon": "PodBrowser-expandIcon",
                              "expanded": "PodBrowser-expanded",
                              "focused": "PodBrowser-focused",
                              "root": "PodBrowser-root",
                            }
                          }
                          expandIcon={<Memo(ExpandMoreIcon) />}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            aria-expanded={false}
                            className="PodBrowser-root"
                            component="div"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocusVisible={[Function]}
                          >
                            <ForwardRef(ButtonBase)
                              aria-expanded={false}
                              className="PodBrowser-root"
                              classes={
                                Object {
                                  "disabled": "PodBrowser-disabled",
                                  "focusVisible": "PodBrowser-focusVisible",
                                  "root": "PodBrowser-root",
                                }
                              }
                              component="div"
                              disableRipple={true}
                              disabled={false}
                              focusRipple={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocusVisible={[Function]}
                            >
                              <div
                                aria-disabled={false}
                                aria-expanded={false}
                                className="PodBrowser-root PodBrowser-root"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                role="button"
                                tabIndex={0}
                              >
                                <div
                                  className="PodBrowser-content"
                                >
                                  Details
                                </div>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-hidden={true}
                                  className="PodBrowser-expandIcon"
                                  component="div"
                                  edge="end"
                                  role={null}
                                  tabIndex={null}
                                >
                                  <ForwardRef(IconButton)
                                    aria-hidden={true}
                                    className="PodBrowser-expandIcon"
                                    classes={
                                      Object {
                                        "colorInherit": "PodBrowser-colorInherit",
                                        "colorPrimary": "PodBrowser-colorPrimary",
                                        "colorSecondary": "PodBrowser-colorSecondary",
                                        "disabled": "PodBrowser-disabled",
                                        "edgeEnd": "PodBrowser-edgeEnd",
                                        "edgeStart": "PodBrowser-edgeStart",
                                        "label": "PodBrowser-label",
                                        "root": "PodBrowser-root",
                                        "sizeSmall": "PodBrowser-sizeSmall",
                                      }
                                    }
                                    component="div"
                                    edge="end"
                                    role={null}
                                    tabIndex={null}
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-hidden={true}
                                      centerRipple={true}
                                      className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                      component="div"
                                      disabled={false}
                                      focusRipple={true}
                                      role={null}
                                      tabIndex={null}
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-hidden={true}
                                        centerRipple={true}
                                        className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                        classes={
                                          Object {
                                            "disabled": "PodBrowser-disabled",
                                            "focusVisible": "PodBrowser-focusVisible",
                                            "root": "PodBrowser-root",
                                          }
                                        }
                                        component="div"
                                        disabled={false}
                                        focusRipple={true}
                                        role={null}
                                        tabIndex={null}
                                      >
                                        <div
                                          aria-disabled={false}
                                          aria-hidden={true}
                                          className="PodBrowser-root PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role={null}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="PodBrowser-label"
                                          >
                                            <ForwardRef>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "PodBrowser-colorAction",
                                                      "colorDisabled": "PodBrowser-colorDisabled",
                                                      "colorError": "PodBrowser-colorError",
                                                      "colorPrimary": "PodBrowser-colorPrimary",
                                                      "colorSecondary": "PodBrowser-colorSecondary",
                                                      "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                      "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                      "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                      "root": "PodBrowser-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="PodBrowser-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "PodBrowser-child",
                                                  "childLeaving": "PodBrowser-childLeaving",
                                                  "childPulsate": "PodBrowser-childPulsate",
                                                  "ripple": "PodBrowser-ripple",
                                                  "ripplePulsate": "PodBrowser-ripplePulsate",
                                                  "rippleVisible": "PodBrowser-rippleVisible",
                                                  "root": "PodBrowser-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="PodBrowser-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </div>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                              </div>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(AccordionSummary)>
                      </WithStyles(ForwardRef(AccordionSummary))>
                      <WithStyles(ForwardRef(Collapse))
                        in={false}
                        timeout="auto"
                      >
                        <ForwardRef(Collapse)
                          classes={
                            Object {
                              "container": "PodBrowser-container",
                              "entered": "PodBrowser-entered",
                              "hidden": "PodBrowser-hidden",
                              "wrapper": "PodBrowser-wrapper",
                              "wrapperInner": "PodBrowser-wrapperInner",
                            }
                          }
                          in={false}
                          timeout="auto"
                        >
                          <Transition
                            addEndListener={[Function]}
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={null}
                            unmountOnExit={false}
                          >
                            <div
                              className="PodBrowser-container PodBrowser-hidden"
                              style={
                                Object {
                                  "minHeight": "0px",
                                }
                              }
                            >
                              <div
                                className="PodBrowser-wrapper"
                              >
                                <div
                                  className="PodBrowser-wrapperInner"
                                >
                                  <div
                                    role="region"
                                  >
                                    <WithStyles(ForwardRef(AccordionDetails))
                                      key=".1"
                                    >
                                      <ForwardRef(AccordionDetails)
                                        classes={
                                          Object {
                                            "root": "PodBrowser-root",
                                          }
                                        }
                                      >
                                        <div
                                          className="PodBrowser-root"
                                        >
                                          <section
                                            className="PodBrowser-centeredSection"
                                          >
                                            <WithStyles(ForwardRef(List))>
                                              <ForwardRef(List)
                                                classes={
                                                  Object {
                                                    "dense": "PodBrowser-dense",
                                                    "padding": "PodBrowser-padding",
                                                    "root": "PodBrowser-root",
                                                    "subheader": "PodBrowser-subheader",
                                                  }
                                                }
                                              >
                                                <ul
                                                  className="PodBrowser-root PodBrowser-padding"
                                                >
                                                  <WithStyles(ForwardRef(ListItem))
                                                    className="PodBrowser-listItem"
                                                  >
                                                    <PermissionCheckbox
                                                      classes={
                                                        Object {
                                                          "checkbox": "PodBrowser-checkbox",
                                                          "container": "PodBrowser-container",
                                                          "label": "PodBrowser-label",
                                                          "listItem": "PodBrowser-listItem",
                                                          "selectionClosed": "PodBrowser-selectionClosed",
                                                          "selectionOpen": "PodBrowser-selectionOpen",
                                                          "summary": "PodBrowser-summary",
                                                        }
                                                      }
                                                      label="View"
                                                      onChange={[Function]}
                                                      value={true}
                                                    >
                                                      <WithStyles(ForwardRef(ListItem))
                                                        className="PodBrowser-listItem"
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="PodBrowser-detailText"
                                                          key=".0"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="PodBrowser-detailText"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "PodBrowser-alignCenter",
                                                                "alignJustify": "PodBrowser-alignJustify",
                                                                "alignLeft": "PodBrowser-alignLeft",
                                                                "alignRight": "PodBrowser-alignRight",
                                                                "body1": "PodBrowser-body1",
                                                                "body2": "PodBrowser-body2",
                                                                "button": "PodBrowser-button",
                                                                "caption": "PodBrowser-caption",
                                                                "colorError": "PodBrowser-colorError",
                                                                "colorInherit": "PodBrowser-colorInherit",
                                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                "displayBlock": "PodBrowser-displayBlock",
                                                                "displayInline": "PodBrowser-displayInline",
                                                                "gutterBottom": "PodBrowser-gutterBottom",
                                                                "h1": "PodBrowser-h1",
                                                                "h2": "PodBrowser-h2",
                                                                "h3": "PodBrowser-h3",
                                                                "h4": "PodBrowser-h4",
                                                                "h5": "PodBrowser-h5",
                                                                "h6": "PodBrowser-h6",
                                                                "noWrap": "PodBrowser-noWrap",
                                                                "overline": "PodBrowser-overline",
                                                                "paragraph": "PodBrowser-paragraph",
                                                                "root": "PodBrowser-root",
                                                                "srOnly": "PodBrowser-srOnly",
                                                                "subtitle1": "PodBrowser-subtitle1",
                                                                "subtitle2": "PodBrowser-subtitle2",
                                                              }
                                                            }
                                                          >
                                                            <p
                                                              className="PodBrowser-root PodBrowser-detailText PodBrowser-body1"
                                                            >
                                                              Thing Type:
                                                            </p>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="PodBrowser-typeValue PodBrowser-detailText"
                                                          key=".1"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="PodBrowser-typeValue PodBrowser-detailText"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "PodBrowser-alignCenter",
                                                                "alignJustify": "PodBrowser-alignJustify",
                                                                "alignLeft": "PodBrowser-alignLeft",
                                                                "alignRight": "PodBrowser-alignRight",
                                                                "body1": "PodBrowser-body1",
                                                                "body2": "PodBrowser-body2",
                                                                "button": "PodBrowser-button",
                                                                "caption": "PodBrowser-caption",
                                                                "colorError": "PodBrowser-colorError",
                                                                "colorInherit": "PodBrowser-colorInherit",
                                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                "displayBlock": "PodBrowser-displayBlock",
                                                                "displayInline": "PodBrowser-displayInline",
                                                                "gutterBottom": "PodBrowser-gutterBottom",
                                                                "h1": "PodBrowser-h1",
                                                                "h2": "PodBrowser-h2",
                                                                "h3": "PodBrowser-h3",
                                                                "h4": "PodBrowser-h4",
                                                                "h5": "PodBrowser-h5",
                                                                "h6": "PodBrowser-h6",
                                                                "noWrap": "PodBrowser-noWrap",
                                                                "overline": "PodBrowser-overline",
                                                                "paragraph": "PodBrowser-paragraph",
                                                                "root": "PodBrowser-root",
                                                                "srOnly": "PodBrowser-srOnly",
                                                                "subtitle1": "PodBrowser-subtitle1",
                                                                "subtitle2": "PodBrowser-subtitle2",
                                                              }
                                                            }
                                                          >
                                                            <p
                                                              className="PodBrowser-root PodBrowser-typeValue PodBrowser-detailText PodBrowser-body1"
                                                            >
                                                              Container
                                                            </p>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </li>
                                                    </ForwardRef(ListItem)>
                                                  </WithStyles(ForwardRef(ListItem))>
                                                </ul>
                                              </ForwardRef(List)>
                                            </WithStyles(ForwardRef(List))>
                                          </section>
                                        </div>
                                      </ForwardRef(AccordionDetails)>
                                    </WithStyles(ForwardRef(AccordionDetails))>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Transition>
                        </ForwardRef(Collapse)>
                      </WithStyles(ForwardRef(Collapse))>
                    </div>
                  </ForwardRef(Paper)>
                </WithStyles(ForwardRef(Paper))>
              </ForwardRef(Accordion)>
            </WithStyles(ForwardRef(Accordion))>
            <WithStyles(ForwardRef(Accordion))
              expanded={false}
              onChange={[Function]}
            >
              <ForwardRef(Accordion)
                classes={
                  Object {
                    "disabled": "PodBrowser-disabled",
                    "expanded": "PodBrowser-expanded",
                    "root": "PodBrowser-root",
                    "rounded": "PodBrowser-rounded",
                  }
                }
                expanded={false}
                onChange={[Function]}
              >
                <WithStyles(ForwardRef(Paper))
                  className="PodBrowser-root PodBrowser-rounded"
                  square={false}
                >
                  <ForwardRef(Paper)
                    className="PodBrowser-root PodBrowser-rounded"
                    classes={
                      Object {
                        "elevation0": "PodBrowser-elevation0",
                        "elevation1": "PodBrowser-elevation1",
                        "elevation10": "PodBrowser-elevation10",
                        "elevation11": "PodBrowser-elevation11",
                        "elevation12": "PodBrowser-elevation12",
                        "elevation13": "PodBrowser-elevation13",
                        "elevation14": "PodBrowser-elevation14",
                        "elevation15": "PodBrowser-elevation15",
                        "elevation16": "PodBrowser-elevation16",
                        "elevation17": "PodBrowser-elevation17",
                        "elevation18": "PodBrowser-elevation18",
                        "elevation19": "PodBrowser-elevation19",
                        "elevation2": "PodBrowser-elevation2",
                        "elevation20": "PodBrowser-elevation20",
                        "elevation21": "PodBrowser-elevation21",
                        "elevation22": "PodBrowser-elevation22",
                        "elevation23": "PodBrowser-elevation23",
                        "elevation24": "PodBrowser-elevation24",
                        "elevation3": "PodBrowser-elevation3",
                        "elevation4": "PodBrowser-elevation4",
                        "elevation5": "PodBrowser-elevation5",
                        "elevation6": "PodBrowser-elevation6",
                        "elevation7": "PodBrowser-elevation7",
                        "elevation8": "PodBrowser-elevation8",
                        "elevation9": "PodBrowser-elevation9",
                        "outlined": "PodBrowser-outlined",
                        "root": "PodBrowser-root",
                        "rounded": "PodBrowser-rounded",
                      }
                    }
                    square={false}
                  >
                    <div
                      className="PodBrowser-root PodBrowser-root PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                    >
                      <WithStyles(ForwardRef(AccordionSummary))
                        expandIcon={<Memo(ExpandMoreIcon) />}
                        key=".0"
                      >
                        <ForwardRef(AccordionSummary)
                          classes={
                            Object {
                              "content": "PodBrowser-content",
                              "disabled": "PodBrowser-disabled",
                              "expandIcon": "PodBrowser-expandIcon",
                              "expanded": "PodBrowser-expanded",
                              "focused": "PodBrowser-focused",
                              "root": "PodBrowser-root",
                            }
                          }
                          expandIcon={<Memo(ExpandMoreIcon) />}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            aria-expanded={false}
                            className="PodBrowser-root"
                            component="div"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocusVisible={[Function]}
                          >
                            <ForwardRef(ButtonBase)
                              aria-expanded={false}
                              className="PodBrowser-root"
                              classes={
                                Object {
                                  "disabled": "PodBrowser-disabled",
                                  "focusVisible": "PodBrowser-focusVisible",
                                  "root": "PodBrowser-root",
                                }
                              }
                              component="div"
                              disableRipple={true}
                              disabled={false}
                              focusRipple={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocusVisible={[Function]}
                            >
                              <div
                                aria-disabled={false}
                                aria-expanded={false}
                                className="PodBrowser-root PodBrowser-root"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                role="button"
                                tabIndex={0}
                              >
                                <div
                                  className="PodBrowser-content"
                                >
                                  Permissions
                                </div>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-hidden={true}
                                  className="PodBrowser-expandIcon"
                                  component="div"
                                  edge="end"
                                  role={null}
                                  tabIndex={null}
                                >
                                  <ForwardRef(IconButton)
                                    aria-hidden={true}
                                    className="PodBrowser-expandIcon"
                                    classes={
                                      Object {
                                        "colorInherit": "PodBrowser-colorInherit",
                                        "colorPrimary": "PodBrowser-colorPrimary",
                                        "colorSecondary": "PodBrowser-colorSecondary",
                                        "disabled": "PodBrowser-disabled",
                                        "edgeEnd": "PodBrowser-edgeEnd",
                                        "edgeStart": "PodBrowser-edgeStart",
                                        "label": "PodBrowser-label",
                                        "root": "PodBrowser-root",
                                        "sizeSmall": "PodBrowser-sizeSmall",
                                      }
                                    }
                                    component="div"
                                    edge="end"
                                    role={null}
                                    tabIndex={null}
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-hidden={true}
                                      centerRipple={true}
                                      className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                      component="div"
                                      disabled={false}
                                      focusRipple={true}
                                      role={null}
                                      tabIndex={null}
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-hidden={true}
                                        centerRipple={true}
                                        className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                        classes={
                                          Object {
                                            "disabled": "PodBrowser-disabled",
                                            "focusVisible": "PodBrowser-focusVisible",
                                            "root": "PodBrowser-root",
                                          }
                                        }
                                        component="div"
                                        disabled={false}
                                        focusRipple={true}
                                        role={null}
                                        tabIndex={null}
                                      >
                                        <div
                                          aria-disabled={false}
                                          aria-hidden={true}
                                          className="PodBrowser-root PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role={null}
                                          tabIndex={null}
                                        >
                                          <span
                                            className="PodBrowser-label"
                                          >
                                            <ForwardRef>
                                              <WithStyles(ForwardRef(SvgIcon))>
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "PodBrowser-colorAction",
                                                      "colorDisabled": "PodBrowser-colorDisabled",
                                                      "colorError": "PodBrowser-colorError",
                                                      "colorPrimary": "PodBrowser-colorPrimary",
                                                      "colorSecondary": "PodBrowser-colorSecondary",
                                                      "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                      "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                      "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                      "root": "PodBrowser-root",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="PodBrowser-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "PodBrowser-child",
                                                  "childLeaving": "PodBrowser-childLeaving",
                                                  "childPulsate": "PodBrowser-childPulsate",
                                                  "ripple": "PodBrowser-ripple",
                                                  "ripplePulsate": "PodBrowser-ripplePulsate",
                                                  "rippleVisible": "PodBrowser-rippleVisible",
                                                  "root": "PodBrowser-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="PodBrowser-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </div>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                              </div>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(AccordionSummary)>
                      </WithStyles(ForwardRef(AccordionSummary))>
                      <WithStyles(ForwardRef(Collapse))
                        in={false}
                        timeout="auto"
                      >
                        <ForwardRef(Collapse)
                          classes={
                            Object {
                              "container": "PodBrowser-container",
                              "entered": "PodBrowser-entered",
                              "hidden": "PodBrowser-hidden",
                              "wrapper": "PodBrowser-wrapper",
                              "wrapperInner": "PodBrowser-wrapperInner",
                            }
                          }
                          in={false}
                          timeout="auto"
                        >
                          <Transition
                            addEndListener={[Function]}
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={null}
                            unmountOnExit={false}
                          >
                            <div
                              className="PodBrowser-container PodBrowser-hidden"
                              style={
                                Object {
                                  "minHeight": "0px",
                                }
                              }
                            >
                              <div
                                className="PodBrowser-wrapper"
                              >
                                <div
                                  className="PodBrowser-wrapperInner"
                                >
                                  <div
                                    role="region"
                                  >
                                    <WithStyles(ForwardRef(AccordionDetails))
                                      key=".1"
                                    >
                                      <ForwardRef(AccordionDetails)
                                        classes={
                                          Object {
                                            "root": "PodBrowser-root",
                                          }
                                        }
                                      >
                                        <div
                                          className="PodBrowser-root"
                                        >
                                          <div>
                                            <ResourceSharing
                                              dataset={Object {}}
                                              defaultPermissions={Array []}
                                              iri="/iri/"
                                              permissions={
                                                Array [
                                                  Object {
                                                    "acl": Object {
                                                      "append": true,
                                                      "control": true,
                                                      "read": true,
                                                      "write": true,
                                                    },
                                                    "alias": "Full Control",
                                                    "profile": Object {
                                                      "avatar": "/avatar",
                                                      "webId": "webId",
                                                    },
                                                    "webId": "webId",
                                                  },
                                                  Object {
                                                    "acl": Object {
                                                      "append": true,
                                                      "control": true,
                                                      "read": true,
                                                      "write": true,
                                                    },
                                                    "alias": "Full Control",
                                                    "profile": Object {
                                                      "avatar": "/avatar",
                                                      "webId": "collaborator",
                                                    },
                                                    "webId": "collaborator",
                                                  },
                                                ]
                                              }
                                            >
                                              <section
                                                className="PodBrowser-centeredSection"
                                              >
                                                <h5
                                                  className="PodBrowser-content-h5"
                                                >
                                                  My Access
                                                </h5>
                                                <AgentAccessList
                                                  iri="/iri/"
                                                  onSave={[Function]}
                                                  onSubmit={[Function]}
                                                  permissions={Array []}
                                                  saveFn={[Function]}
                                                  warn={true}
                                                />
                                              </section>
                                              <ThirdPartyPermissions
                                                classes={
                                                  Object {
                                                    "agentAddButton": "PodBrowser-agentAddButton",
                                                    "agentInput": "PodBrowser-agentInput",
                                                    "avatar": "PodBrowser-avatar",
                                                    "centeredSection": "PodBrowser-centeredSection",
                                                    "content": "PodBrowser-content",
                                                    "content-blockquote": "PodBrowser-content-blockquote",
                                                    "content-h1": "PodBrowser-content-h1",
                                                    "content-h2": "PodBrowser-content-h2",
                                                    "content-h3": "PodBrowser-content-h3",
                                                    "content-h4": "PodBrowser-content-h4",
                                                    "content-h5": "PodBrowser-content-h5",
                                                    "content-h6": "PodBrowser-content-h6",
                                                    "content-ol": "PodBrowser-content-ol",
                                                    "content-p": "PodBrowser-content-p",
                                                    "content-ul": "PodBrowser-content-ul",
                                                    "detailText": "PodBrowser-detailText",
                                                    "formListItem": "PodBrowser-formListItem",
                                                    "headerSection": "PodBrowser-headerSection",
                                                    "image": "PodBrowser-image",
                                                    "listItem": "PodBrowser-listItem",
                                                    "raw": "PodBrowser-raw",
                                                    "typeValue": "PodBrowser-typeValue",
                                                  }
                                                }
                                                iri="/iri/"
                                                setThirdPartyPermissions={[Function]}
                                                thirdPartyPermissions={
                                                  Array [
                                                    Object {
                                                      "acl": Object {
                                                        "append": true,
                                                        "control": true,
                                                        "read": true,
                                                        "write": true,
                                                      },
                                                      "alias": "Full Control",
                                                      "profile": Object {
                                                        "avatar": "/avatar",
                                                        "webId": "webId",
                                                      },
                                                      "webId": "webId",
                                                    },
                                                    Object {
                                                      "acl": Object {
                                                        "append": true,
                                                        "control": true,
                                                        "read": true,
                                                        "write": true,
                                                      },
                                                      "alias": "Full Control",
                                                      "profile": Object {
                                                        "avatar": "/avatar",
                                                        "webId": "collaborator",
                                                      },
                                                      "webId": "collaborator",
                                                    },
                                                  ]
                                                }
                                              >
                                                <section
                                                  className="PodBrowser-centeredSection"
                                                >
                                                  <h5
                                                    className="PodBrowser-content-h5"
                                                  >
                                                    Sharing
                                                  </h5>
                                                  <WithStyles(ForwardRef(List))>
                                                    <ForwardRef(List)
                                                      classes={
                                                        Object {
                                                          "dense": "PodBrowser-dense",
                                                          "padding": "PodBrowser-padding",
                                                          "root": "PodBrowser-root",
                                                          "subheader": "PodBrowser-subheader",
                                                        }
                                                      }
                                                      label="Edit"
                                                      onChange={[Function]}
                                                      value={true}
                                                    >
                                                      <ul
                                                        className="PodBrowser-root PodBrowser-padding"
                                                      >
                                                        <WithStyles(ForwardRef(ListItem))
                                                          className="PodBrowser-listItem"
                                                          key="0"
                                                        >
                                                          <ForwardRef(ListItem)
                                                            className="PodBrowser-listItem"
                                                            classes={
                                                              Object {
                                                                "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                "button": "PodBrowser-button",
                                                                "container": "PodBrowser-container",
                                                                "dense": "PodBrowser-dense",
                                                                "disabled": "PodBrowser-disabled",
                                                                "divider": "PodBrowser-divider",
                                                                "focusVisible": "PodBrowser-focusVisible",
                                                                "gutters": "PodBrowser-gutters",
                                                                "root": "PodBrowser-root",
                                                                "secondaryAction": "PodBrowser-secondaryAction",
                                                                "selected": "PodBrowser-selected",
                                                              }
                                                            }
                                                          >
                                                            <li
                                                              className="PodBrowser-root PodBrowser-listItem PodBrowser-gutters"
                                                              disabled={false}
                                                            >
                                                              <WithStyles(ForwardRef(ListItemIcon))
                                                                key=".0"
                                                              >
                                                                <ForwardRef(ListItemIcon)
                                                                  classes={
                                                                    Object {
                                                                      "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                      "root": "PodBrowser-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <div
                                                                    className="PodBrowser-root"
                                                                  >
                                                                    <ForwardRef>
                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                        <ForwardRef(SvgIcon)
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "PodBrowser-colorAction",
                                                                              "colorDisabled": "PodBrowser-colorDisabled",
                                                                              "colorError": "PodBrowser-colorError",
                                                                              "colorPrimary": "PodBrowser-colorPrimary",
                                                                              "colorSecondary": "PodBrowser-colorSecondary",
                                                                              "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                              "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                              "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                              "root": "PodBrowser-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="PodBrowser-root"
                                                                            focusable="false"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef>
                                                                    People
                                                                  </div>
                                                                </ForwardRef(ListItemIcon)>
                                                              </WithStyles(ForwardRef(ListItemIcon))>
                                                            </li>
                                                          </ForwardRef(ListItem)>
                                                        </WithStyles(ForwardRef(ListItem))>
                                                        <WithStyles(ForwardRef(Divider))>
                                                          <ForwardRef(Divider)
                                                            classes={
                                                              Object {
                                                                "absolute": "PodBrowser-absolute",
                                                                "flexItem": "PodBrowser-flexItem",
                                                                "inset": "PodBrowser-inset",
                                                                "light": "PodBrowser-light",
                                                                "middle": "PodBrowser-middle",
                                                                "root": "PodBrowser-root",
                                                                "vertical": "PodBrowser-vertical",
                                                              }
                                                            }
                                                          >
                                                            <hr
                                                              className="PodBrowser-root"
                                                            />
                                                          </ForwardRef(Divider)>
                                                        </WithStyles(ForwardRef(Divider))>
                                                        <AgentAccessList
                                                          classes={
                                                            Object {
                                                              "agentAddButton": "PodBrowser-agentAddButton",
                                                              "agentInput": "PodBrowser-agentInput",
                                                              "avatar": "PodBrowser-avatar",
                                                              "centeredSection": "PodBrowser-centeredSection",
                                                              "content": "PodBrowser-content",
                                                              "content-blockquote": "PodBrowser-content-blockquote",
                                                              "content-h1": "PodBrowser-content-h1",
                                                              "content-h2": "PodBrowser-content-h2",
                                                              "content-h3": "PodBrowser-content-h3",
                                                              "content-h4": "PodBrowser-content-h4",
                                                              "content-h5": "PodBrowser-content-h5",
                                                              "content-h6": "PodBrowser-content-h6",
                                                              "content-ol": "PodBrowser-content-ol",
                                                              "content-p": "PodBrowser-content-p",
                                                              "content-ul": "PodBrowser-content-ul",
                                                              "detailText": "PodBrowser-detailText",
                                                              "formListItem": "PodBrowser-formListItem",
                                                              "headerSection": "PodBrowser-headerSection",
                                                              "image": "PodBrowser-image",
                                                              "listItem": "PodBrowser-listItem",
                                                              "raw": "PodBrowser-raw",
                                                              "typeValue": "PodBrowser-typeValue",
                                                            }
                                                          }
                                                          iri="/iri/"
                                                          onSave={[Function]}
                                                          onSubmit={[Function]}
                                                          permissions={
                                                            Array [
                                                              Object {
                                                                "acl": Object {
                                                                  "append": true,
                                                                  "control": true,
                                                                  "read": true,
                                                                  "write": true,
                                                                },
                                                                "alias": "Full Control",
                                                                "profile": Object {
                                                                  "avatar": "/avatar",
                                                                  "webId": "webId",
                                                                },
                                                                "webId": "webId",
                                                              },
                                                              Object {
                                                                "acl": Object {
                                                                  "append": true,
                                                                  "control": true,
                                                                  "read": true,
                                                                  "write": true,
                                                                },
                                                                "alias": "Full Control",
                                                                "profile": Object {
                                                                  "avatar": "/avatar",
                                                                  "webId": "collaborator",
                                                                },
                                                                "webId": "collaborator",
                                                              },
                                                            ]
                                                          }
                                                          saveFn={[Function]}
                                                          warn={false}
                                                        >
                                                          <WithStyles(ForwardRef(List))>
                                                            <ForwardRef(List)
                                                              classes={
                                                                Object {
                                                                  "dense": "PodBrowser-dense",
                                                                  "padding": "PodBrowser-padding",
                                                                  "root": "PodBrowser-root",
                                                                  "subheader": "PodBrowser-subheader",
                                                                }
                                                              }
                                                            >
                                                              <ul
                                                                className="PodBrowser-root PodBrowser-padding"
                                                              >
                                                                <WithStyles(ForwardRef(ListItem))
                                                                  className="PodBrowser-listItem"
                                                                  key="webId"
                                                                >
                                                                  <ForwardRef(ListItem)
                                                                    className="PodBrowser-listItem"
                                                                    classes={
                                                                      Object {
                                                                        "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                        "button": "PodBrowser-button",
                                                                        "container": "PodBrowser-container",
                                                                        "dense": "PodBrowser-dense",
                                                                        "disabled": "PodBrowser-disabled",
                                                                        "divider": "PodBrowser-divider",
                                                                        "focusVisible": "PodBrowser-focusVisible",
                                                                        "gutters": "PodBrowser-gutters",
                                                                        "root": "PodBrowser-root",
                                                                        "secondaryAction": "PodBrowser-secondaryAction",
                                                                        "selected": "PodBrowser-selected",
                                                                      }
                                                                    }
                                                                  >
                                                                    <li
                                                                      className="PodBrowser-root PodBrowser-listItem PodBrowser-gutters"
                                                                      disabled={false}
                                                                    >
                                                                      <WithStyles(ForwardRef(Avatar))
                                                                        alt="webId"
                                                                        className="PodBrowser-avatar"
                                                                        key=".0"
                                                                        src="/avatar"
                                                                      >
                                                                        <ForwardRef(Avatar)
                                                                          alt="webId"
                                                                          className="PodBrowser-avatar"
                                                                          classes={
                                                                            Object {
                                                                              "circle": "PodBrowser-circle",
                                                                              "colorDefault": "PodBrowser-colorDefault",
                                                                              "fallback": "PodBrowser-fallback",
                                                                              "img": "PodBrowser-img",
                                                                              "root": "PodBrowser-root",
                                                                              "rounded": "PodBrowser-rounded",
                                                                              "square": "PodBrowser-square",
                                                                            }
                                                                          }
                                                                          src="/avatar"
                                                                        >
                                                                          <div
                                                                            className="PodBrowser-root PodBrowser-circle PodBrowser-avatar"
                                                                          >
                                                                            <img
                                                                              alt="webId"
                                                                              className="PodBrowser-img"
                                                                              src="/avatar"
                                                                            />
                                                                          </div>
                                                                        </ForwardRef(Avatar)>
                                                                      </WithStyles(ForwardRef(Avatar))>
                                                                      <WithStyles(ForwardRef(Typography))
                                                                        className="PodBrowser-detailText"
                                                                        data-testid="agent-web-id"
                                                                        key=".1"
                                                                      >
                                                                        <ForwardRef(Typography)
                                                                          className="PodBrowser-detailText"
                                                                          classes={
                                                                            Object {
                                                                              "alignCenter": "PodBrowser-alignCenter",
                                                                              "alignJustify": "PodBrowser-alignJustify",
                                                                              "alignLeft": "PodBrowser-alignLeft",
                                                                              "alignRight": "PodBrowser-alignRight",
                                                                              "body1": "PodBrowser-body1",
                                                                              "body2": "PodBrowser-body2",
                                                                              "button": "PodBrowser-button",
                                                                              "caption": "PodBrowser-caption",
                                                                              "colorError": "PodBrowser-colorError",
                                                                              "colorInherit": "PodBrowser-colorInherit",
                                                                              "colorPrimary": "PodBrowser-colorPrimary",
                                                                              "colorSecondary": "PodBrowser-colorSecondary",
                                                                              "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                              "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                              "displayBlock": "PodBrowser-displayBlock",
                                                                              "displayInline": "PodBrowser-displayInline",
                                                                              "gutterBottom": "PodBrowser-gutterBottom",
                                                                              "h1": "PodBrowser-h1",
                                                                              "h2": "PodBrowser-h2",
                                                                              "h3": "PodBrowser-h3",
                                                                              "h4": "PodBrowser-h4",
                                                                              "h5": "PodBrowser-h5",
                                                                              "h6": "PodBrowser-h6",
                                                                              "noWrap": "PodBrowser-noWrap",
                                                                              "overline": "PodBrowser-overline",
                                                                              "paragraph": "PodBrowser-paragraph",
                                                                              "root": "PodBrowser-root",
                                                                              "srOnly": "PodBrowser-srOnly",
                                                                              "subtitle1": "PodBrowser-subtitle1",
                                                                              "subtitle2": "PodBrowser-subtitle2",
                                                                            }
                                                                          }
                                                                          data-testid="agent-web-id"
                                                                        >
                                                                          <p
                                                                            className="PodBrowser-root PodBrowser-detailText PodBrowser-body1"
                                                                            data-testid="agent-web-id"
                                                                          >
                                                                            webId
                                                                          </p>
                                                                        </ForwardRef(Typography)>
                                                                      </WithStyles(ForwardRef(Typography))>
                                                                      <PermissionsForm
                                                                        key=".$webId"
                                                                        onSave={[Function]}
                                                                        permission={
                                                                          Object {
                                                                            "acl": Object {
                                                                              "append": true,
                                                                              "control": true,
                                                                              "read": true,
                                                                              "write": true,
                                                                            },
                                                                            "alias": "Full Control",
                                                                            "profile": Object {
                                                                              "avatar": "/avatar",
                                                                              "webId": "webId",
                                                                            },
                                                                            "webId": "webId",
                                                                          }
                                                                        }
                                                                        warnOnSubmit={false}
                                                                      >
                                                                        <div
                                                                          className="PodBrowser-container"
                                                                        >
                                                                          <WithStyles(ForwardRef(Button))
                                                                            className="PodBrowser-summary"
                                                                            data-testid="permissions-dropdown-button"
                                                                            endIcon={<Memo(KeyboardArrowDownIcon) />}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <ForwardRef(Button)
                                                                              className="PodBrowser-summary"
                                                                              classes={
                                                                                Object {
                                                                                  "colorInherit": "PodBrowser-colorInherit",
                                                                                  "contained": "PodBrowser-contained",
                                                                                  "containedPrimary": "PodBrowser-containedPrimary",
                                                                                  "containedSecondary": "PodBrowser-containedSecondary",
                                                                                  "containedSizeLarge": "PodBrowser-containedSizeLarge",
                                                                                  "containedSizeSmall": "PodBrowser-containedSizeSmall",
                                                                                  "disableElevation": "PodBrowser-disableElevation",
                                                                                  "disabled": "PodBrowser-disabled",
                                                                                  "endIcon": "PodBrowser-endIcon",
                                                                                  "focusVisible": "PodBrowser-focusVisible",
                                                                                  "fullWidth": "PodBrowser-fullWidth",
                                                                                  "iconSizeLarge": "PodBrowser-iconSizeLarge",
                                                                                  "iconSizeMedium": "PodBrowser-iconSizeMedium",
                                                                                  "iconSizeSmall": "PodBrowser-iconSizeSmall",
                                                                                  "label": "PodBrowser-label",
                                                                                  "outlined": "PodBrowser-outlined",
                                                                                  "outlinedPrimary": "PodBrowser-outlinedPrimary",
                                                                                  "outlinedSecondary": "PodBrowser-outlinedSecondary",
                                                                                  "outlinedSizeLarge": "PodBrowser-outlinedSizeLarge",
                                                                                  "outlinedSizeSmall": "PodBrowser-outlinedSizeSmall",
                                                                                  "root": "PodBrowser-root",
                                                                                  "sizeLarge": "PodBrowser-sizeLarge",
                                                                                  "sizeSmall": "PodBrowser-sizeSmall",
                                                                                  "startIcon": "PodBrowser-startIcon",
                                                                                  "text": "PodBrowser-text",
                                                                                  "textPrimary": "PodBrowser-textPrimary",
                                                                                  "textSecondary": "PodBrowser-textSecondary",
                                                                                  "textSizeLarge": "PodBrowser-textSizeLarge",
                                                                                  "textSizeSmall": "PodBrowser-textSizeSmall",
                                                                                }
                                                                              }
                                                                              data-testid="permissions-dropdown-button"
                                                                              endIcon={<Memo(KeyboardArrowDownIcon) />}
                                                                              onClick={[Function]}
                                                                            >
                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                className="PodBrowser-root PodBrowser-text PodBrowser-summary"
                                                                                component="button"
                                                                                data-testid="permissions-dropdown-button"
                                                                                disabled={false}
                                                                                focusRipple={true}
                                                                                focusVisibleClassName="PodBrowser-focusVisible"
                                                                                onClick={[Function]}
                                                                                type="button"
                                                                              >
                                                                                <ForwardRef(ButtonBase)
                                                                                  className="PodBrowser-root PodBrowser-text PodBrowser-summary"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "PodBrowser-disabled",
                                                                                      "focusVisible": "PodBrowser-focusVisible",
                                                                                      "root": "PodBrowser-root",
                                                                                    }
                                                                                  }
                                                                                  component="button"
                                                                                  data-testid="permissions-dropdown-button"
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  focusVisibleClassName="PodBrowser-focusVisible"
                                                                                  onClick={[Function]}
                                                                                  type="button"
                                                                                >
                                                                                  <button
                                                                                    className="PodBrowser-root PodBrowser-root PodBrowser-text PodBrowser-summary"
                                                                                    data-testid="permissions-dropdown-button"
                                                                                    disabled={false}
                                                                                    onBlur={[Function]}
                                                                                    onClick={[Function]}
                                                                                    onDragLeave={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onMouseLeave={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                    onTouchMove={[Function]}
                                                                                    onTouchStart={[Function]}
                                                                                    tabIndex={0}
                                                                                    type="button"
                                                                                  >
                                                                                    <span
                                                                                      className="PodBrowser-label"
                                                                                    >
                                                                                      <span>
                                                                                        Control
                                                                                      </span>
                                                                                      <span
                                                                                        className="PodBrowser-endIcon PodBrowser-iconSizeMedium"
                                                                                      >
                                                                                        <ForwardRef>
                                                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                                                            <ForwardRef(SvgIcon)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorAction": "PodBrowser-colorAction",
                                                                                                  "colorDisabled": "PodBrowser-colorDisabled",
                                                                                                  "colorError": "PodBrowser-colorError",
                                                                                                  "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                  "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                  "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                                                  "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                                                  "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                                                  "root": "PodBrowser-root",
                                                                                                }
                                                                                              }
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden={true}
                                                                                                className="PodBrowser-root"
                                                                                                focusable="false"
                                                                                                viewBox="0 0 24 24"
                                                                                              >
                                                                                                <path
                                                                                                  d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                                                                                />
                                                                                              </svg>
                                                                                            </ForwardRef(SvgIcon)>
                                                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                                                        </ForwardRef>
                                                                                      </span>
                                                                                    </span>
                                                                                    <WithStyles(memo)
                                                                                      center={false}
                                                                                    >
                                                                                      <ForwardRef(TouchRipple)
                                                                                        center={false}
                                                                                        classes={
                                                                                          Object {
                                                                                            "child": "PodBrowser-child",
                                                                                            "childLeaving": "PodBrowser-childLeaving",
                                                                                            "childPulsate": "PodBrowser-childPulsate",
                                                                                            "ripple": "PodBrowser-ripple",
                                                                                            "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                                            "rippleVisible": "PodBrowser-rippleVisible",
                                                                                            "root": "PodBrowser-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          className="PodBrowser-root"
                                                                                        >
                                                                                          <TransitionGroup
                                                                                            childFactory={[Function]}
                                                                                            component={null}
                                                                                            exit={true}
                                                                                          />
                                                                                        </span>
                                                                                      </ForwardRef(TouchRipple)>
                                                                                    </WithStyles(memo)>
                                                                                  </button>
                                                                                </ForwardRef(ButtonBase)>
                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                            </ForwardRef(Button)>
                                                                          </WithStyles(ForwardRef(Button))>
                                                                          <section
                                                                            className="PodBrowser-selectionClosed"
                                                                          >
                                                                            <WithStyles(ForwardRef(List))>
                                                                              <ForwardRef(List)
                                                                                classes={
                                                                                  Object {
                                                                                    "dense": "PodBrowser-dense",
                                                                                    "padding": "PodBrowser-padding",
                                                                                    "root": "PodBrowser-root",
                                                                                    "subheader": "PodBrowser-subheader",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <ul
                                                                                  className="PodBrowser-root PodBrowser-padding"
                                                                                >
                                                                                  <PermissionCheckbox
                                                                                    classes={
                                                                                      Object {
                                                                                        "checkbox": "PodBrowser-checkbox",
                                                                                        "container": "PodBrowser-container",
                                                                                        "label": "PodBrowser-label",
                                                                                        "listItem": "PodBrowser-listItem",
                                                                                        "selectionClosed": "PodBrowser-selectionClosed",
                                                                                        "selectionOpen": "PodBrowser-selectionOpen",
                                                                                        "summary": "PodBrowser-summary",
                                                                                      }
                                                                                    }
                                                                                    label="View"
                                                                                    onChange={[Function]}
                                                                                    value={true}
                                                                                  >
                                                                                    <WithStyles(ForwardRef(ListItem))
                                                                                      className="PodBrowser-listItem"
                                                                                    >
                                                                                      <ForwardRef(ListItem)
                                                                                        className="PodBrowser-listItem"
                                                                                        classes={
                                                                                          Object {
                                                                                            "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                                            "button": "PodBrowser-button",
                                                                                            "container": "PodBrowser-container",
                                                                                            "dense": "PodBrowser-dense",
                                                                                            "disabled": "PodBrowser-disabled",
                                                                                            "divider": "PodBrowser-divider",
                                                                                            "focusVisible": "PodBrowser-focusVisible",
                                                                                            "gutters": "PodBrowser-gutters",
                                                                                            "root": "PodBrowser-root",
                                                                                            "secondaryAction": "PodBrowser-secondaryAction",
                                                                                            "selected": "PodBrowser-selected",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <li
                                                                                          className="PodBrowser-root PodBrowser-listItem PodBrowser-gutters"
                                                                                          disabled={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(FormControlLabel))
                                                                                            classes={
                                                                                              Object {
                                                                                                "label": "PodBrowser-label",
                                                                                              }
                                                                                            }
                                                                                            control={
                                                                                              <WithStyles(ForwardRef(Checkbox))
                                                                                                checked={true}
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "root": "PodBrowser-checkbox",
                                                                                                  }
                                                                                                }
                                                                                                name="view"
                                                                                                onChange={[Function]}
                                                                                              />
                                                                                            }
                                                                                            key=".0"
                                                                                            label="View"
                                                                                          >
                                                                                            <ForwardRef(FormControlLabel)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "disabled": "PodBrowser-disabled",
                                                                                                  "label": "PodBrowser-label PodBrowser-label",
                                                                                                  "labelPlacementBottom": "PodBrowser-labelPlacementBottom",
                                                                                                  "labelPlacementStart": "PodBrowser-labelPlacementStart",
                                                                                                  "labelPlacementTop": "PodBrowser-labelPlacementTop",
                                                                                                  "root": "PodBrowser-root",
                                                                                                }
                                                                                              }
                                                                                              control={
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="view"
                                                                                                  onChange={[Function]}
                                                                                                />
                                                                                              }
                                                                                              label="View"
                                                                                            >
                                                                                              <label
                                                                                                className="PodBrowser-root"
                                                                                              >
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="view"
                                                                                                  onChange={[Function]}
                                                                                                >
                                                                                                  <ForwardRef(Checkbox)
                                                                                                    checked={true}
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "checked": "PodBrowser-checked",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "disabled": "PodBrowser-disabled",
                                                                                                        "indeterminate": "PodBrowser-indeterminate",
                                                                                                        "root": "PodBrowser-root PodBrowser-checkbox",
                                                                                                      }
                                                                                                    }
                                                                                                    name="view"
                                                                                                    onChange={[Function]}
                                                                                                  >
                                                                                                    <WithStyles(ForwardRef(SwitchBase))
                                                                                                      checked={true}
                                                                                                      checkedIcon={<Memo />}
                                                                                                      classes={
                                                                                                        Object {
                                                                                                          "checked": "PodBrowser-checked",
                                                                                                          "disabled": "PodBrowser-disabled",
                                                                                                          "root": "PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                        }
                                                                                                      }
                                                                                                      color="secondary"
                                                                                                      icon={<Memo />}
                                                                                                      inputProps={
                                                                                                        Object {
                                                                                                          "data-indeterminate": false,
                                                                                                        }
                                                                                                      }
                                                                                                      name="view"
                                                                                                      onChange={[Function]}
                                                                                                      type="checkbox"
                                                                                                    >
                                                                                                      <ForwardRef(SwitchBase)
                                                                                                        checked={true}
                                                                                                        checkedIcon={<Memo />}
                                                                                                        classes={
                                                                                                          Object {
                                                                                                            "checked": "PodBrowser-checked PodBrowser-checked",
                                                                                                            "disabled": "PodBrowser-disabled PodBrowser-disabled",
                                                                                                            "input": "PodBrowser-input",
                                                                                                            "root": "PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                          }
                                                                                                        }
                                                                                                        color="secondary"
                                                                                                        icon={<Memo />}
                                                                                                        inputProps={
                                                                                                          Object {
                                                                                                            "data-indeterminate": false,
                                                                                                          }
                                                                                                        }
                                                                                                        name="view"
                                                                                                        onChange={[Function]}
                                                                                                        type="checkbox"
                                                                                                      >
                                                                                                        <WithStyles(ForwardRef(IconButton))
                                                                                                          className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                          color="secondary"
                                                                                                          component="span"
                                                                                                          onBlur={[Function]}
                                                                                                          onFocus={[Function]}
                                                                                                          tabIndex={null}
                                                                                                        >
                                                                                                          <ForwardRef(IconButton)
                                                                                                            className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                            classes={
                                                                                                              Object {
                                                                                                                "colorInherit": "PodBrowser-colorInherit",
                                                                                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                "disabled": "PodBrowser-disabled",
                                                                                                                "edgeEnd": "PodBrowser-edgeEnd",
                                                                                                                "edgeStart": "PodBrowser-edgeStart",
                                                                                                                "label": "PodBrowser-label",
                                                                                                                "root": "PodBrowser-root",
                                                                                                                "sizeSmall": "PodBrowser-sizeSmall",
                                                                                                              }
                                                                                                            }
                                                                                                            color="secondary"
                                                                                                            component="span"
                                                                                                            onBlur={[Function]}
                                                                                                            onFocus={[Function]}
                                                                                                            tabIndex={null}
                                                                                                          >
                                                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                                                              centerRipple={true}
                                                                                                              className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                              component="span"
                                                                                                              disabled={false}
                                                                                                              focusRipple={true}
                                                                                                              onBlur={[Function]}
                                                                                                              onFocus={[Function]}
                                                                                                              tabIndex={null}
                                                                                                            >
                                                                                                              <ForwardRef(ButtonBase)
                                                                                                                centerRipple={true}
                                                                                                                className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                classes={
                                                                                                                  Object {
                                                                                                                    "disabled": "PodBrowser-disabled",
                                                                                                                    "focusVisible": "PodBrowser-focusVisible",
                                                                                                                    "root": "PodBrowser-root",
                                                                                                                  }
                                                                                                                }
                                                                                                                component="span"
                                                                                                                disabled={false}
                                                                                                                focusRipple={true}
                                                                                                                onBlur={[Function]}
                                                                                                                onFocus={[Function]}
                                                                                                                tabIndex={null}
                                                                                                              >
                                                                                                                <span
                                                                                                                  aria-disabled={false}
                                                                                                                  className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                  onBlur={[Function]}
                                                                                                                  onDragLeave={[Function]}
                                                                                                                  onFocus={[Function]}
                                                                                                                  onKeyDown={[Function]}
                                                                                                                  onKeyUp={[Function]}
                                                                                                                  onMouseDown={[Function]}
                                                                                                                  onMouseLeave={[Function]}
                                                                                                                  onMouseUp={[Function]}
                                                                                                                  onTouchEnd={[Function]}
                                                                                                                  onTouchMove={[Function]}
                                                                                                                  onTouchStart={[Function]}
                                                                                                                  tabIndex={null}
                                                                                                                >
                                                                                                                  <span
                                                                                                                    className="PodBrowser-label"
                                                                                                                  >
                                                                                                                    <input
                                                                                                                      checked={true}
                                                                                                                      className="PodBrowser-input"
                                                                                                                      data-indeterminate={false}
                                                                                                                      name="view"
                                                                                                                      onChange={[Function]}
                                                                                                                      type="checkbox"
                                                                                                                    />
                                                                                                                    <ForwardRef(CheckBoxIcon)>
                                                                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                                                                        <ForwardRef(SvgIcon)
                                                                                                                          classes={
                                                                                                                            Object {
                                                                                                                              "colorAction": "PodBrowser-colorAction",
                                                                                                                              "colorDisabled": "PodBrowser-colorDisabled",
                                                                                                                              "colorError": "PodBrowser-colorError",
                                                                                                                              "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                              "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                              "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                                                                              "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                                                                              "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                                                                              "root": "PodBrowser-root",
                                                                                                                            }
                                                                                                                          }
                                                                                                                        >
                                                                                                                          <svg
                                                                                                                            aria-hidden={true}
                                                                                                                            className="PodBrowser-root"
                                                                                                                            focusable="false"
                                                                                                                            viewBox="0 0 24 24"
                                                                                                                          >
                                                                                                                            <path
                                                                                                                              d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                                                                                            />
                                                                                                                          </svg>
                                                                                                                        </ForwardRef(SvgIcon)>
                                                                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                                                                    </ForwardRef(CheckBoxIcon)>
                                                                                                                  </span>
                                                                                                                  <WithStyles(memo)
                                                                                                                    center={true}
                                                                                                                  >
                                                                                                                    <ForwardRef(TouchRipple)
                                                                                                                      center={true}
                                                                                                                      classes={
                                                                                                                        Object {
                                                                                                                          "child": "PodBrowser-child",
                                                                                                                          "childLeaving": "PodBrowser-childLeaving",
                                                                                                                          "childPulsate": "PodBrowser-childPulsate",
                                                                                                                          "ripple": "PodBrowser-ripple",
                                                                                                                          "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                                                                          "rippleVisible": "PodBrowser-rippleVisible",
                                                                                                                          "root": "PodBrowser-root",
                                                                                                                        }
                                                                                                                      }
                                                                                                                    >
                                                                                                                      <span
                                                                                                                        className="PodBrowser-root"
                                                                                                                      >
                                                                                                                        <TransitionGroup
                                                                                                                          childFactory={[Function]}
                                                                                                                          component={null}
                                                                                                                          exit={true}
                                                                                                                        />
                                                                                                                      </span>
                                                                                                                    </ForwardRef(TouchRipple)>
                                                                                                                  </WithStyles(memo)>
                                                                                                                </span>
                                                                                                              </ForwardRef(ButtonBase)>
                                                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                                                          </ForwardRef(IconButton)>
                                                                                                        </WithStyles(ForwardRef(IconButton))>
                                                                                                      </ForwardRef(SwitchBase)>
                                                                                                    </WithStyles(ForwardRef(SwitchBase))>
                                                                                                  </ForwardRef(Checkbox)>
                                                                                                </WithStyles(ForwardRef(Checkbox))>
                                                                                                <WithStyles(ForwardRef(Typography))
                                                                                                  className="PodBrowser-label PodBrowser-label"
                                                                                                  component="span"
                                                                                                >
                                                                                                  <ForwardRef(Typography)
                                                                                                    className="PodBrowser-label PodBrowser-label"
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "alignCenter": "PodBrowser-alignCenter",
                                                                                                        "alignJustify": "PodBrowser-alignJustify",
                                                                                                        "alignLeft": "PodBrowser-alignLeft",
                                                                                                        "alignRight": "PodBrowser-alignRight",
                                                                                                        "body1": "PodBrowser-body1",
                                                                                                        "body2": "PodBrowser-body2",
                                                                                                        "button": "PodBrowser-button",
                                                                                                        "caption": "PodBrowser-caption",
                                                                                                        "colorError": "PodBrowser-colorError",
                                                                                                        "colorInherit": "PodBrowser-colorInherit",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                                                        "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                                                        "displayBlock": "PodBrowser-displayBlock",
                                                                                                        "displayInline": "PodBrowser-displayInline",
                                                                                                        "gutterBottom": "PodBrowser-gutterBottom",
                                                                                                        "h1": "PodBrowser-h1",
                                                                                                        "h2": "PodBrowser-h2",
                                                                                                        "h3": "PodBrowser-h3",
                                                                                                        "h4": "PodBrowser-h4",
                                                                                                        "h5": "PodBrowser-h5",
                                                                                                        "h6": "PodBrowser-h6",
                                                                                                        "noWrap": "PodBrowser-noWrap",
                                                                                                        "overline": "PodBrowser-overline",
                                                                                                        "paragraph": "PodBrowser-paragraph",
                                                                                                        "root": "PodBrowser-root",
                                                                                                        "srOnly": "PodBrowser-srOnly",
                                                                                                        "subtitle1": "PodBrowser-subtitle1",
                                                                                                        "subtitle2": "PodBrowser-subtitle2",
                                                                                                      }
                                                                                                    }
                                                                                                    component="span"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="PodBrowser-root PodBrowser-label PodBrowser-label PodBrowser-body1"
                                                                                                    >
                                                                                                      View
                                                                                                    </span>
                                                                                                  </ForwardRef(Typography)>
                                                                                                </WithStyles(ForwardRef(Typography))>
                                                                                              </label>
                                                                                            </ForwardRef(FormControlLabel)>
                                                                                          </WithStyles(ForwardRef(FormControlLabel))>
                                                                                        </li>
                                                                                      </ForwardRef(ListItem)>
                                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                                  </PermissionCheckbox>
                                                                                  <PermissionCheckbox
                                                                                    classes={
                                                                                      Object {
                                                                                        "checkbox": "PodBrowser-checkbox",
                                                                                        "container": "PodBrowser-container",
                                                                                        "label": "PodBrowser-label",
                                                                                        "listItem": "PodBrowser-listItem",
                                                                                        "selectionClosed": "PodBrowser-selectionClosed",
                                                                                        "selectionOpen": "PodBrowser-selectionOpen",
                                                                                        "summary": "PodBrowser-summary",
                                                                                      }
                                                                                    }
                                                                                    label="Edit"
                                                                                    onChange={[Function]}
                                                                                    value={true}
                                                                                  >
                                                                                    <WithStyles(ForwardRef(ListItem))
                                                                                      className="PodBrowser-listItem"
                                                                                    >
                                                                                      <ForwardRef(ListItem)
                                                                                        className="PodBrowser-listItem"
                                                                                        classes={
                                                                                          Object {
                                                                                            "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                                            "button": "PodBrowser-button",
                                                                                            "container": "PodBrowser-container",
                                                                                            "dense": "PodBrowser-dense",
                                                                                            "disabled": "PodBrowser-disabled",
                                                                                            "divider": "PodBrowser-divider",
                                                                                            "focusVisible": "PodBrowser-focusVisible",
                                                                                            "gutters": "PodBrowser-gutters",
                                                                                            "root": "PodBrowser-root",
                                                                                            "secondaryAction": "PodBrowser-secondaryAction",
                                                                                            "selected": "PodBrowser-selected",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <li
                                                                                          className="PodBrowser-root PodBrowser-listItem PodBrowser-gutters"
                                                                                          disabled={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(FormControlLabel))
                                                                                            classes={
                                                                                              Object {
                                                                                                "label": "PodBrowser-label",
                                                                                              }
                                                                                            }
                                                                                            control={
                                                                                              <WithStyles(ForwardRef(Checkbox))
                                                                                                checked={true}
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "root": "PodBrowser-checkbox",
                                                                                                  }
                                                                                                }
                                                                                                name="edit"
                                                                                                onChange={[Function]}
                                                                                              />
                                                                                            }
                                                                                            key=".0"
                                                                                            label="Edit"
                                                                                          >
                                                                                            <ForwardRef(FormControlLabel)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "disabled": "PodBrowser-disabled",
                                                                                                  "label": "PodBrowser-label PodBrowser-label",
                                                                                                  "labelPlacementBottom": "PodBrowser-labelPlacementBottom",
                                                                                                  "labelPlacementStart": "PodBrowser-labelPlacementStart",
                                                                                                  "labelPlacementTop": "PodBrowser-labelPlacementTop",
                                                                                                  "root": "PodBrowser-root",
                                                                                                }
                                                                                              }
                                                                                              control={
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="edit"
                                                                                                  onChange={[Function]}
                                                                                                />
                                                                                              }
                                                                                              label="Edit"
                                                                                            >
                                                                                              <label
                                                                                                className="PodBrowser-root"
                                                                                              >
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="edit"
                                                                                                  onChange={[Function]}
                                                                                                >
                                                                                                  <ForwardRef(Checkbox)
                                                                                                    checked={true}
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "checked": "PodBrowser-checked",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "disabled": "PodBrowser-disabled",
                                                                                                        "indeterminate": "PodBrowser-indeterminate",
                                                                                                        "root": "PodBrowser-root PodBrowser-checkbox",
                                                                                                      }
                                                                                                    }
                                                                                                    name="edit"
                                                                                                    onChange={[Function]}
                                                                                                  >
                                                                                                    <WithStyles(ForwardRef(SwitchBase))
                                                                                                      checked={true}
                                                                                                      checkedIcon={<Memo />}
                                                                                                      classes={
                                                                                                        Object {
                                                                                                          "checked": "PodBrowser-checked",
                                                                                                          "disabled": "PodBrowser-disabled",
                                                                                                          "root": "PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                        }
                                                                                                      }
                                                                                                      color="secondary"
                                                                                                      icon={<Memo />}
                                                                                                      inputProps={
                                                                                                        Object {
                                                                                                          "data-indeterminate": false,
                                                                                                        }
                                                                                                      }
                                                                                                      name="edit"
                                                                                                      onChange={[Function]}
                                                                                                      type="checkbox"
                                                                                                    >
                                                                                                      <ForwardRef(SwitchBase)
                                                                                                        checked={true}
                                                                                                        checkedIcon={<Memo />}
                                                                                                        classes={
                                                                                                          Object {
                                                                                                            "checked": "PodBrowser-checked PodBrowser-checked",
                                                                                                            "disabled": "PodBrowser-disabled PodBrowser-disabled",
                                                                                                            "input": "PodBrowser-input",
                                                                                                            "root": "PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                          }
                                                                                                        }
                                                                                                        color="secondary"
                                                                                                        icon={<Memo />}
                                                                                                        inputProps={
                                                                                                          Object {
                                                                                                            "data-indeterminate": false,
                                                                                                          }
                                                                                                        }
                                                                                                        name="edit"
                                                                                                        onChange={[Function]}
                                                                                                        type="checkbox"
                                                                                                      >
                                                                                                        <WithStyles(ForwardRef(IconButton))
                                                                                                          className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                          color="secondary"
                                                                                                          component="span"
                                                                                                          onBlur={[Function]}
                                                                                                          onFocus={[Function]}
                                                                                                          tabIndex={null}
                                                                                                        >
                                                                                                          <ForwardRef(IconButton)
                                                                                                            className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                            classes={
                                                                                                              Object {
                                                                                                                "colorInherit": "PodBrowser-colorInherit",
                                                                                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                "disabled": "PodBrowser-disabled",
                                                                                                                "edgeEnd": "PodBrowser-edgeEnd",
                                                                                                                "edgeStart": "PodBrowser-edgeStart",
                                                                                                                "label": "PodBrowser-label",
                                                                                                                "root": "PodBrowser-root",
                                                                                                                "sizeSmall": "PodBrowser-sizeSmall",
                                                                                                              }
                                                                                                            }
                                                                                                            color="secondary"
                                                                                                            component="span"
                                                                                                            onBlur={[Function]}
                                                                                                            onFocus={[Function]}
                                                                                                            tabIndex={null}
                                                                                                          >
                                                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                                                              centerRipple={true}
                                                                                                              className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                              component="span"
                                                                                                              disabled={false}
                                                                                                              focusRipple={true}
                                                                                                              onBlur={[Function]}
                                                                                                              onFocus={[Function]}
                                                                                                              tabIndex={null}
                                                                                                            >
                                                                                                              <ForwardRef(ButtonBase)
                                                                                                                centerRipple={true}
                                                                                                                className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                classes={
                                                                                                                  Object {
                                                                                                                    "disabled": "PodBrowser-disabled",
                                                                                                                    "focusVisible": "PodBrowser-focusVisible",
                                                                                                                    "root": "PodBrowser-root",
                                                                                                                  }
                                                                                                                }
                                                                                                                component="span"
                                                                                                                disabled={false}
                                                                                                                focusRipple={true}
                                                                                                                onBlur={[Function]}
                                                                                                                onFocus={[Function]}
                                                                                                                tabIndex={null}
                                                                                                              >
                                                                                                                <span
                                                                                                                  aria-disabled={false}
                                                                                                                  className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                  onBlur={[Function]}
                                                                                                                  onDragLeave={[Function]}
                                                                                                                  onFocus={[Function]}
                                                                                                                  onKeyDown={[Function]}
                                                                                                                  onKeyUp={[Function]}
                                                                                                                  onMouseDown={[Function]}
                                                                                                                  onMouseLeave={[Function]}
                                                                                                                  onMouseUp={[Function]}
                                                                                                                  onTouchEnd={[Function]}
                                                                                                                  onTouchMove={[Function]}
                                                                                                                  onTouchStart={[Function]}
                                                                                                                  tabIndex={null}
                                                                                                                >
                                                                                                                  <span
                                                                                                                    className="PodBrowser-label"
                                                                                                                  >
                                                                                                                    <input
                                                                                                                      checked={true}
                                                                                                                      className="PodBrowser-input"
                                                                                                                      data-indeterminate={false}
                                                                                                                      name="edit"
                                                                                                                      onChange={[Function]}
                                                                                                                      type="checkbox"
                                                                                                                    />
                                                                                                                    <ForwardRef(CheckBoxIcon)>
                                                                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                                                                        <ForwardRef(SvgIcon)
                                                                                                                          classes={
                                                                                                                            Object {
                                                                                                                              "colorAction": "PodBrowser-colorAction",
                                                                                                                              "colorDisabled": "PodBrowser-colorDisabled",
                                                                                                                              "colorError": "PodBrowser-colorError",
                                                                                                                              "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                              "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                              "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                                                                              "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                                                                              "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                                                                              "root": "PodBrowser-root",
                                                                                                                            }
                                                                                                                          }
                                                                                                                        >
                                                                                                                          <svg
                                                                                                                            aria-hidden={true}
                                                                                                                            className="PodBrowser-root"
                                                                                                                            focusable="false"
                                                                                                                            viewBox="0 0 24 24"
                                                                                                                          >
                                                                                                                            <path
                                                                                                                              d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                                                                                            />
                                                                                                                          </svg>
                                                                                                                        </ForwardRef(SvgIcon)>
                                                                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                                                                    </ForwardRef(CheckBoxIcon)>
                                                                                                                  </span>
                                                                                                                  <WithStyles(memo)
                                                                                                                    center={true}
                                                                                                                  >
                                                                                                                    <ForwardRef(TouchRipple)
                                                                                                                      center={true}
                                                                                                                      classes={
                                                                                                                        Object {
                                                                                                                          "child": "PodBrowser-child",
                                                                                                                          "childLeaving": "PodBrowser-childLeaving",
                                                                                                                          "childPulsate": "PodBrowser-childPulsate",
                                                                                                                          "ripple": "PodBrowser-ripple",
                                                                                                                          "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                                                                          "rippleVisible": "PodBrowser-rippleVisible",
                                                                                                                          "root": "PodBrowser-root",
                                                                                                                        }
                                                                                                                      }
                                                                                                                    >
                                                                                                                      <span
                                                                                                                        className="PodBrowser-root"
                                                                                                                      >
                                                                                                                        <TransitionGroup
                                                                                                                          childFactory={[Function]}
                                                                                                                          component={null}
                                                                                                                          exit={true}
                                                                                                                        />
                                                                                                                      </span>
                                                                                                                    </ForwardRef(TouchRipple)>
                                                                                                                  </WithStyles(memo)>
                                                                                                                </span>
                                                                                                              </ForwardRef(ButtonBase)>
                                                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                                                          </ForwardRef(IconButton)>
                                                                                                        </WithStyles(ForwardRef(IconButton))>
                                                                                                      </ForwardRef(SwitchBase)>
                                                                                                    </WithStyles(ForwardRef(SwitchBase))>
                                                                                                  </ForwardRef(Checkbox)>
                                                                                                </WithStyles(ForwardRef(Checkbox))>
                                                                                                <WithStyles(ForwardRef(Typography))
                                                                                                  className="PodBrowser-label PodBrowser-label"
                                                                                                  component="span"
                                                                                                >
                                                                                                  <ForwardRef(Typography)
                                                                                                    className="PodBrowser-label PodBrowser-label"
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "alignCenter": "PodBrowser-alignCenter",
                                                                                                        "alignJustify": "PodBrowser-alignJustify",
                                                                                                        "alignLeft": "PodBrowser-alignLeft",
                                                                                                        "alignRight": "PodBrowser-alignRight",
                                                                                                        "body1": "PodBrowser-body1",
                                                                                                        "body2": "PodBrowser-body2",
                                                                                                        "button": "PodBrowser-button",
                                                                                                        "caption": "PodBrowser-caption",
                                                                                                        "colorError": "PodBrowser-colorError",
                                                                                                        "colorInherit": "PodBrowser-colorInherit",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                                                        "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                                                        "displayBlock": "PodBrowser-displayBlock",
                                                                                                        "displayInline": "PodBrowser-displayInline",
                                                                                                        "gutterBottom": "PodBrowser-gutterBottom",
                                                                                                        "h1": "PodBrowser-h1",
                                                                                                        "h2": "PodBrowser-h2",
                                                                                                        "h3": "PodBrowser-h3",
                                                                                                        "h4": "PodBrowser-h4",
                                                                                                        "h5": "PodBrowser-h5",
                                                                                                        "h6": "PodBrowser-h6",
                                                                                                        "noWrap": "PodBrowser-noWrap",
                                                                                                        "overline": "PodBrowser-overline",
                                                                                                        "paragraph": "PodBrowser-paragraph",
                                                                                                        "root": "PodBrowser-root",
                                                                                                        "srOnly": "PodBrowser-srOnly",
                                                                                                        "subtitle1": "PodBrowser-subtitle1",
                                                                                                        "subtitle2": "PodBrowser-subtitle2",
                                                                                                      }
                                                                                                    }
                                                                                                    component="span"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="PodBrowser-root PodBrowser-label PodBrowser-label PodBrowser-body1"
                                                                                                    >
                                                                                                      Edit
                                                                                                    </span>
                                                                                                  </ForwardRef(Typography)>
                                                                                                </WithStyles(ForwardRef(Typography))>
                                                                                              </label>
                                                                                            </ForwardRef(FormControlLabel)>
                                                                                          </WithStyles(ForwardRef(FormControlLabel))>
                                                                                        </li>
                                                                                      </ForwardRef(ListItem)>
                                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                                  </PermissionCheckbox>
                                                                                  <PermissionCheckbox
                                                                                    classes={
                                                                                      Object {
                                                                                        "checkbox": "PodBrowser-checkbox",
                                                                                        "container": "PodBrowser-container",
                                                                                        "label": "PodBrowser-label",
                                                                                        "listItem": "PodBrowser-listItem",
                                                                                        "selectionClosed": "PodBrowser-selectionClosed",
                                                                                        "selectionOpen": "PodBrowser-selectionOpen",
                                                                                        "summary": "PodBrowser-summary",
                                                                                      }
                                                                                    }
                                                                                    label="Append"
                                                                                    onChange={[Function]}
                                                                                    value={true}
                                                                                  >
                                                                                    <WithStyles(ForwardRef(ListItem))
                                                                                      className="PodBrowser-listItem"
                                                                                    >
                                                                                      <ForwardRef(ListItem)
                                                                                        className="PodBrowser-listItem"
                                                                                        classes={
                                                                                          Object {
                                                                                            "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                                            "button": "PodBrowser-button",
                                                                                            "container": "PodBrowser-container",
                                                                                            "dense": "PodBrowser-dense",
                                                                                            "disabled": "PodBrowser-disabled",
                                                                                            "divider": "PodBrowser-divider",
                                                                                            "focusVisible": "PodBrowser-focusVisible",
                                                                                            "gutters": "PodBrowser-gutters",
                                                                                            "root": "PodBrowser-root",
                                                                                            "secondaryAction": "PodBrowser-secondaryAction",
                                                                                            "selected": "PodBrowser-selected",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <li
                                                                                          className="PodBrowser-root PodBrowser-listItem PodBrowser-gutters"
                                                                                          disabled={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(FormControlLabel))
                                                                                            classes={
                                                                                              Object {
                                                                                                "label": "PodBrowser-label",
                                                                                              }
                                                                                            }
                                                                                            control={
                                                                                              <WithStyles(ForwardRef(Checkbox))
                                                                                                checked={true}
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "root": "PodBrowser-checkbox",
                                                                                                  }
                                                                                                }
                                                                                                name="append"
                                                                                                onChange={[Function]}
                                                                                              />
                                                                                            }
                                                                                            key=".0"
                                                                                            label="Append"
                                                                                          >
                                                                                            <ForwardRef(FormControlLabel)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "disabled": "PodBrowser-disabled",
                                                                                                  "label": "PodBrowser-label PodBrowser-label",
                                                                                                  "labelPlacementBottom": "PodBrowser-labelPlacementBottom",
                                                                                                  "labelPlacementStart": "PodBrowser-labelPlacementStart",
                                                                                                  "labelPlacementTop": "PodBrowser-labelPlacementTop",
                                                                                                  "root": "PodBrowser-root",
                                                                                                }
                                                                                              }
                                                                                              control={
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="append"
                                                                                                  onChange={[Function]}
                                                                                                />
                                                                                              }
                                                                                              label="Append"
                                                                                            >
                                                                                              <label
                                                                                                className="PodBrowser-root"
                                                                                              >
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="append"
                                                                                                  onChange={[Function]}
                                                                                                >
                                                                                                  <ForwardRef(Checkbox)
                                                                                                    checked={true}
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "checked": "PodBrowser-checked",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "disabled": "PodBrowser-disabled",
                                                                                                        "indeterminate": "PodBrowser-indeterminate",
                                                                                                        "root": "PodBrowser-root PodBrowser-checkbox",
                                                                                                      }
                                                                                                    }
                                                                                                    name="append"
                                                                                                    onChange={[Function]}
                                                                                                  >
                                                                                                    <WithStyles(ForwardRef(SwitchBase))
                                                                                                      checked={true}
                                                                                                      checkedIcon={<Memo />}
                                                                                                      classes={
                                                                                                        Object {
                                                                                                          "checked": "PodBrowser-checked",
                                                                                                          "disabled": "PodBrowser-disabled",
                                                                                                          "root": "PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                        }
                                                                                                      }
                                                                                                      color="secondary"
                                                                                                      icon={<Memo />}
                                                                                                      inputProps={
                                                                                                        Object {
                                                                                                          "data-indeterminate": false,
                                                                                                        }
                                                                                                      }
                                                                                                      name="append"
                                                                                                      onChange={[Function]}
                                                                                                      type="checkbox"
                                                                                                    >
                                                                                                      <ForwardRef(SwitchBase)
                                                                                                        checked={true}
                                                                                                        checkedIcon={<Memo />}
                                                                                                        classes={
                                                                                                          Object {
                                                                                                            "checked": "PodBrowser-checked PodBrowser-checked",
                                                                                                            "disabled": "PodBrowser-disabled PodBrowser-disabled",
                                                                                                            "input": "PodBrowser-input",
                                                                                                            "root": "PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                          }
                                                                                                        }
                                                                                                        color="secondary"
                                                                                                        icon={<Memo />}
                                                                                                        inputProps={
                                                                                                          Object {
                                                                                                            "data-indeterminate": false,
                                                                                                          }
                                                                                                        }
                                                                                                        name="append"
                                                                                                        onChange={[Function]}
                                                                                                        type="checkbox"
                                                                                                      >
                                                                                                        <WithStyles(ForwardRef(IconButton))
                                                                                                          className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                          color="secondary"
                                                                                                          component="span"
                                                                                                          onBlur={[Function]}
                                                                                                          onFocus={[Function]}
                                                                                                          tabIndex={null}
                                                                                                        >
                                                                                                          <ForwardRef(IconButton)
                                                                                                            className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                            classes={
                                                                                                              Object {
                                                                                                                "colorInherit": "PodBrowser-colorInherit",
                                                                                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                "disabled": "PodBrowser-disabled",
                                                                                                                "edgeEnd": "PodBrowser-edgeEnd",
                                                                                                                "edgeStart": "PodBrowser-edgeStart",
                                                                                                                "label": "PodBrowser-label",
                                                                                                                "root": "PodBrowser-root",
                                                                                                                "sizeSmall": "PodBrowser-sizeSmall",
                                                                                                              }
                                                                                                            }
                                                                                                            color="secondary"
                                                                                                            component="span"
                                                                                                            onBlur={[Function]}
                                                                                                            onFocus={[Function]}
                                                                                                            tabIndex={null}
                                                                                                          >
                                                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                                                              centerRipple={true}
                                                                                                              className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                              component="span"
                                                                                                              disabled={false}
                                                                                                              focusRipple={true}
                                                                                                              onBlur={[Function]}
                                                                                                              onFocus={[Function]}
                                                                                                              tabIndex={null}
                                                                                                            >
                                                                                                              <ForwardRef(ButtonBase)
                                                                                                                centerRipple={true}
                                                                                                                className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                classes={
                                                                                                                  Object {
                                                                                                                    "disabled": "PodBrowser-disabled",
                                                                                                                    "focusVisible": "PodBrowser-focusVisible",
                                                                                                                    "root": "PodBrowser-root",
                                                                                                                  }
                                                                                                                }
                                                                                                                component="span"
                                                                                                                disabled={false}
                                                                                                                focusRipple={true}
                                                                                                                onBlur={[Function]}
                                                                                                                onFocus={[Function]}
                                                                                                                tabIndex={null}
                                                                                                              >
                                                                                                                <span
                                                                                                                  aria-disabled={false}
                                                                                                                  className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                  onBlur={[Function]}
                                                                                                                  onDragLeave={[Function]}
                                                                                                                  onFocus={[Function]}
                                                                                                                  onKeyDown={[Function]}
                                                                                                                  onKeyUp={[Function]}
                                                                                                                  onMouseDown={[Function]}
                                                                                                                  onMouseLeave={[Function]}
                                                                                                                  onMouseUp={[Function]}
                                                                                                                  onTouchEnd={[Function]}
                                                                                                                  onTouchMove={[Function]}
                                                                                                                  onTouchStart={[Function]}
                                                                                                                  tabIndex={null}
                                                                                                                >
                                                                                                                  <span
                                                                                                                    className="PodBrowser-label"
                                                                                                                  >
                                                                                                                    <input
                                                                                                                      checked={true}
                                                                                                                      className="PodBrowser-input"
                                                                                                                      data-indeterminate={false}
                                                                                                                      name="append"
                                                                                                                      onChange={[Function]}
                                                                                                                      type="checkbox"
                                                                                                                    />
                                                                                                                    <ForwardRef(CheckBoxIcon)>
                                                                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                                                                        <ForwardRef(SvgIcon)
                                                                                                                          classes={
                                                                                                                            Object {
                                                                                                                              "colorAction": "PodBrowser-colorAction",
                                                                                                                              "colorDisabled": "PodBrowser-colorDisabled",
                                                                                                                              "colorError": "PodBrowser-colorError",
                                                                                                                              "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                              "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                              "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                                                                              "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                                                                              "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                                                                              "root": "PodBrowser-root",
                                                                                                                            }
                                                                                                                          }
                                                                                                                        >
                                                                                                                          <svg
                                                                                                                            aria-hidden={true}
                                                                                                                            className="PodBrowser-root"
                                                                                                                            focusable="false"
                                                                                                                            viewBox="0 0 24 24"
                                                                                                                          >
                                                                                                                            <path
                                                                                                                              d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                                                                                            />
                                                                                                                          </svg>
                                                                                                                        </ForwardRef(SvgIcon)>
                                                                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                                                                    </ForwardRef(CheckBoxIcon)>
                                                                                                                  </span>
                                                                                                                  <WithStyles(memo)
                                                                                                                    center={true}
                                                                                                                  >
                                                                                                                    <ForwardRef(TouchRipple)
                                                                                                                      center={true}
                                                                                                                      classes={
                                                                                                                        Object {
                                                                                                                          "child": "PodBrowser-child",
                                                                                                                          "childLeaving": "PodBrowser-childLeaving",
                                                                                                                          "childPulsate": "PodBrowser-childPulsate",
                                                                                                                          "ripple": "PodBrowser-ripple",
                                                                                                                          "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                                                                          "rippleVisible": "PodBrowser-rippleVisible",
                                                                                                                          "root": "PodBrowser-root",
                                                                                                                        }
                                                                                                                      }
                                                                                                                    >
                                                                                                                      <span
                                                                                                                        className="PodBrowser-root"
                                                                                                                      >
                                                                                                                        <TransitionGroup
                                                                                                                          childFactory={[Function]}
                                                                                                                          component={null}
                                                                                                                          exit={true}
                                                                                                                        />
                                                                                                                      </span>
                                                                                                                    </ForwardRef(TouchRipple)>
                                                                                                                  </WithStyles(memo)>
                                                                                                                </span>
                                                                                                              </ForwardRef(ButtonBase)>
                                                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                                                          </ForwardRef(IconButton)>
                                                                                                        </WithStyles(ForwardRef(IconButton))>
                                                                                                      </ForwardRef(SwitchBase)>
                                                                                                    </WithStyles(ForwardRef(SwitchBase))>
                                                                                                  </ForwardRef(Checkbox)>
                                                                                                </WithStyles(ForwardRef(Checkbox))>
                                                                                                <WithStyles(ForwardRef(Typography))
                                                                                                  className="PodBrowser-label PodBrowser-label"
                                                                                                  component="span"
                                                                                                >
                                                                                                  <ForwardRef(Typography)
                                                                                                    className="PodBrowser-label PodBrowser-label"
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "alignCenter": "PodBrowser-alignCenter",
                                                                                                        "alignJustify": "PodBrowser-alignJustify",
                                                                                                        "alignLeft": "PodBrowser-alignLeft",
                                                                                                        "alignRight": "PodBrowser-alignRight",
                                                                                                        "body1": "PodBrowser-body1",
                                                                                                        "body2": "PodBrowser-body2",
                                                                                                        "button": "PodBrowser-button",
                                                                                                        "caption": "PodBrowser-caption",
                                                                                                        "colorError": "PodBrowser-colorError",
                                                                                                        "colorInherit": "PodBrowser-colorInherit",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                                                        "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                                                        "displayBlock": "PodBrowser-displayBlock",
                                                                                                        "displayInline": "PodBrowser-displayInline",
                                                                                                        "gutterBottom": "PodBrowser-gutterBottom",
                                                                                                        "h1": "PodBrowser-h1",
                                                                                                        "h2": "PodBrowser-h2",
                                                                                                        "h3": "PodBrowser-h3",
                                                                                                        "h4": "PodBrowser-h4",
                                                                                                        "h5": "PodBrowser-h5",
                                                                                                        "h6": "PodBrowser-h6",
                                                                                                        "noWrap": "PodBrowser-noWrap",
                                                                                                        "overline": "PodBrowser-overline",
                                                                                                        "paragraph": "PodBrowser-paragraph",
                                                                                                        "root": "PodBrowser-root",
                                                                                                        "srOnly": "PodBrowser-srOnly",
                                                                                                        "subtitle1": "PodBrowser-subtitle1",
                                                                                                        "subtitle2": "PodBrowser-subtitle2",
                                                                                                      }
                                                                                                    }
                                                                                                    component="span"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="PodBrowser-root PodBrowser-label PodBrowser-label PodBrowser-body1"
                                                                                                    >
                                                                                                      Append
                                                                                                    </span>
                                                                                                  </ForwardRef(Typography)>
                                                                                                </WithStyles(ForwardRef(Typography))>
                                                                                              </label>
                                                                                            </ForwardRef(FormControlLabel)>
                                                                                          </WithStyles(ForwardRef(FormControlLabel))>
                                                                                        </li>
                                                                                      </ForwardRef(ListItem)>
                                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                                  </PermissionCheckbox>
                                                                                  <PermissionCheckbox
                                                                                    classes={
                                                                                      Object {
                                                                                        "checkbox": "PodBrowser-checkbox",
                                                                                        "container": "PodBrowser-container",
                                                                                        "label": "PodBrowser-label",
                                                                                        "listItem": "PodBrowser-listItem",
                                                                                        "selectionClosed": "PodBrowser-selectionClosed",
                                                                                        "selectionOpen": "PodBrowser-selectionOpen",
                                                                                        "summary": "PodBrowser-summary",
                                                                                      }
                                                                                    }
                                                                                    label="Control"
                                                                                    onChange={[Function]}
                                                                                    value={true}
                                                                                  >
                                                                                    <WithStyles(ForwardRef(ListItem))
                                                                                      className="PodBrowser-listItem"
                                                                                    >
                                                                                      <ForwardRef(ListItem)
                                                                                        className="PodBrowser-listItem"
                                                                                        classes={
                                                                                          Object {
                                                                                            "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                                            "button": "PodBrowser-button",
                                                                                            "container": "PodBrowser-container",
                                                                                            "dense": "PodBrowser-dense",
                                                                                            "disabled": "PodBrowser-disabled",
                                                                                            "divider": "PodBrowser-divider",
                                                                                            "focusVisible": "PodBrowser-focusVisible",
                                                                                            "gutters": "PodBrowser-gutters",
                                                                                            "root": "PodBrowser-root",
                                                                                            "secondaryAction": "PodBrowser-secondaryAction",
                                                                                            "selected": "PodBrowser-selected",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <li
                                                                                          className="PodBrowser-root PodBrowser-listItem PodBrowser-gutters"
                                                                                          disabled={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(FormControlLabel))
                                                                                            classes={
                                                                                              Object {
                                                                                                "label": "PodBrowser-label",
                                                                                              }
                                                                                            }
                                                                                            control={
                                                                                              <WithStyles(ForwardRef(Checkbox))
                                                                                                checked={true}
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "root": "PodBrowser-checkbox",
                                                                                                  }
                                                                                                }
                                                                                                name="control"
                                                                                                onChange={[Function]}
                                                                                              />
                                                                                            }
                                                                                            key=".0"
                                                                                            label="Control"
                                                                                          >
                                                                                            <ForwardRef(FormControlLabel)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "disabled": "PodBrowser-disabled",
                                                                                                  "label": "PodBrowser-label PodBrowser-label",
                                                                                                  "labelPlacementBottom": "PodBrowser-labelPlacementBottom",
                                                                                                  "labelPlacementStart": "PodBrowser-labelPlacementStart",
                                                                                                  "labelPlacementTop": "PodBrowser-labelPlacementTop",
                                                                                                  "root": "PodBrowser-root",
                                                                                                }
                                                                                              }
                                                                                              control={
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="control"
                                                                                                  onChange={[Function]}
                                                                                                />
                                                                                              }
                                                                                              label="Control"
                                                                                            >
                                                                                              <label
                                                                                                className="PodBrowser-root"
                                                                                              >
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="control"
                                                                                                  onChange={[Function]}
                                                                                                >
                                                                                                  <ForwardRef(Checkbox)
                                                                                                    checked={true}
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "checked": "PodBrowser-checked",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "disabled": "PodBrowser-disabled",
                                                                                                        "indeterminate": "PodBrowser-indeterminate",
                                                                                                        "root": "PodBrowser-root PodBrowser-checkbox",
                                                                                                      }
                                                                                                    }
                                                                                                    name="control"
                                                                                                    onChange={[Function]}
                                                                                                  >
                                                                                                    <WithStyles(ForwardRef(SwitchBase))
                                                                                                      checked={true}
                                                                                                      checkedIcon={<Memo />}
                                                                                                      classes={
                                                                                                        Object {
                                                                                                          "checked": "PodBrowser-checked",
                                                                                                          "disabled": "PodBrowser-disabled",
                                                                                                          "root": "PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                        }
                                                                                                      }
                                                                                                      color="secondary"
                                                                                                      icon={<Memo />}
                                                                                                      inputProps={
                                                                                                        Object {
                                                                                                          "data-indeterminate": false,
                                                                                                        }
                                                                                                      }
                                                                                                      name="control"
                                                                                                      onChange={[Function]}
                                                                                                      type="checkbox"
                                                                                                    >
                                                                                                      <ForwardRef(SwitchBase)
                                                                                                        checked={true}
                                                                                                        checkedIcon={<Memo />}
                                                                                                        classes={
                                                                                                          Object {
                                                                                                            "checked": "PodBrowser-checked PodBrowser-checked",
                                                                                                            "disabled": "PodBrowser-disabled PodBrowser-disabled",
                                                                                                            "input": "PodBrowser-input",
                                                                                                            "root": "PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                          }
                                                                                                        }
                                                                                                        color="secondary"
                                                                                                        icon={<Memo />}
                                                                                                        inputProps={
                                                                                                          Object {
                                                                                                            "data-indeterminate": false,
                                                                                                          }
                                                                                                        }
                                                                                                        name="control"
                                                                                                        onChange={[Function]}
                                                                                                        type="checkbox"
                                                                                                      >
                                                                                                        <WithStyles(ForwardRef(IconButton))
                                                                                                          className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                          color="secondary"
                                                                                                          component="span"
                                                                                                          onBlur={[Function]}
                                                                                                          onFocus={[Function]}
                                                                                                          tabIndex={null}
                                                                                                        >
                                                                                                          <ForwardRef(IconButton)
                                                                                                            className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                            classes={
                                                                                                              Object {
                                                                                                                "colorInherit": "PodBrowser-colorInherit",
                                                                                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                "disabled": "PodBrowser-disabled",
                                                                                                                "edgeEnd": "PodBrowser-edgeEnd",
                                                                                                                "edgeStart": "PodBrowser-edgeStart",
                                                                                                                "label": "PodBrowser-label",
                                                                                                                "root": "PodBrowser-root",
                                                                                                                "sizeSmall": "PodBrowser-sizeSmall",
                                                                                                              }
                                                                                                            }
                                                                                                            color="secondary"
                                                                                                            component="span"
                                                                                                            onBlur={[Function]}
                                                                                                            onFocus={[Function]}
                                                                                                            tabIndex={null}
                                                                                                          >
                                                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                                                              centerRipple={true}
                                                                                                              className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                              component="span"
                                                                                                              disabled={false}
                                                                                                              focusRipple={true}
                                                                                                              onBlur={[Function]}
                                                                                                              onFocus={[Function]}
                                                                                                              tabIndex={null}
                                                                                                            >
                                                                                                              <ForwardRef(ButtonBase)
                                                                                                                centerRipple={true}
                                                                                                                className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                classes={
                                                                                                                  Object {
                                                                                                                    "disabled": "PodBrowser-disabled",
                                                                                                                    "focusVisible": "PodBrowser-focusVisible",
                                                                                                                    "root": "PodBrowser-root",
                                                                                                                  }
                                                                                                                }
                                                                                                                component="span"
                                                                                                                disabled={false}
                                                                                                                focusRipple={true}
                                                                                                                onBlur={[Function]}
                                                                                                                onFocus={[Function]}
                                                                                                                tabIndex={null}
                                                                                                              >
                                                                                                                <span
                                                                                                                  aria-disabled={false}
                                                                                                                  className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                  onBlur={[Function]}
                                                                                                                  onDragLeave={[Function]}
                                                                                                                  onFocus={[Function]}
                                                                                                                  onKeyDown={[Function]}
                                                                                                                  onKeyUp={[Function]}
                                                                                                                  onMouseDown={[Function]}
                                                                                                                  onMouseLeave={[Function]}
                                                                                                                  onMouseUp={[Function]}
                                                                                                                  onTouchEnd={[Function]}
                                                                                                                  onTouchMove={[Function]}
                                                                                                                  onTouchStart={[Function]}
                                                                                                                  tabIndex={null}
                                                                                                                >
                                                                                                                  <span
                                                                                                                    className="PodBrowser-label"
                                                                                                                  >
                                                                                                                    <input
                                                                                                                      checked={true}
                                                                                                                      className="PodBrowser-input"
                                                                                                                      data-indeterminate={false}
                                                                                                                      name="control"
                                                                                                                      onChange={[Function]}
                                                                                                                      type="checkbox"
                                                                                                                    />
                                                                                                                    <ForwardRef(CheckBoxIcon)>
                                                                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                                                                        <ForwardRef(SvgIcon)
                                                                                                                          classes={
                                                                                                                            Object {
                                                                                                                              "colorAction": "PodBrowser-colorAction",
                                                                                                                              "colorDisabled": "PodBrowser-colorDisabled",
                                                                                                                              "colorError": "PodBrowser-colorError",
                                                                                                                              "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                              "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                              "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                                                                              "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                                                                              "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                                                                              "root": "PodBrowser-root",
                                                                                                                            }
                                                                                                                          }
                                                                                                                        >
                                                                                                                          <svg
                                                                                                                            aria-hidden={true}
                                                                                                                            className="PodBrowser-root"
                                                                                                                            focusable="false"
                                                                                                                            viewBox="0 0 24 24"
                                                                                                                          >
                                                                                                                            <path
                                                                                                                              d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                                                                                            />
                                                                                                                          </svg>
                                                                                                                        </ForwardRef(SvgIcon)>
                                                                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                                                                    </ForwardRef(CheckBoxIcon)>
                                                                                                                  </span>
                                                                                                                  <WithStyles(memo)
                                                                                                                    center={true}
                                                                                                                  >
                                                                                                                    <ForwardRef(TouchRipple)
                                                                                                                      center={true}
                                                                                                                      classes={
                                                                                                                        Object {
                                                                                                                          "child": "PodBrowser-child",
                                                                                                                          "childLeaving": "PodBrowser-childLeaving",
                                                                                                                          "childPulsate": "PodBrowser-childPulsate",
                                                                                                                          "ripple": "PodBrowser-ripple",
                                                                                                                          "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                                                                          "rippleVisible": "PodBrowser-rippleVisible",
                                                                                                                          "root": "PodBrowser-root",
                                                                                                                        }
                                                                                                                      }
                                                                                                                    >
                                                                                                                      <span
                                                                                                                        className="PodBrowser-root"
                                                                                                                      >
                                                                                                                        <TransitionGroup
                                                                                                                          childFactory={[Function]}
                                                                                                                          component={null}
                                                                                                                          exit={true}
                                                                                                                        />
                                                                                                                      </span>
                                                                                                                    </ForwardRef(TouchRipple)>
                                                                                                                  </WithStyles(memo)>
                                                                                                                </span>
                                                                                                              </ForwardRef(ButtonBase)>
                                                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                                                          </ForwardRef(IconButton)>
                                                                                                        </WithStyles(ForwardRef(IconButton))>
                                                                                                      </ForwardRef(SwitchBase)>
                                                                                                    </WithStyles(ForwardRef(SwitchBase))>
                                                                                                  </ForwardRef(Checkbox)>
                                                                                                </WithStyles(ForwardRef(Checkbox))>
                                                                                                <WithStyles(ForwardRef(Typography))
                                                                                                  className="PodBrowser-label PodBrowser-label"
                                                                                                  component="span"
                                                                                                >
                                                                                                  <ForwardRef(Typography)
                                                                                                    className="PodBrowser-label PodBrowser-label"
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "alignCenter": "PodBrowser-alignCenter",
                                                                                                        "alignJustify": "PodBrowser-alignJustify",
                                                                                                        "alignLeft": "PodBrowser-alignLeft",
                                                                                                        "alignRight": "PodBrowser-alignRight",
                                                                                                        "body1": "PodBrowser-body1",
                                                                                                        "body2": "PodBrowser-body2",
                                                                                                        "button": "PodBrowser-button",
                                                                                                        "caption": "PodBrowser-caption",
                                                                                                        "colorError": "PodBrowser-colorError",
                                                                                                        "colorInherit": "PodBrowser-colorInherit",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                                                        "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                                                        "displayBlock": "PodBrowser-displayBlock",
                                                                                                        "displayInline": "PodBrowser-displayInline",
                                                                                                        "gutterBottom": "PodBrowser-gutterBottom",
                                                                                                        "h1": "PodBrowser-h1",
                                                                                                        "h2": "PodBrowser-h2",
                                                                                                        "h3": "PodBrowser-h3",
                                                                                                        "h4": "PodBrowser-h4",
                                                                                                        "h5": "PodBrowser-h5",
                                                                                                        "h6": "PodBrowser-h6",
                                                                                                        "noWrap": "PodBrowser-noWrap",
                                                                                                        "overline": "PodBrowser-overline",
                                                                                                        "paragraph": "PodBrowser-paragraph",
                                                                                                        "root": "PodBrowser-root",
                                                                                                        "srOnly": "PodBrowser-srOnly",
                                                                                                        "subtitle1": "PodBrowser-subtitle1",
                                                                                                        "subtitle2": "PodBrowser-subtitle2",
                                                                                                      }
                                                                                                    }
                                                                                                    component="span"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="PodBrowser-root PodBrowser-label PodBrowser-label PodBrowser-body1"
                                                                                                    >
                                                                                                      Control
                                                                                                    </span>
                                                                                                  </ForwardRef(Typography)>
                                                                                                </WithStyles(ForwardRef(Typography))>
                                                                                              </label>
                                                                                            </ForwardRef(FormControlLabel)>
                                                                                          </WithStyles(ForwardRef(FormControlLabel))>
                                                                                        </li>
                                                                                      </ForwardRef(ListItem)>
                                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                                  </PermissionCheckbox>
                                                                                </ul>
                                                                              </ForwardRef(List)>
                                                                            </WithStyles(ForwardRef(List))>
                                                                            <WithStyles(ForwardRef(Button))
                                                                              onClick={[Function]}
                                                                              variant="contained"
                                                                            >
                                                                              <ForwardRef(Button)
                                                                                classes={
                                                                                  Object {
                                                                                    "colorInherit": "PodBrowser-colorInherit",
                                                                                    "contained": "PodBrowser-contained",
                                                                                    "containedPrimary": "PodBrowser-containedPrimary",
                                                                                    "containedSecondary": "PodBrowser-containedSecondary",
                                                                                    "containedSizeLarge": "PodBrowser-containedSizeLarge",
                                                                                    "containedSizeSmall": "PodBrowser-containedSizeSmall",
                                                                                    "disableElevation": "PodBrowser-disableElevation",
                                                                                    "disabled": "PodBrowser-disabled",
                                                                                    "endIcon": "PodBrowser-endIcon",
                                                                                    "focusVisible": "PodBrowser-focusVisible",
                                                                                    "fullWidth": "PodBrowser-fullWidth",
                                                                                    "iconSizeLarge": "PodBrowser-iconSizeLarge",
                                                                                    "iconSizeMedium": "PodBrowser-iconSizeMedium",
                                                                                    "iconSizeSmall": "PodBrowser-iconSizeSmall",
                                                                                    "label": "PodBrowser-label",
                                                                                    "outlined": "PodBrowser-outlined",
                                                                                    "outlinedPrimary": "PodBrowser-outlinedPrimary",
                                                                                    "outlinedSecondary": "PodBrowser-outlinedSecondary",
                                                                                    "outlinedSizeLarge": "PodBrowser-outlinedSizeLarge",
                                                                                    "outlinedSizeSmall": "PodBrowser-outlinedSizeSmall",
                                                                                    "root": "PodBrowser-root",
                                                                                    "sizeLarge": "PodBrowser-sizeLarge",
                                                                                    "sizeSmall": "PodBrowser-sizeSmall",
                                                                                    "startIcon": "PodBrowser-startIcon",
                                                                                    "text": "PodBrowser-text",
                                                                                    "textPrimary": "PodBrowser-textPrimary",
                                                                                    "textSecondary": "PodBrowser-textSecondary",
                                                                                    "textSizeLarge": "PodBrowser-textSizeLarge",
                                                                                    "textSizeSmall": "PodBrowser-textSizeSmall",
                                                                                  }
                                                                                }
                                                                                onClick={[Function]}
                                                                                variant="contained"
                                                                              >
                                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                                  className="PodBrowser-root PodBrowser-contained"
                                                                                  component="button"
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  focusVisibleClassName="PodBrowser-focusVisible"
                                                                                  onClick={[Function]}
                                                                                  type="button"
                                                                                >
                                                                                  <ForwardRef(ButtonBase)
                                                                                    className="PodBrowser-root PodBrowser-contained"
                                                                                    classes={
                                                                                      Object {
                                                                                        "disabled": "PodBrowser-disabled",
                                                                                        "focusVisible": "PodBrowser-focusVisible",
                                                                                        "root": "PodBrowser-root",
                                                                                      }
                                                                                    }
                                                                                    component="button"
                                                                                    disabled={false}
                                                                                    focusRipple={true}
                                                                                    focusVisibleClassName="PodBrowser-focusVisible"
                                                                                    onClick={[Function]}
                                                                                    type="button"
                                                                                  >
                                                                                    <button
                                                                                      className="PodBrowser-root PodBrowser-root PodBrowser-contained"
                                                                                      disabled={false}
                                                                                      onBlur={[Function]}
                                                                                      onClick={[Function]}
                                                                                      onDragLeave={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      onKeyDown={[Function]}
                                                                                      onKeyUp={[Function]}
                                                                                      onMouseDown={[Function]}
                                                                                      onMouseLeave={[Function]}
                                                                                      onMouseUp={[Function]}
                                                                                      onTouchEnd={[Function]}
                                                                                      onTouchMove={[Function]}
                                                                                      onTouchStart={[Function]}
                                                                                      tabIndex={0}
                                                                                      type="button"
                                                                                    >
                                                                                      <span
                                                                                        className="PodBrowser-label"
                                                                                      >
                                                                                        Save
                                                                                      </span>
                                                                                      <WithStyles(memo)
                                                                                        center={false}
                                                                                      >
                                                                                        <ForwardRef(TouchRipple)
                                                                                          center={false}
                                                                                          classes={
                                                                                            Object {
                                                                                              "child": "PodBrowser-child",
                                                                                              "childLeaving": "PodBrowser-childLeaving",
                                                                                              "childPulsate": "PodBrowser-childPulsate",
                                                                                              "ripple": "PodBrowser-ripple",
                                                                                              "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                                              "rippleVisible": "PodBrowser-rippleVisible",
                                                                                              "root": "PodBrowser-root",
                                                                                            }
                                                                                          }
                                                                                        >
                                                                                          <span
                                                                                            className="PodBrowser-root"
                                                                                          >
                                                                                            <TransitionGroup
                                                                                              childFactory={[Function]}
                                                                                              component={null}
                                                                                              exit={true}
                                                                                            />
                                                                                          </span>
                                                                                        </ForwardRef(TouchRipple)>
                                                                                      </WithStyles(memo)>
                                                                                    </button>
                                                                                  </ForwardRef(ButtonBase)>
                                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                                              </ForwardRef(Button)>
                                                                            </WithStyles(ForwardRef(Button))>
                                                                          </section>
                                                                        </div>
                                                                      </PermissionsForm>
                                                                    </li>
                                                                  </ForwardRef(ListItem)>
                                                                </WithStyles(ForwardRef(ListItem))>
                                                                <WithStyles(ForwardRef(ListItem))
                                                                  className="PodBrowser-listItem"
                                                                  key="collaborator"
                                                                >
                                                                  <ForwardRef(ListItem)
                                                                    className="PodBrowser-listItem"
                                                                    classes={
                                                                      Object {
                                                                        "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                        "button": "PodBrowser-button",
                                                                        "container": "PodBrowser-container",
                                                                        "dense": "PodBrowser-dense",
                                                                        "disabled": "PodBrowser-disabled",
                                                                        "divider": "PodBrowser-divider",
                                                                        "focusVisible": "PodBrowser-focusVisible",
                                                                        "gutters": "PodBrowser-gutters",
                                                                        "root": "PodBrowser-root",
                                                                        "secondaryAction": "PodBrowser-secondaryAction",
                                                                        "selected": "PodBrowser-selected",
                                                                      }
                                                                    }
                                                                  >
                                                                    <li
                                                                      className="PodBrowser-root PodBrowser-listItem PodBrowser-gutters"
                                                                      disabled={false}
                                                                    >
                                                                      <WithStyles(ForwardRef(Avatar))
                                                                        alt="collaborator"
                                                                        className="PodBrowser-avatar"
                                                                        key=".0"
                                                                        src="/avatar"
                                                                      >
                                                                        <ForwardRef(Avatar)
                                                                          alt="collaborator"
                                                                          className="PodBrowser-avatar"
                                                                          classes={
                                                                            Object {
                                                                              "circle": "PodBrowser-circle",
                                                                              "colorDefault": "PodBrowser-colorDefault",
                                                                              "fallback": "PodBrowser-fallback",
                                                                              "img": "PodBrowser-img",
                                                                              "root": "PodBrowser-root",
                                                                              "rounded": "PodBrowser-rounded",
                                                                              "square": "PodBrowser-square",
                                                                            }
                                                                          }
                                                                          src="/avatar"
                                                                        >
                                                                          <div
                                                                            className="PodBrowser-root PodBrowser-circle PodBrowser-avatar"
                                                                          >
                                                                            <img
                                                                              alt="collaborator"
                                                                              className="PodBrowser-img"
                                                                              src="/avatar"
                                                                            />
                                                                          </div>
                                                                        </ForwardRef(Avatar)>
                                                                      </WithStyles(ForwardRef(Avatar))>
                                                                      <WithStyles(ForwardRef(Typography))
                                                                        className="PodBrowser-detailText"
                                                                        data-testid="agent-web-id"
                                                                        key=".1"
                                                                      >
                                                                        <ForwardRef(Typography)
                                                                          className="PodBrowser-detailText"
                                                                          classes={
                                                                            Object {
                                                                              "alignCenter": "PodBrowser-alignCenter",
                                                                              "alignJustify": "PodBrowser-alignJustify",
                                                                              "alignLeft": "PodBrowser-alignLeft",
                                                                              "alignRight": "PodBrowser-alignRight",
                                                                              "body1": "PodBrowser-body1",
                                                                              "body2": "PodBrowser-body2",
                                                                              "button": "PodBrowser-button",
                                                                              "caption": "PodBrowser-caption",
                                                                              "colorError": "PodBrowser-colorError",
                                                                              "colorInherit": "PodBrowser-colorInherit",
                                                                              "colorPrimary": "PodBrowser-colorPrimary",
                                                                              "colorSecondary": "PodBrowser-colorSecondary",
                                                                              "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                              "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                              "displayBlock": "PodBrowser-displayBlock",
                                                                              "displayInline": "PodBrowser-displayInline",
                                                                              "gutterBottom": "PodBrowser-gutterBottom",
                                                                              "h1": "PodBrowser-h1",
                                                                              "h2": "PodBrowser-h2",
                                                                              "h3": "PodBrowser-h3",
                                                                              "h4": "PodBrowser-h4",
                                                                              "h5": "PodBrowser-h5",
                                                                              "h6": "PodBrowser-h6",
                                                                              "noWrap": "PodBrowser-noWrap",
                                                                              "overline": "PodBrowser-overline",
                                                                              "paragraph": "PodBrowser-paragraph",
                                                                              "root": "PodBrowser-root",
                                                                              "srOnly": "PodBrowser-srOnly",
                                                                              "subtitle1": "PodBrowser-subtitle1",
                                                                              "subtitle2": "PodBrowser-subtitle2",
                                                                            }
                                                                          }
                                                                          data-testid="agent-web-id"
                                                                        >
                                                                          <p
                                                                            className="PodBrowser-root PodBrowser-detailText PodBrowser-body1"
                                                                            data-testid="agent-web-id"
                                                                          >
                                                                            collaborator
                                                                          </p>
                                                                        </ForwardRef(Typography)>
                                                                      </WithStyles(ForwardRef(Typography))>
                                                                      <PermissionsForm
                                                                        key=".$collaborator"
                                                                        onSave={[Function]}
                                                                        permission={
                                                                          Object {
                                                                            "acl": Object {
                                                                              "append": true,
                                                                              "control": true,
                                                                              "read": true,
                                                                              "write": true,
                                                                            },
                                                                            "alias": "Full Control",
                                                                            "profile": Object {
                                                                              "avatar": "/avatar",
                                                                              "webId": "collaborator",
                                                                            },
                                                                            "webId": "collaborator",
                                                                          }
                                                                        }
                                                                        warnOnSubmit={false}
                                                                      >
                                                                        <div
                                                                          className="PodBrowser-container"
                                                                        >
                                                                          <WithStyles(ForwardRef(Button))
                                                                            className="PodBrowser-summary"
                                                                            data-testid="permissions-dropdown-button"
                                                                            endIcon={<Memo(KeyboardArrowDownIcon) />}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <ForwardRef(Button)
                                                                              className="PodBrowser-summary"
                                                                              classes={
                                                                                Object {
                                                                                  "colorInherit": "PodBrowser-colorInherit",
                                                                                  "contained": "PodBrowser-contained",
                                                                                  "containedPrimary": "PodBrowser-containedPrimary",
                                                                                  "containedSecondary": "PodBrowser-containedSecondary",
                                                                                  "containedSizeLarge": "PodBrowser-containedSizeLarge",
                                                                                  "containedSizeSmall": "PodBrowser-containedSizeSmall",
                                                                                  "disableElevation": "PodBrowser-disableElevation",
                                                                                  "disabled": "PodBrowser-disabled",
                                                                                  "endIcon": "PodBrowser-endIcon",
                                                                                  "focusVisible": "PodBrowser-focusVisible",
                                                                                  "fullWidth": "PodBrowser-fullWidth",
                                                                                  "iconSizeLarge": "PodBrowser-iconSizeLarge",
                                                                                  "iconSizeMedium": "PodBrowser-iconSizeMedium",
                                                                                  "iconSizeSmall": "PodBrowser-iconSizeSmall",
                                                                                  "label": "PodBrowser-label",
                                                                                  "outlined": "PodBrowser-outlined",
                                                                                  "outlinedPrimary": "PodBrowser-outlinedPrimary",
                                                                                  "outlinedSecondary": "PodBrowser-outlinedSecondary",
                                                                                  "outlinedSizeLarge": "PodBrowser-outlinedSizeLarge",
                                                                                  "outlinedSizeSmall": "PodBrowser-outlinedSizeSmall",
                                                                                  "root": "PodBrowser-root",
                                                                                  "sizeLarge": "PodBrowser-sizeLarge",
                                                                                  "sizeSmall": "PodBrowser-sizeSmall",
                                                                                  "startIcon": "PodBrowser-startIcon",
                                                                                  "text": "PodBrowser-text",
                                                                                  "textPrimary": "PodBrowser-textPrimary",
                                                                                  "textSecondary": "PodBrowser-textSecondary",
                                                                                  "textSizeLarge": "PodBrowser-textSizeLarge",
                                                                                  "textSizeSmall": "PodBrowser-textSizeSmall",
                                                                                }
                                                                              }
                                                                              data-testid="permissions-dropdown-button"
                                                                              endIcon={<Memo(KeyboardArrowDownIcon) />}
                                                                              onClick={[Function]}
                                                                            >
                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                className="PodBrowser-root PodBrowser-text PodBrowser-summary"
                                                                                component="button"
                                                                                data-testid="permissions-dropdown-button"
                                                                                disabled={false}
                                                                                focusRipple={true}
                                                                                focusVisibleClassName="PodBrowser-focusVisible"
                                                                                onClick={[Function]}
                                                                                type="button"
                                                                              >
                                                                                <ForwardRef(ButtonBase)
                                                                                  className="PodBrowser-root PodBrowser-text PodBrowser-summary"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "PodBrowser-disabled",
                                                                                      "focusVisible": "PodBrowser-focusVisible",
                                                                                      "root": "PodBrowser-root",
                                                                                    }
                                                                                  }
                                                                                  component="button"
                                                                                  data-testid="permissions-dropdown-button"
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  focusVisibleClassName="PodBrowser-focusVisible"
                                                                                  onClick={[Function]}
                                                                                  type="button"
                                                                                >
                                                                                  <button
                                                                                    className="PodBrowser-root PodBrowser-root PodBrowser-text PodBrowser-summary"
                                                                                    data-testid="permissions-dropdown-button"
                                                                                    disabled={false}
                                                                                    onBlur={[Function]}
                                                                                    onClick={[Function]}
                                                                                    onDragLeave={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onMouseLeave={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                    onTouchMove={[Function]}
                                                                                    onTouchStart={[Function]}
                                                                                    tabIndex={0}
                                                                                    type="button"
                                                                                  >
                                                                                    <span
                                                                                      className="PodBrowser-label"
                                                                                    >
                                                                                      <span>
                                                                                        Control
                                                                                      </span>
                                                                                      <span
                                                                                        className="PodBrowser-endIcon PodBrowser-iconSizeMedium"
                                                                                      >
                                                                                        <ForwardRef>
                                                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                                                            <ForwardRef(SvgIcon)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorAction": "PodBrowser-colorAction",
                                                                                                  "colorDisabled": "PodBrowser-colorDisabled",
                                                                                                  "colorError": "PodBrowser-colorError",
                                                                                                  "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                  "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                  "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                                                  "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                                                  "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                                                  "root": "PodBrowser-root",
                                                                                                }
                                                                                              }
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden={true}
                                                                                                className="PodBrowser-root"
                                                                                                focusable="false"
                                                                                                viewBox="0 0 24 24"
                                                                                              >
                                                                                                <path
                                                                                                  d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                                                                                />
                                                                                              </svg>
                                                                                            </ForwardRef(SvgIcon)>
                                                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                                                        </ForwardRef>
                                                                                      </span>
                                                                                    </span>
                                                                                    <WithStyles(memo)
                                                                                      center={false}
                                                                                    >
                                                                                      <ForwardRef(TouchRipple)
                                                                                        center={false}
                                                                                        classes={
                                                                                          Object {
                                                                                            "child": "PodBrowser-child",
                                                                                            "childLeaving": "PodBrowser-childLeaving",
                                                                                            "childPulsate": "PodBrowser-childPulsate",
                                                                                            "ripple": "PodBrowser-ripple",
                                                                                            "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                                            "rippleVisible": "PodBrowser-rippleVisible",
                                                                                            "root": "PodBrowser-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          className="PodBrowser-root"
                                                                                        >
                                                                                          <TransitionGroup
                                                                                            childFactory={[Function]}
                                                                                            component={null}
                                                                                            exit={true}
                                                                                          />
                                                                                        </span>
                                                                                      </ForwardRef(TouchRipple)>
                                                                                    </WithStyles(memo)>
                                                                                  </button>
                                                                                </ForwardRef(ButtonBase)>
                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                            </ForwardRef(Button)>
                                                                          </WithStyles(ForwardRef(Button))>
                                                                          <section
                                                                            className="PodBrowser-selectionClosed"
                                                                          >
                                                                            <WithStyles(ForwardRef(List))>
                                                                              <ForwardRef(List)
                                                                                classes={
                                                                                  Object {
                                                                                    "dense": "PodBrowser-dense",
                                                                                    "padding": "PodBrowser-padding",
                                                                                    "root": "PodBrowser-root",
                                                                                    "subheader": "PodBrowser-subheader",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <ul
                                                                                  className="PodBrowser-root PodBrowser-padding"
                                                                                >
                                                                                  <PermissionCheckbox
                                                                                    classes={
                                                                                      Object {
                                                                                        "checkbox": "PodBrowser-checkbox",
                                                                                        "container": "PodBrowser-container",
                                                                                        "label": "PodBrowser-label",
                                                                                        "listItem": "PodBrowser-listItem",
                                                                                        "selectionClosed": "PodBrowser-selectionClosed",
                                                                                        "selectionOpen": "PodBrowser-selectionOpen",
                                                                                        "summary": "PodBrowser-summary",
                                                                                      }
                                                                                    }
                                                                                    label="View"
                                                                                    onChange={[Function]}
                                                                                    value={true}
                                                                                  >
                                                                                    <WithStyles(ForwardRef(ListItem))
                                                                                      className="PodBrowser-listItem"
                                                                                    >
                                                                                      <ForwardRef(ListItem)
                                                                                        className="PodBrowser-listItem"
                                                                                        classes={
                                                                                          Object {
                                                                                            "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                                            "button": "PodBrowser-button",
                                                                                            "container": "PodBrowser-container",
                                                                                            "dense": "PodBrowser-dense",
                                                                                            "disabled": "PodBrowser-disabled",
                                                                                            "divider": "PodBrowser-divider",
                                                                                            "focusVisible": "PodBrowser-focusVisible",
                                                                                            "gutters": "PodBrowser-gutters",
                                                                                            "root": "PodBrowser-root",
                                                                                            "secondaryAction": "PodBrowser-secondaryAction",
                                                                                            "selected": "PodBrowser-selected",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <li
                                                                                          className="PodBrowser-root PodBrowser-listItem PodBrowser-gutters"
                                                                                          disabled={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(FormControlLabel))
                                                                                            classes={
                                                                                              Object {
                                                                                                "label": "PodBrowser-label",
                                                                                              }
                                                                                            }
                                                                                            control={
                                                                                              <WithStyles(ForwardRef(Checkbox))
                                                                                                checked={true}
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "root": "PodBrowser-checkbox",
                                                                                                  }
                                                                                                }
                                                                                                name="view"
                                                                                                onChange={[Function]}
                                                                                              />
                                                                                            }
                                                                                            key=".0"
                                                                                            label="View"
                                                                                          >
                                                                                            <ForwardRef(FormControlLabel)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "disabled": "PodBrowser-disabled",
                                                                                                  "label": "PodBrowser-label PodBrowser-label",
                                                                                                  "labelPlacementBottom": "PodBrowser-labelPlacementBottom",
                                                                                                  "labelPlacementStart": "PodBrowser-labelPlacementStart",
                                                                                                  "labelPlacementTop": "PodBrowser-labelPlacementTop",
                                                                                                  "root": "PodBrowser-root",
                                                                                                }
                                                                                              }
                                                                                              control={
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="view"
                                                                                                  onChange={[Function]}
                                                                                                />
                                                                                              }
                                                                                              label="View"
                                                                                            >
                                                                                              <label
                                                                                                className="PodBrowser-root"
                                                                                              >
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="view"
                                                                                                  onChange={[Function]}
                                                                                                >
                                                                                                  <ForwardRef(Checkbox)
                                                                                                    checked={true}
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "checked": "PodBrowser-checked",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "disabled": "PodBrowser-disabled",
                                                                                                        "indeterminate": "PodBrowser-indeterminate",
                                                                                                        "root": "PodBrowser-root PodBrowser-checkbox",
                                                                                                      }
                                                                                                    }
                                                                                                    name="view"
                                                                                                    onChange={[Function]}
                                                                                                  >
                                                                                                    <WithStyles(ForwardRef(SwitchBase))
                                                                                                      checked={true}
                                                                                                      checkedIcon={<Memo />}
                                                                                                      classes={
                                                                                                        Object {
                                                                                                          "checked": "PodBrowser-checked",
                                                                                                          "disabled": "PodBrowser-disabled",
                                                                                                          "root": "PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                        }
                                                                                                      }
                                                                                                      color="secondary"
                                                                                                      icon={<Memo />}
                                                                                                      inputProps={
                                                                                                        Object {
                                                                                                          "data-indeterminate": false,
                                                                                                        }
                                                                                                      }
                                                                                                      name="view"
                                                                                                      onChange={[Function]}
                                                                                                      type="checkbox"
                                                                                                    >
                                                                                                      <ForwardRef(SwitchBase)
                                                                                                        checked={true}
                                                                                                        checkedIcon={<Memo />}
                                                                                                        classes={
                                                                                                          Object {
                                                                                                            "checked": "PodBrowser-checked PodBrowser-checked",
                                                                                                            "disabled": "PodBrowser-disabled PodBrowser-disabled",
                                                                                                            "input": "PodBrowser-input",
                                                                                                            "root": "PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                          }
                                                                                                        }
                                                                                                        color="secondary"
                                                                                                        icon={<Memo />}
                                                                                                        inputProps={
                                                                                                          Object {
                                                                                                            "data-indeterminate": false,
                                                                                                          }
                                                                                                        }
                                                                                                        name="view"
                                                                                                        onChange={[Function]}
                                                                                                        type="checkbox"
                                                                                                      >
                                                                                                        <WithStyles(ForwardRef(IconButton))
                                                                                                          className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                          color="secondary"
                                                                                                          component="span"
                                                                                                          onBlur={[Function]}
                                                                                                          onFocus={[Function]}
                                                                                                          tabIndex={null}
                                                                                                        >
                                                                                                          <ForwardRef(IconButton)
                                                                                                            className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                            classes={
                                                                                                              Object {
                                                                                                                "colorInherit": "PodBrowser-colorInherit",
                                                                                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                "disabled": "PodBrowser-disabled",
                                                                                                                "edgeEnd": "PodBrowser-edgeEnd",
                                                                                                                "edgeStart": "PodBrowser-edgeStart",
                                                                                                                "label": "PodBrowser-label",
                                                                                                                "root": "PodBrowser-root",
                                                                                                                "sizeSmall": "PodBrowser-sizeSmall",
                                                                                                              }
                                                                                                            }
                                                                                                            color="secondary"
                                                                                                            component="span"
                                                                                                            onBlur={[Function]}
                                                                                                            onFocus={[Function]}
                                                                                                            tabIndex={null}
                                                                                                          >
                                                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                                                              centerRipple={true}
                                                                                                              className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                              component="span"
                                                                                                              disabled={false}
                                                                                                              focusRipple={true}
                                                                                                              onBlur={[Function]}
                                                                                                              onFocus={[Function]}
                                                                                                              tabIndex={null}
                                                                                                            >
                                                                                                              <ForwardRef(ButtonBase)
                                                                                                                centerRipple={true}
                                                                                                                className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                classes={
                                                                                                                  Object {
                                                                                                                    "disabled": "PodBrowser-disabled",
                                                                                                                    "focusVisible": "PodBrowser-focusVisible",
                                                                                                                    "root": "PodBrowser-root",
                                                                                                                  }
                                                                                                                }
                                                                                                                component="span"
                                                                                                                disabled={false}
                                                                                                                focusRipple={true}
                                                                                                                onBlur={[Function]}
                                                                                                                onFocus={[Function]}
                                                                                                                tabIndex={null}
                                                                                                              >
                                                                                                                <span
                                                                                                                  aria-disabled={false}
                                                                                                                  className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                  onBlur={[Function]}
                                                                                                                  onDragLeave={[Function]}
                                                                                                                  onFocus={[Function]}
                                                                                                                  onKeyDown={[Function]}
                                                                                                                  onKeyUp={[Function]}
                                                                                                                  onMouseDown={[Function]}
                                                                                                                  onMouseLeave={[Function]}
                                                                                                                  onMouseUp={[Function]}
                                                                                                                  onTouchEnd={[Function]}
                                                                                                                  onTouchMove={[Function]}
                                                                                                                  onTouchStart={[Function]}
                                                                                                                  tabIndex={null}
                                                                                                                >
                                                                                                                  <span
                                                                                                                    className="PodBrowser-label"
                                                                                                                  >
                                                                                                                    <input
                                                                                                                      checked={true}
                                                                                                                      className="PodBrowser-input"
                                                                                                                      data-indeterminate={false}
                                                                                                                      name="view"
                                                                                                                      onChange={[Function]}
                                                                                                                      type="checkbox"
                                                                                                                    />
                                                                                                                    <ForwardRef(CheckBoxIcon)>
                                                                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                                                                        <ForwardRef(SvgIcon)
                                                                                                                          classes={
                                                                                                                            Object {
                                                                                                                              "colorAction": "PodBrowser-colorAction",
                                                                                                                              "colorDisabled": "PodBrowser-colorDisabled",
                                                                                                                              "colorError": "PodBrowser-colorError",
                                                                                                                              "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                              "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                              "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                                                                              "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                                                                              "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                                                                              "root": "PodBrowser-root",
                                                                                                                            }
                                                                                                                          }
                                                                                                                        >
                                                                                                                          <svg
                                                                                                                            aria-hidden={true}
                                                                                                                            className="PodBrowser-root"
                                                                                                                            focusable="false"
                                                                                                                            viewBox="0 0 24 24"
                                                                                                                          >
                                                                                                                            <path
                                                                                                                              d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                                                                                            />
                                                                                                                          </svg>
                                                                                                                        </ForwardRef(SvgIcon)>
                                                                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                                                                    </ForwardRef(CheckBoxIcon)>
                                                                                                                  </span>
                                                                                                                  <WithStyles(memo)
                                                                                                                    center={true}
                                                                                                                  >
                                                                                                                    <ForwardRef(TouchRipple)
                                                                                                                      center={true}
                                                                                                                      classes={
                                                                                                                        Object {
                                                                                                                          "child": "PodBrowser-child",
                                                                                                                          "childLeaving": "PodBrowser-childLeaving",
                                                                                                                          "childPulsate": "PodBrowser-childPulsate",
                                                                                                                          "ripple": "PodBrowser-ripple",
                                                                                                                          "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                                                                          "rippleVisible": "PodBrowser-rippleVisible",
                                                                                                                          "root": "PodBrowser-root",
                                                                                                                        }
                                                                                                                      }
                                                                                                                    >
                                                                                                                      <span
                                                                                                                        className="PodBrowser-root"
                                                                                                                      >
                                                                                                                        <TransitionGroup
                                                                                                                          childFactory={[Function]}
                                                                                                                          component={null}
                                                                                                                          exit={true}
                                                                                                                        />
                                                                                                                      </span>
                                                                                                                    </ForwardRef(TouchRipple)>
                                                                                                                  </WithStyles(memo)>
                                                                                                                </span>
                                                                                                              </ForwardRef(ButtonBase)>
                                                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                                                          </ForwardRef(IconButton)>
                                                                                                        </WithStyles(ForwardRef(IconButton))>
                                                                                                      </ForwardRef(SwitchBase)>
                                                                                                    </WithStyles(ForwardRef(SwitchBase))>
                                                                                                  </ForwardRef(Checkbox)>
                                                                                                </WithStyles(ForwardRef(Checkbox))>
                                                                                                <WithStyles(ForwardRef(Typography))
                                                                                                  className="PodBrowser-label PodBrowser-label"
                                                                                                  component="span"
                                                                                                >
                                                                                                  <ForwardRef(Typography)
                                                                                                    className="PodBrowser-label PodBrowser-label"
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "alignCenter": "PodBrowser-alignCenter",
                                                                                                        "alignJustify": "PodBrowser-alignJustify",
                                                                                                        "alignLeft": "PodBrowser-alignLeft",
                                                                                                        "alignRight": "PodBrowser-alignRight",
                                                                                                        "body1": "PodBrowser-body1",
                                                                                                        "body2": "PodBrowser-body2",
                                                                                                        "button": "PodBrowser-button",
                                                                                                        "caption": "PodBrowser-caption",
                                                                                                        "colorError": "PodBrowser-colorError",
                                                                                                        "colorInherit": "PodBrowser-colorInherit",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                                                        "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                                                        "displayBlock": "PodBrowser-displayBlock",
                                                                                                        "displayInline": "PodBrowser-displayInline",
                                                                                                        "gutterBottom": "PodBrowser-gutterBottom",
                                                                                                        "h1": "PodBrowser-h1",
                                                                                                        "h2": "PodBrowser-h2",
                                                                                                        "h3": "PodBrowser-h3",
                                                                                                        "h4": "PodBrowser-h4",
                                                                                                        "h5": "PodBrowser-h5",
                                                                                                        "h6": "PodBrowser-h6",
                                                                                                        "noWrap": "PodBrowser-noWrap",
                                                                                                        "overline": "PodBrowser-overline",
                                                                                                        "paragraph": "PodBrowser-paragraph",
                                                                                                        "root": "PodBrowser-root",
                                                                                                        "srOnly": "PodBrowser-srOnly",
                                                                                                        "subtitle1": "PodBrowser-subtitle1",
                                                                                                        "subtitle2": "PodBrowser-subtitle2",
                                                                                                      }
                                                                                                    }
                                                                                                    component="span"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="PodBrowser-root PodBrowser-label PodBrowser-label PodBrowser-body1"
                                                                                                    >
                                                                                                      View
                                                                                                    </span>
                                                                                                  </ForwardRef(Typography)>
                                                                                                </WithStyles(ForwardRef(Typography))>
                                                                                              </label>
                                                                                            </ForwardRef(FormControlLabel)>
                                                                                          </WithStyles(ForwardRef(FormControlLabel))>
                                                                                        </li>
                                                                                      </ForwardRef(ListItem)>
                                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                                  </PermissionCheckbox>
                                                                                  <PermissionCheckbox
                                                                                    classes={
                                                                                      Object {
                                                                                        "checkbox": "PodBrowser-checkbox",
                                                                                        "container": "PodBrowser-container",
                                                                                        "label": "PodBrowser-label",
                                                                                        "listItem": "PodBrowser-listItem",
                                                                                        "selectionClosed": "PodBrowser-selectionClosed",
                                                                                        "selectionOpen": "PodBrowser-selectionOpen",
                                                                                        "summary": "PodBrowser-summary",
                                                                                      }
                                                                                    }
                                                                                    label="Edit"
                                                                                    onChange={[Function]}
                                                                                    value={true}
                                                                                  >
                                                                                    <WithStyles(ForwardRef(ListItem))
                                                                                      className="PodBrowser-listItem"
                                                                                    >
                                                                                      <ForwardRef(ListItem)
                                                                                        className="PodBrowser-listItem"
                                                                                        classes={
                                                                                          Object {
                                                                                            "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                                            "button": "PodBrowser-button",
                                                                                            "container": "PodBrowser-container",
                                                                                            "dense": "PodBrowser-dense",
                                                                                            "disabled": "PodBrowser-disabled",
                                                                                            "divider": "PodBrowser-divider",
                                                                                            "focusVisible": "PodBrowser-focusVisible",
                                                                                            "gutters": "PodBrowser-gutters",
                                                                                            "root": "PodBrowser-root",
                                                                                            "secondaryAction": "PodBrowser-secondaryAction",
                                                                                            "selected": "PodBrowser-selected",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <li
                                                                                          className="PodBrowser-root PodBrowser-listItem PodBrowser-gutters"
                                                                                          disabled={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(FormControlLabel))
                                                                                            classes={
                                                                                              Object {
                                                                                                "label": "PodBrowser-label",
                                                                                              }
                                                                                            }
                                                                                            control={
                                                                                              <WithStyles(ForwardRef(Checkbox))
                                                                                                checked={true}
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "root": "PodBrowser-checkbox",
                                                                                                  }
                                                                                                }
                                                                                                name="edit"
                                                                                                onChange={[Function]}
                                                                                              />
                                                                                            }
                                                                                            key=".0"
                                                                                            label="Edit"
                                                                                          >
                                                                                            <ForwardRef(FormControlLabel)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "disabled": "PodBrowser-disabled",
                                                                                                  "label": "PodBrowser-label PodBrowser-label",
                                                                                                  "labelPlacementBottom": "PodBrowser-labelPlacementBottom",
                                                                                                  "labelPlacementStart": "PodBrowser-labelPlacementStart",
                                                                                                  "labelPlacementTop": "PodBrowser-labelPlacementTop",
                                                                                                  "root": "PodBrowser-root",
                                                                                                }
                                                                                              }
                                                                                              control={
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="edit"
                                                                                                  onChange={[Function]}
                                                                                                />
                                                                                              }
                                                                                              label="Edit"
                                                                                            >
                                                                                              <label
                                                                                                className="PodBrowser-root"
                                                                                              >
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="edit"
                                                                                                  onChange={[Function]}
                                                                                                >
                                                                                                  <ForwardRef(Checkbox)
                                                                                                    checked={true}
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "checked": "PodBrowser-checked",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "disabled": "PodBrowser-disabled",
                                                                                                        "indeterminate": "PodBrowser-indeterminate",
                                                                                                        "root": "PodBrowser-root PodBrowser-checkbox",
                                                                                                      }
                                                                                                    }
                                                                                                    name="edit"
                                                                                                    onChange={[Function]}
                                                                                                  >
                                                                                                    <WithStyles(ForwardRef(SwitchBase))
                                                                                                      checked={true}
                                                                                                      checkedIcon={<Memo />}
                                                                                                      classes={
                                                                                                        Object {
                                                                                                          "checked": "PodBrowser-checked",
                                                                                                          "disabled": "PodBrowser-disabled",
                                                                                                          "root": "PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                        }
                                                                                                      }
                                                                                                      color="secondary"
                                                                                                      icon={<Memo />}
                                                                                                      inputProps={
                                                                                                        Object {
                                                                                                          "data-indeterminate": false,
                                                                                                        }
                                                                                                      }
                                                                                                      name="edit"
                                                                                                      onChange={[Function]}
                                                                                                      type="checkbox"
                                                                                                    >
                                                                                                      <ForwardRef(SwitchBase)
                                                                                                        checked={true}
                                                                                                        checkedIcon={<Memo />}
                                                                                                        classes={
                                                                                                          Object {
                                                                                                            "checked": "PodBrowser-checked PodBrowser-checked",
                                                                                                            "disabled": "PodBrowser-disabled PodBrowser-disabled",
                                                                                                            "input": "PodBrowser-input",
                                                                                                            "root": "PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                          }
                                                                                                        }
                                                                                                        color="secondary"
                                                                                                        icon={<Memo />}
                                                                                                        inputProps={
                                                                                                          Object {
                                                                                                            "data-indeterminate": false,
                                                                                                          }
                                                                                                        }
                                                                                                        name="edit"
                                                                                                        onChange={[Function]}
                                                                                                        type="checkbox"
                                                                                                      >
                                                                                                        <WithStyles(ForwardRef(IconButton))
                                                                                                          className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                          color="secondary"
                                                                                                          component="span"
                                                                                                          onBlur={[Function]}
                                                                                                          onFocus={[Function]}
                                                                                                          tabIndex={null}
                                                                                                        >
                                                                                                          <ForwardRef(IconButton)
                                                                                                            className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                            classes={
                                                                                                              Object {
                                                                                                                "colorInherit": "PodBrowser-colorInherit",
                                                                                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                "disabled": "PodBrowser-disabled",
                                                                                                                "edgeEnd": "PodBrowser-edgeEnd",
                                                                                                                "edgeStart": "PodBrowser-edgeStart",
                                                                                                                "label": "PodBrowser-label",
                                                                                                                "root": "PodBrowser-root",
                                                                                                                "sizeSmall": "PodBrowser-sizeSmall",
                                                                                                              }
                                                                                                            }
                                                                                                            color="secondary"
                                                                                                            component="span"
                                                                                                            onBlur={[Function]}
                                                                                                            onFocus={[Function]}
                                                                                                            tabIndex={null}
                                                                                                          >
                                                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                                                              centerRipple={true}
                                                                                                              className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                              component="span"
                                                                                                              disabled={false}
                                                                                                              focusRipple={true}
                                                                                                              onBlur={[Function]}
                                                                                                              onFocus={[Function]}
                                                                                                              tabIndex={null}
                                                                                                            >
                                                                                                              <ForwardRef(ButtonBase)
                                                                                                                centerRipple={true}
                                                                                                                className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                classes={
                                                                                                                  Object {
                                                                                                                    "disabled": "PodBrowser-disabled",
                                                                                                                    "focusVisible": "PodBrowser-focusVisible",
                                                                                                                    "root": "PodBrowser-root",
                                                                                                                  }
                                                                                                                }
                                                                                                                component="span"
                                                                                                                disabled={false}
                                                                                                                focusRipple={true}
                                                                                                                onBlur={[Function]}
                                                                                                                onFocus={[Function]}
                                                                                                                tabIndex={null}
                                                                                                              >
                                                                                                                <span
                                                                                                                  aria-disabled={false}
                                                                                                                  className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                  onBlur={[Function]}
                                                                                                                  onDragLeave={[Function]}
                                                                                                                  onFocus={[Function]}
                                                                                                                  onKeyDown={[Function]}
                                                                                                                  onKeyUp={[Function]}
                                                                                                                  onMouseDown={[Function]}
                                                                                                                  onMouseLeave={[Function]}
                                                                                                                  onMouseUp={[Function]}
                                                                                                                  onTouchEnd={[Function]}
                                                                                                                  onTouchMove={[Function]}
                                                                                                                  onTouchStart={[Function]}
                                                                                                                  tabIndex={null}
                                                                                                                >
                                                                                                                  <span
                                                                                                                    className="PodBrowser-label"
                                                                                                                  >
                                                                                                                    <input
                                                                                                                      checked={true}
                                                                                                                      className="PodBrowser-input"
                                                                                                                      data-indeterminate={false}
                                                                                                                      name="edit"
                                                                                                                      onChange={[Function]}
                                                                                                                      type="checkbox"
                                                                                                                    />
                                                                                                                    <ForwardRef(CheckBoxIcon)>
                                                                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                                                                        <ForwardRef(SvgIcon)
                                                                                                                          classes={
                                                                                                                            Object {
                                                                                                                              "colorAction": "PodBrowser-colorAction",
                                                                                                                              "colorDisabled": "PodBrowser-colorDisabled",
                                                                                                                              "colorError": "PodBrowser-colorError",
                                                                                                                              "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                              "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                              "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                                                                              "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                                                                              "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                                                                              "root": "PodBrowser-root",
                                                                                                                            }
                                                                                                                          }
                                                                                                                        >
                                                                                                                          <svg
                                                                                                                            aria-hidden={true}
                                                                                                                            className="PodBrowser-root"
                                                                                                                            focusable="false"
                                                                                                                            viewBox="0 0 24 24"
                                                                                                                          >
                                                                                                                            <path
                                                                                                                              d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                                                                                            />
                                                                                                                          </svg>
                                                                                                                        </ForwardRef(SvgIcon)>
                                                                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                                                                    </ForwardRef(CheckBoxIcon)>
                                                                                                                  </span>
                                                                                                                  <WithStyles(memo)
                                                                                                                    center={true}
                                                                                                                  >
                                                                                                                    <ForwardRef(TouchRipple)
                                                                                                                      center={true}
                                                                                                                      classes={
                                                                                                                        Object {
                                                                                                                          "child": "PodBrowser-child",
                                                                                                                          "childLeaving": "PodBrowser-childLeaving",
                                                                                                                          "childPulsate": "PodBrowser-childPulsate",
                                                                                                                          "ripple": "PodBrowser-ripple",
                                                                                                                          "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                                                                          "rippleVisible": "PodBrowser-rippleVisible",
                                                                                                                          "root": "PodBrowser-root",
                                                                                                                        }
                                                                                                                      }
                                                                                                                    >
                                                                                                                      <span
                                                                                                                        className="PodBrowser-root"
                                                                                                                      >
                                                                                                                        <TransitionGroup
                                                                                                                          childFactory={[Function]}
                                                                                                                          component={null}
                                                                                                                          exit={true}
                                                                                                                        />
                                                                                                                      </span>
                                                                                                                    </ForwardRef(TouchRipple)>
                                                                                                                  </WithStyles(memo)>
                                                                                                                </span>
                                                                                                              </ForwardRef(ButtonBase)>
                                                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                                                          </ForwardRef(IconButton)>
                                                                                                        </WithStyles(ForwardRef(IconButton))>
                                                                                                      </ForwardRef(SwitchBase)>
                                                                                                    </WithStyles(ForwardRef(SwitchBase))>
                                                                                                  </ForwardRef(Checkbox)>
                                                                                                </WithStyles(ForwardRef(Checkbox))>
                                                                                                <WithStyles(ForwardRef(Typography))
                                                                                                  className="PodBrowser-label PodBrowser-label"
                                                                                                  component="span"
                                                                                                >
                                                                                                  <ForwardRef(Typography)
                                                                                                    className="PodBrowser-label PodBrowser-label"
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "alignCenter": "PodBrowser-alignCenter",
                                                                                                        "alignJustify": "PodBrowser-alignJustify",
                                                                                                        "alignLeft": "PodBrowser-alignLeft",
                                                                                                        "alignRight": "PodBrowser-alignRight",
                                                                                                        "body1": "PodBrowser-body1",
                                                                                                        "body2": "PodBrowser-body2",
                                                                                                        "button": "PodBrowser-button",
                                                                                                        "caption": "PodBrowser-caption",
                                                                                                        "colorError": "PodBrowser-colorError",
                                                                                                        "colorInherit": "PodBrowser-colorInherit",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                                                        "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                                                        "displayBlock": "PodBrowser-displayBlock",
                                                                                                        "displayInline": "PodBrowser-displayInline",
                                                                                                        "gutterBottom": "PodBrowser-gutterBottom",
                                                                                                        "h1": "PodBrowser-h1",
                                                                                                        "h2": "PodBrowser-h2",
                                                                                                        "h3": "PodBrowser-h3",
                                                                                                        "h4": "PodBrowser-h4",
                                                                                                        "h5": "PodBrowser-h5",
                                                                                                        "h6": "PodBrowser-h6",
                                                                                                        "noWrap": "PodBrowser-noWrap",
                                                                                                        "overline": "PodBrowser-overline",
                                                                                                        "paragraph": "PodBrowser-paragraph",
                                                                                                        "root": "PodBrowser-root",
                                                                                                        "srOnly": "PodBrowser-srOnly",
                                                                                                        "subtitle1": "PodBrowser-subtitle1",
                                                                                                        "subtitle2": "PodBrowser-subtitle2",
                                                                                                      }
                                                                                                    }
                                                                                                    component="span"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="PodBrowser-root PodBrowser-label PodBrowser-label PodBrowser-body1"
                                                                                                    >
                                                                                                      Edit
                                                                                                    </span>
                                                                                                  </ForwardRef(Typography)>
                                                                                                </WithStyles(ForwardRef(Typography))>
                                                                                              </label>
                                                                                            </ForwardRef(FormControlLabel)>
                                                                                          </WithStyles(ForwardRef(FormControlLabel))>
                                                                                        </li>
                                                                                      </ForwardRef(ListItem)>
                                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                                  </PermissionCheckbox>
                                                                                  <PermissionCheckbox
                                                                                    classes={
                                                                                      Object {
                                                                                        "checkbox": "PodBrowser-checkbox",
                                                                                        "container": "PodBrowser-container",
                                                                                        "label": "PodBrowser-label",
                                                                                        "listItem": "PodBrowser-listItem",
                                                                                        "selectionClosed": "PodBrowser-selectionClosed",
                                                                                        "selectionOpen": "PodBrowser-selectionOpen",
                                                                                        "summary": "PodBrowser-summary",
                                                                                      }
                                                                                    }
                                                                                    label="Append"
                                                                                    onChange={[Function]}
                                                                                    value={true}
                                                                                  >
                                                                                    <WithStyles(ForwardRef(ListItem))
                                                                                      className="PodBrowser-listItem"
                                                                                    >
                                                                                      <ForwardRef(ListItem)
                                                                                        className="PodBrowser-listItem"
                                                                                        classes={
                                                                                          Object {
                                                                                            "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                                            "button": "PodBrowser-button",
                                                                                            "container": "PodBrowser-container",
                                                                                            "dense": "PodBrowser-dense",
                                                                                            "disabled": "PodBrowser-disabled",
                                                                                            "divider": "PodBrowser-divider",
                                                                                            "focusVisible": "PodBrowser-focusVisible",
                                                                                            "gutters": "PodBrowser-gutters",
                                                                                            "root": "PodBrowser-root",
                                                                                            "secondaryAction": "PodBrowser-secondaryAction",
                                                                                            "selected": "PodBrowser-selected",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <li
                                                                                          className="PodBrowser-root PodBrowser-listItem PodBrowser-gutters"
                                                                                          disabled={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(FormControlLabel))
                                                                                            classes={
                                                                                              Object {
                                                                                                "label": "PodBrowser-label",
                                                                                              }
                                                                                            }
                                                                                            control={
                                                                                              <WithStyles(ForwardRef(Checkbox))
                                                                                                checked={true}
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "root": "PodBrowser-checkbox",
                                                                                                  }
                                                                                                }
                                                                                                name="append"
                                                                                                onChange={[Function]}
                                                                                              />
                                                                                            }
                                                                                            key=".0"
                                                                                            label="Append"
                                                                                          >
                                                                                            <ForwardRef(FormControlLabel)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "disabled": "PodBrowser-disabled",
                                                                                                  "label": "PodBrowser-label PodBrowser-label",
                                                                                                  "labelPlacementBottom": "PodBrowser-labelPlacementBottom",
                                                                                                  "labelPlacementStart": "PodBrowser-labelPlacementStart",
                                                                                                  "labelPlacementTop": "PodBrowser-labelPlacementTop",
                                                                                                  "root": "PodBrowser-root",
                                                                                                }
                                                                                              }
                                                                                              control={
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="append"
                                                                                                  onChange={[Function]}
                                                                                                />
                                                                                              }
                                                                                              label="Append"
                                                                                            >
                                                                                              <label
                                                                                                className="PodBrowser-root"
                                                                                              >
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="append"
                                                                                                  onChange={[Function]}
                                                                                                >
                                                                                                  <ForwardRef(Checkbox)
                                                                                                    checked={true}
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "checked": "PodBrowser-checked",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "disabled": "PodBrowser-disabled",
                                                                                                        "indeterminate": "PodBrowser-indeterminate",
                                                                                                        "root": "PodBrowser-root PodBrowser-checkbox",
                                                                                                      }
                                                                                                    }
                                                                                                    name="append"
                                                                                                    onChange={[Function]}
                                                                                                  >
                                                                                                    <WithStyles(ForwardRef(SwitchBase))
                                                                                                      checked={true}
                                                                                                      checkedIcon={<Memo />}
                                                                                                      classes={
                                                                                                        Object {
                                                                                                          "checked": "PodBrowser-checked",
                                                                                                          "disabled": "PodBrowser-disabled",
                                                                                                          "root": "PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                        }
                                                                                                      }
                                                                                                      color="secondary"
                                                                                                      icon={<Memo />}
                                                                                                      inputProps={
                                                                                                        Object {
                                                                                                          "data-indeterminate": false,
                                                                                                        }
                                                                                                      }
                                                                                                      name="append"
                                                                                                      onChange={[Function]}
                                                                                                      type="checkbox"
                                                                                                    >
                                                                                                      <ForwardRef(SwitchBase)
                                                                                                        checked={true}
                                                                                                        checkedIcon={<Memo />}
                                                                                                        classes={
                                                                                                          Object {
                                                                                                            "checked": "PodBrowser-checked PodBrowser-checked",
                                                                                                            "disabled": "PodBrowser-disabled PodBrowser-disabled",
                                                                                                            "input": "PodBrowser-input",
                                                                                                            "root": "PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                          }
                                                                                                        }
                                                                                                        color="secondary"
                                                                                                        icon={<Memo />}
                                                                                                        inputProps={
                                                                                                          Object {
                                                                                                            "data-indeterminate": false,
                                                                                                          }
                                                                                                        }
                                                                                                        name="append"
                                                                                                        onChange={[Function]}
                                                                                                        type="checkbox"
                                                                                                      >
                                                                                                        <WithStyles(ForwardRef(IconButton))
                                                                                                          className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                          color="secondary"
                                                                                                          component="span"
                                                                                                          onBlur={[Function]}
                                                                                                          onFocus={[Function]}
                                                                                                          tabIndex={null}
                                                                                                        >
                                                                                                          <ForwardRef(IconButton)
                                                                                                            className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                            classes={
                                                                                                              Object {
                                                                                                                "colorInherit": "PodBrowser-colorInherit",
                                                                                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                "disabled": "PodBrowser-disabled",
                                                                                                                "edgeEnd": "PodBrowser-edgeEnd",
                                                                                                                "edgeStart": "PodBrowser-edgeStart",
                                                                                                                "label": "PodBrowser-label",
                                                                                                                "root": "PodBrowser-root",
                                                                                                                "sizeSmall": "PodBrowser-sizeSmall",
                                                                                                              }
                                                                                                            }
                                                                                                            color="secondary"
                                                                                                            component="span"
                                                                                                            onBlur={[Function]}
                                                                                                            onFocus={[Function]}
                                                                                                            tabIndex={null}
                                                                                                          >
                                                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                                                              centerRipple={true}
                                                                                                              className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                              component="span"
                                                                                                              disabled={false}
                                                                                                              focusRipple={true}
                                                                                                              onBlur={[Function]}
                                                                                                              onFocus={[Function]}
                                                                                                              tabIndex={null}
                                                                                                            >
                                                                                                              <ForwardRef(ButtonBase)
                                                                                                                centerRipple={true}
                                                                                                                className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                classes={
                                                                                                                  Object {
                                                                                                                    "disabled": "PodBrowser-disabled",
                                                                                                                    "focusVisible": "PodBrowser-focusVisible",
                                                                                                                    "root": "PodBrowser-root",
                                                                                                                  }
                                                                                                                }
                                                                                                                component="span"
                                                                                                                disabled={false}
                                                                                                                focusRipple={true}
                                                                                                                onBlur={[Function]}
                                                                                                                onFocus={[Function]}
                                                                                                                tabIndex={null}
                                                                                                              >
                                                                                                                <span
                                                                                                                  aria-disabled={false}
                                                                                                                  className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                  onBlur={[Function]}
                                                                                                                  onDragLeave={[Function]}
                                                                                                                  onFocus={[Function]}
                                                                                                                  onKeyDown={[Function]}
                                                                                                                  onKeyUp={[Function]}
                                                                                                                  onMouseDown={[Function]}
                                                                                                                  onMouseLeave={[Function]}
                                                                                                                  onMouseUp={[Function]}
                                                                                                                  onTouchEnd={[Function]}
                                                                                                                  onTouchMove={[Function]}
                                                                                                                  onTouchStart={[Function]}
                                                                                                                  tabIndex={null}
                                                                                                                >
                                                                                                                  <span
                                                                                                                    className="PodBrowser-label"
                                                                                                                  >
                                                                                                                    <input
                                                                                                                      checked={true}
                                                                                                                      className="PodBrowser-input"
                                                                                                                      data-indeterminate={false}
                                                                                                                      name="append"
                                                                                                                      onChange={[Function]}
                                                                                                                      type="checkbox"
                                                                                                                    />
                                                                                                                    <ForwardRef(CheckBoxIcon)>
                                                                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                                                                        <ForwardRef(SvgIcon)
                                                                                                                          classes={
                                                                                                                            Object {
                                                                                                                              "colorAction": "PodBrowser-colorAction",
                                                                                                                              "colorDisabled": "PodBrowser-colorDisabled",
                                                                                                                              "colorError": "PodBrowser-colorError",
                                                                                                                              "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                              "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                              "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                                                                              "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                                                                              "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                                                                              "root": "PodBrowser-root",
                                                                                                                            }
                                                                                                                          }
                                                                                                                        >
                                                                                                                          <svg
                                                                                                                            aria-hidden={true}
                                                                                                                            className="PodBrowser-root"
                                                                                                                            focusable="false"
                                                                                                                            viewBox="0 0 24 24"
                                                                                                                          >
                                                                                                                            <path
                                                                                                                              d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                                                                                            />
                                                                                                                          </svg>
                                                                                                                        </ForwardRef(SvgIcon)>
                                                                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                                                                    </ForwardRef(CheckBoxIcon)>
                                                                                                                  </span>
                                                                                                                  <WithStyles(memo)
                                                                                                                    center={true}
                                                                                                                  >
                                                                                                                    <ForwardRef(TouchRipple)
                                                                                                                      center={true}
                                                                                                                      classes={
                                                                                                                        Object {
                                                                                                                          "child": "PodBrowser-child",
                                                                                                                          "childLeaving": "PodBrowser-childLeaving",
                                                                                                                          "childPulsate": "PodBrowser-childPulsate",
                                                                                                                          "ripple": "PodBrowser-ripple",
                                                                                                                          "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                                                                          "rippleVisible": "PodBrowser-rippleVisible",
                                                                                                                          "root": "PodBrowser-root",
                                                                                                                        }
                                                                                                                      }
                                                                                                                    >
                                                                                                                      <span
                                                                                                                        className="PodBrowser-root"
                                                                                                                      >
                                                                                                                        <TransitionGroup
                                                                                                                          childFactory={[Function]}
                                                                                                                          component={null}
                                                                                                                          exit={true}
                                                                                                                        />
                                                                                                                      </span>
                                                                                                                    </ForwardRef(TouchRipple)>
                                                                                                                  </WithStyles(memo)>
                                                                                                                </span>
                                                                                                              </ForwardRef(ButtonBase)>
                                                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                                                          </ForwardRef(IconButton)>
                                                                                                        </WithStyles(ForwardRef(IconButton))>
                                                                                                      </ForwardRef(SwitchBase)>
                                                                                                    </WithStyles(ForwardRef(SwitchBase))>
                                                                                                  </ForwardRef(Checkbox)>
                                                                                                </WithStyles(ForwardRef(Checkbox))>
                                                                                                <WithStyles(ForwardRef(Typography))
                                                                                                  className="PodBrowser-label PodBrowser-label"
                                                                                                  component="span"
                                                                                                >
                                                                                                  <ForwardRef(Typography)
                                                                                                    className="PodBrowser-label PodBrowser-label"
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "alignCenter": "PodBrowser-alignCenter",
                                                                                                        "alignJustify": "PodBrowser-alignJustify",
                                                                                                        "alignLeft": "PodBrowser-alignLeft",
                                                                                                        "alignRight": "PodBrowser-alignRight",
                                                                                                        "body1": "PodBrowser-body1",
                                                                                                        "body2": "PodBrowser-body2",
                                                                                                        "button": "PodBrowser-button",
                                                                                                        "caption": "PodBrowser-caption",
                                                                                                        "colorError": "PodBrowser-colorError",
                                                                                                        "colorInherit": "PodBrowser-colorInherit",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                                                        "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                                                        "displayBlock": "PodBrowser-displayBlock",
                                                                                                        "displayInline": "PodBrowser-displayInline",
                                                                                                        "gutterBottom": "PodBrowser-gutterBottom",
                                                                                                        "h1": "PodBrowser-h1",
                                                                                                        "h2": "PodBrowser-h2",
                                                                                                        "h3": "PodBrowser-h3",
                                                                                                        "h4": "PodBrowser-h4",
                                                                                                        "h5": "PodBrowser-h5",
                                                                                                        "h6": "PodBrowser-h6",
                                                                                                        "noWrap": "PodBrowser-noWrap",
                                                                                                        "overline": "PodBrowser-overline",
                                                                                                        "paragraph": "PodBrowser-paragraph",
                                                                                                        "root": "PodBrowser-root",
                                                                                                        "srOnly": "PodBrowser-srOnly",
                                                                                                        "subtitle1": "PodBrowser-subtitle1",
                                                                                                        "subtitle2": "PodBrowser-subtitle2",
                                                                                                      }
                                                                                                    }
                                                                                                    component="span"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="PodBrowser-root PodBrowser-label PodBrowser-label PodBrowser-body1"
                                                                                                    >
                                                                                                      Append
                                                                                                    </span>
                                                                                                  </ForwardRef(Typography)>
                                                                                                </WithStyles(ForwardRef(Typography))>
                                                                                              </label>
                                                                                            </ForwardRef(FormControlLabel)>
                                                                                          </WithStyles(ForwardRef(FormControlLabel))>
                                                                                        </li>
                                                                                      </ForwardRef(ListItem)>
                                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                                  </PermissionCheckbox>
                                                                                  <PermissionCheckbox
                                                                                    classes={
                                                                                      Object {
                                                                                        "checkbox": "PodBrowser-checkbox",
                                                                                        "container": "PodBrowser-container",
                                                                                        "label": "PodBrowser-label",
                                                                                        "listItem": "PodBrowser-listItem",
                                                                                        "selectionClosed": "PodBrowser-selectionClosed",
                                                                                        "selectionOpen": "PodBrowser-selectionOpen",
                                                                                        "summary": "PodBrowser-summary",
                                                                                      }
                                                                                    }
                                                                                    label="Control"
                                                                                    onChange={[Function]}
                                                                                    value={true}
                                                                                  >
                                                                                    <WithStyles(ForwardRef(ListItem))
                                                                                      className="PodBrowser-listItem"
                                                                                    >
                                                                                      <ForwardRef(ListItem)
                                                                                        className="PodBrowser-listItem"
                                                                                        classes={
                                                                                          Object {
                                                                                            "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                                            "button": "PodBrowser-button",
                                                                                            "container": "PodBrowser-container",
                                                                                            "dense": "PodBrowser-dense",
                                                                                            "disabled": "PodBrowser-disabled",
                                                                                            "divider": "PodBrowser-divider",
                                                                                            "focusVisible": "PodBrowser-focusVisible",
                                                                                            "gutters": "PodBrowser-gutters",
                                                                                            "root": "PodBrowser-root",
                                                                                            "secondaryAction": "PodBrowser-secondaryAction",
                                                                                            "selected": "PodBrowser-selected",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <li
                                                                                          className="PodBrowser-root PodBrowser-listItem PodBrowser-gutters"
                                                                                          disabled={false}
                                                                                        >
                                                                                          <WithStyles(ForwardRef(FormControlLabel))
                                                                                            classes={
                                                                                              Object {
                                                                                                "label": "PodBrowser-label",
                                                                                              }
                                                                                            }
                                                                                            control={
                                                                                              <WithStyles(ForwardRef(Checkbox))
                                                                                                checked={true}
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "root": "PodBrowser-checkbox",
                                                                                                  }
                                                                                                }
                                                                                                name="control"
                                                                                                onChange={[Function]}
                                                                                              />
                                                                                            }
                                                                                            key=".0"
                                                                                            label="Control"
                                                                                          >
                                                                                            <ForwardRef(FormControlLabel)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "disabled": "PodBrowser-disabled",
                                                                                                  "label": "PodBrowser-label PodBrowser-label",
                                                                                                  "labelPlacementBottom": "PodBrowser-labelPlacementBottom",
                                                                                                  "labelPlacementStart": "PodBrowser-labelPlacementStart",
                                                                                                  "labelPlacementTop": "PodBrowser-labelPlacementTop",
                                                                                                  "root": "PodBrowser-root",
                                                                                                }
                                                                                              }
                                                                                              control={
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="control"
                                                                                                  onChange={[Function]}
                                                                                                />
                                                                                              }
                                                                                              label="Control"
                                                                                            >
                                                                                              <label
                                                                                                className="PodBrowser-root"
                                                                                              >
                                                                                                <WithStyles(ForwardRef(Checkbox))
                                                                                                  checked={true}
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "root": "PodBrowser-checkbox",
                                                                                                    }
                                                                                                  }
                                                                                                  name="control"
                                                                                                  onChange={[Function]}
                                                                                                >
                                                                                                  <ForwardRef(Checkbox)
                                                                                                    checked={true}
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "checked": "PodBrowser-checked",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "disabled": "PodBrowser-disabled",
                                                                                                        "indeterminate": "PodBrowser-indeterminate",
                                                                                                        "root": "PodBrowser-root PodBrowser-checkbox",
                                                                                                      }
                                                                                                    }
                                                                                                    name="control"
                                                                                                    onChange={[Function]}
                                                                                                  >
                                                                                                    <WithStyles(ForwardRef(SwitchBase))
                                                                                                      checked={true}
                                                                                                      checkedIcon={<Memo />}
                                                                                                      classes={
                                                                                                        Object {
                                                                                                          "checked": "PodBrowser-checked",
                                                                                                          "disabled": "PodBrowser-disabled",
                                                                                                          "root": "PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                        }
                                                                                                      }
                                                                                                      color="secondary"
                                                                                                      icon={<Memo />}
                                                                                                      inputProps={
                                                                                                        Object {
                                                                                                          "data-indeterminate": false,
                                                                                                        }
                                                                                                      }
                                                                                                      name="control"
                                                                                                      onChange={[Function]}
                                                                                                      type="checkbox"
                                                                                                    >
                                                                                                      <ForwardRef(SwitchBase)
                                                                                                        checked={true}
                                                                                                        checkedIcon={<Memo />}
                                                                                                        classes={
                                                                                                          Object {
                                                                                                            "checked": "PodBrowser-checked PodBrowser-checked",
                                                                                                            "disabled": "PodBrowser-disabled PodBrowser-disabled",
                                                                                                            "input": "PodBrowser-input",
                                                                                                            "root": "PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary",
                                                                                                          }
                                                                                                        }
                                                                                                        color="secondary"
                                                                                                        icon={<Memo />}
                                                                                                        inputProps={
                                                                                                          Object {
                                                                                                            "data-indeterminate": false,
                                                                                                          }
                                                                                                        }
                                                                                                        name="control"
                                                                                                        onChange={[Function]}
                                                                                                        type="checkbox"
                                                                                                      >
                                                                                                        <WithStyles(ForwardRef(IconButton))
                                                                                                          className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                          color="secondary"
                                                                                                          component="span"
                                                                                                          onBlur={[Function]}
                                                                                                          onFocus={[Function]}
                                                                                                          tabIndex={null}
                                                                                                        >
                                                                                                          <ForwardRef(IconButton)
                                                                                                            className="PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked"
                                                                                                            classes={
                                                                                                              Object {
                                                                                                                "colorInherit": "PodBrowser-colorInherit",
                                                                                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                "disabled": "PodBrowser-disabled",
                                                                                                                "edgeEnd": "PodBrowser-edgeEnd",
                                                                                                                "edgeStart": "PodBrowser-edgeStart",
                                                                                                                "label": "PodBrowser-label",
                                                                                                                "root": "PodBrowser-root",
                                                                                                                "sizeSmall": "PodBrowser-sizeSmall",
                                                                                                              }
                                                                                                            }
                                                                                                            color="secondary"
                                                                                                            component="span"
                                                                                                            onBlur={[Function]}
                                                                                                            onFocus={[Function]}
                                                                                                            tabIndex={null}
                                                                                                          >
                                                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                                                              centerRipple={true}
                                                                                                              className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                              component="span"
                                                                                                              disabled={false}
                                                                                                              focusRipple={true}
                                                                                                              onBlur={[Function]}
                                                                                                              onFocus={[Function]}
                                                                                                              tabIndex={null}
                                                                                                            >
                                                                                                              <ForwardRef(ButtonBase)
                                                                                                                centerRipple={true}
                                                                                                                className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                classes={
                                                                                                                  Object {
                                                                                                                    "disabled": "PodBrowser-disabled",
                                                                                                                    "focusVisible": "PodBrowser-focusVisible",
                                                                                                                    "root": "PodBrowser-root",
                                                                                                                  }
                                                                                                                }
                                                                                                                component="span"
                                                                                                                disabled={false}
                                                                                                                focusRipple={true}
                                                                                                                onBlur={[Function]}
                                                                                                                onFocus={[Function]}
                                                                                                                tabIndex={null}
                                                                                                              >
                                                                                                                <span
                                                                                                                  aria-disabled={false}
                                                                                                                  className="PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-root PodBrowser-checkbox PodBrowser-colorSecondary PodBrowser-checked PodBrowser-checked PodBrowser-colorSecondary"
                                                                                                                  onBlur={[Function]}
                                                                                                                  onDragLeave={[Function]}
                                                                                                                  onFocus={[Function]}
                                                                                                                  onKeyDown={[Function]}
                                                                                                                  onKeyUp={[Function]}
                                                                                                                  onMouseDown={[Function]}
                                                                                                                  onMouseLeave={[Function]}
                                                                                                                  onMouseUp={[Function]}
                                                                                                                  onTouchEnd={[Function]}
                                                                                                                  onTouchMove={[Function]}
                                                                                                                  onTouchStart={[Function]}
                                                                                                                  tabIndex={null}
                                                                                                                >
                                                                                                                  <span
                                                                                                                    className="PodBrowser-label"
                                                                                                                  >
                                                                                                                    <input
                                                                                                                      checked={true}
                                                                                                                      className="PodBrowser-input"
                                                                                                                      data-indeterminate={false}
                                                                                                                      name="control"
                                                                                                                      onChange={[Function]}
                                                                                                                      type="checkbox"
                                                                                                                    />
                                                                                                                    <ForwardRef(CheckBoxIcon)>
                                                                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                                                                        <ForwardRef(SvgIcon)
                                                                                                                          classes={
                                                                                                                            Object {
                                                                                                                              "colorAction": "PodBrowser-colorAction",
                                                                                                                              "colorDisabled": "PodBrowser-colorDisabled",
                                                                                                                              "colorError": "PodBrowser-colorError",
                                                                                                                              "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                                              "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                                              "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                                                                              "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                                                                              "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                                                                              "root": "PodBrowser-root",
                                                                                                                            }
                                                                                                                          }
                                                                                                                        >
                                                                                                                          <svg
                                                                                                                            aria-hidden={true}
                                                                                                                            className="PodBrowser-root"
                                                                                                                            focusable="false"
                                                                                                                            viewBox="0 0 24 24"
                                                                                                                          >
                                                                                                                            <path
                                                                                                                              d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                                                                                            />
                                                                                                                          </svg>
                                                                                                                        </ForwardRef(SvgIcon)>
                                                                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                                                                    </ForwardRef(CheckBoxIcon)>
                                                                                                                  </span>
                                                                                                                  <WithStyles(memo)
                                                                                                                    center={true}
                                                                                                                  >
                                                                                                                    <ForwardRef(TouchRipple)
                                                                                                                      center={true}
                                                                                                                      classes={
                                                                                                                        Object {
                                                                                                                          "child": "PodBrowser-child",
                                                                                                                          "childLeaving": "PodBrowser-childLeaving",
                                                                                                                          "childPulsate": "PodBrowser-childPulsate",
                                                                                                                          "ripple": "PodBrowser-ripple",
                                                                                                                          "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                                                                          "rippleVisible": "PodBrowser-rippleVisible",
                                                                                                                          "root": "PodBrowser-root",
                                                                                                                        }
                                                                                                                      }
                                                                                                                    >
                                                                                                                      <span
                                                                                                                        className="PodBrowser-root"
                                                                                                                      >
                                                                                                                        <TransitionGroup
                                                                                                                          childFactory={[Function]}
                                                                                                                          component={null}
                                                                                                                          exit={true}
                                                                                                                        />
                                                                                                                      </span>
                                                                                                                    </ForwardRef(TouchRipple)>
                                                                                                                  </WithStyles(memo)>
                                                                                                                </span>
                                                                                                              </ForwardRef(ButtonBase)>
                                                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                                                          </ForwardRef(IconButton)>
                                                                                                        </WithStyles(ForwardRef(IconButton))>
                                                                                                      </ForwardRef(SwitchBase)>
                                                                                                    </WithStyles(ForwardRef(SwitchBase))>
                                                                                                  </ForwardRef(Checkbox)>
                                                                                                </WithStyles(ForwardRef(Checkbox))>
                                                                                                <WithStyles(ForwardRef(Typography))
                                                                                                  className="PodBrowser-label PodBrowser-label"
                                                                                                  component="span"
                                                                                                >
                                                                                                  <ForwardRef(Typography)
                                                                                                    className="PodBrowser-label PodBrowser-label"
                                                                                                    classes={
                                                                                                      Object {
                                                                                                        "alignCenter": "PodBrowser-alignCenter",
                                                                                                        "alignJustify": "PodBrowser-alignJustify",
                                                                                                        "alignLeft": "PodBrowser-alignLeft",
                                                                                                        "alignRight": "PodBrowser-alignRight",
                                                                                                        "body1": "PodBrowser-body1",
                                                                                                        "body2": "PodBrowser-body2",
                                                                                                        "button": "PodBrowser-button",
                                                                                                        "caption": "PodBrowser-caption",
                                                                                                        "colorError": "PodBrowser-colorError",
                                                                                                        "colorInherit": "PodBrowser-colorInherit",
                                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                        "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                                                        "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                                                        "displayBlock": "PodBrowser-displayBlock",
                                                                                                        "displayInline": "PodBrowser-displayInline",
                                                                                                        "gutterBottom": "PodBrowser-gutterBottom",
                                                                                                        "h1": "PodBrowser-h1",
                                                                                                        "h2": "PodBrowser-h2",
                                                                                                        "h3": "PodBrowser-h3",
                                                                                                        "h4": "PodBrowser-h4",
                                                                                                        "h5": "PodBrowser-h5",
                                                                                                        "h6": "PodBrowser-h6",
                                                                                                        "noWrap": "PodBrowser-noWrap",
                                                                                                        "overline": "PodBrowser-overline",
                                                                                                        "paragraph": "PodBrowser-paragraph",
                                                                                                        "root": "PodBrowser-root",
                                                                                                        "srOnly": "PodBrowser-srOnly",
                                                                                                        "subtitle1": "PodBrowser-subtitle1",
                                                                                                        "subtitle2": "PodBrowser-subtitle2",
                                                                                                      }
                                                                                                    }
                                                                                                    component="span"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="PodBrowser-root PodBrowser-label PodBrowser-label PodBrowser-body1"
                                                                                                    >
                                                                                                      Control
                                                                                                    </span>
                                                                                                  </ForwardRef(Typography)>
                                                                                                </WithStyles(ForwardRef(Typography))>
                                                                                              </label>
                                                                                            </ForwardRef(FormControlLabel)>
                                                                                          </WithStyles(ForwardRef(FormControlLabel))>
                                                                                        </li>
                                                                                      </ForwardRef(ListItem)>
                                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                                  </PermissionCheckbox>
                                                                                </ul>
                                                                              </ForwardRef(List)>
                                                                            </WithStyles(ForwardRef(List))>
                                                                            <WithStyles(ForwardRef(Button))
                                                                              onClick={[Function]}
                                                                              variant="contained"
                                                                            >
                                                                              <ForwardRef(Button)
                                                                                classes={
                                                                                  Object {
                                                                                    "colorInherit": "PodBrowser-colorInherit",
                                                                                    "contained": "PodBrowser-contained",
                                                                                    "containedPrimary": "PodBrowser-containedPrimary",
                                                                                    "containedSecondary": "PodBrowser-containedSecondary",
                                                                                    "containedSizeLarge": "PodBrowser-containedSizeLarge",
                                                                                    "containedSizeSmall": "PodBrowser-containedSizeSmall",
                                                                                    "disableElevation": "PodBrowser-disableElevation",
                                                                                    "disabled": "PodBrowser-disabled",
                                                                                    "endIcon": "PodBrowser-endIcon",
                                                                                    "focusVisible": "PodBrowser-focusVisible",
                                                                                    "fullWidth": "PodBrowser-fullWidth",
                                                                                    "iconSizeLarge": "PodBrowser-iconSizeLarge",
                                                                                    "iconSizeMedium": "PodBrowser-iconSizeMedium",
                                                                                    "iconSizeSmall": "PodBrowser-iconSizeSmall",
                                                                                    "label": "PodBrowser-label",
                                                                                    "outlined": "PodBrowser-outlined",
                                                                                    "outlinedPrimary": "PodBrowser-outlinedPrimary",
                                                                                    "outlinedSecondary": "PodBrowser-outlinedSecondary",
                                                                                    "outlinedSizeLarge": "PodBrowser-outlinedSizeLarge",
                                                                                    "outlinedSizeSmall": "PodBrowser-outlinedSizeSmall",
                                                                                    "root": "PodBrowser-root",
                                                                                    "sizeLarge": "PodBrowser-sizeLarge",
                                                                                    "sizeSmall": "PodBrowser-sizeSmall",
                                                                                    "startIcon": "PodBrowser-startIcon",
                                                                                    "text": "PodBrowser-text",
                                                                                    "textPrimary": "PodBrowser-textPrimary",
                                                                                    "textSecondary": "PodBrowser-textSecondary",
                                                                                    "textSizeLarge": "PodBrowser-textSizeLarge",
                                                                                    "textSizeSmall": "PodBrowser-textSizeSmall",
                                                                                  }
                                                                                }
                                                                                onClick={[Function]}
                                                                                variant="contained"
                                                                              >
                                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                                  className="PodBrowser-root PodBrowser-contained"
                                                                                  component="button"
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  focusVisibleClassName="PodBrowser-focusVisible"
                                                                                  onClick={[Function]}
                                                                                  type="button"
                                                                                >
                                                                                  <ForwardRef(ButtonBase)
                                                                                    className="PodBrowser-root PodBrowser-contained"
                                                                                    classes={
                                                                                      Object {
                                                                                        "disabled": "PodBrowser-disabled",
                                                                                        "focusVisible": "PodBrowser-focusVisible",
                                                                                        "root": "PodBrowser-root",
                                                                                      }
                                                                                    }
                                                                                    component="button"
                                                                                    disabled={false}
                                                                                    focusRipple={true}
                                                                                    focusVisibleClassName="PodBrowser-focusVisible"
                                                                                    onClick={[Function]}
                                                                                    type="button"
                                                                                  >
                                                                                    <button
                                                                                      className="PodBrowser-root PodBrowser-root PodBrowser-contained"
                                                                                      disabled={false}
                                                                                      onBlur={[Function]}
                                                                                      onClick={[Function]}
                                                                                      onDragLeave={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      onKeyDown={[Function]}
                                                                                      onKeyUp={[Function]}
                                                                                      onMouseDown={[Function]}
                                                                                      onMouseLeave={[Function]}
                                                                                      onMouseUp={[Function]}
                                                                                      onTouchEnd={[Function]}
                                                                                      onTouchMove={[Function]}
                                                                                      onTouchStart={[Function]}
                                                                                      tabIndex={0}
                                                                                      type="button"
                                                                                    >
                                                                                      <span
                                                                                        className="PodBrowser-label"
                                                                                      >
                                                                                        Save
                                                                                      </span>
                                                                                      <WithStyles(memo)
                                                                                        center={false}
                                                                                      >
                                                                                        <ForwardRef(TouchRipple)
                                                                                          center={false}
                                                                                          classes={
                                                                                            Object {
                                                                                              "child": "PodBrowser-child",
                                                                                              "childLeaving": "PodBrowser-childLeaving",
                                                                                              "childPulsate": "PodBrowser-childPulsate",
                                                                                              "ripple": "PodBrowser-ripple",
                                                                                              "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                                              "rippleVisible": "PodBrowser-rippleVisible",
                                                                                              "root": "PodBrowser-root",
                                                                                            }
                                                                                          }
                                                                                        >
                                                                                          <span
                                                                                            className="PodBrowser-root"
                                                                                          >
                                                                                            <TransitionGroup
                                                                                              childFactory={[Function]}
                                                                                              component={null}
                                                                                              exit={true}
                                                                                            />
                                                                                          </span>
                                                                                        </ForwardRef(TouchRipple)>
                                                                                      </WithStyles(memo)>
                                                                                    </button>
                                                                                  </ForwardRef(ButtonBase)>
                                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                                              </ForwardRef(Button)>
                                                                            </WithStyles(ForwardRef(Button))>
                                                                          </section>
                                                                        </div>
                                                                      </PermissionsForm>
                                                                    </li>
                                                                  </ForwardRef(ListItem)>
                                                                </WithStyles(ForwardRef(ListItem))>
                                                              </ul>
                                                            </ForwardRef(List)>
                                                          </WithStyles(ForwardRef(List))>
                                                        </AgentAccessList>
                                                      </ul>
                                                    </ForwardRef(List)>
                                                  </WithStyles(ForwardRef(List))>
                                                </section>
                                              </ThirdPartyPermissions>
                                              <WithStyles(ForwardRef(Divider))>
                                                <ForwardRef(Divider)
                                                  classes={
                                                    Object {
                                                      "absolute": "PodBrowser-absolute",
                                                      "flexItem": "PodBrowser-flexItem",
                                                      "inset": "PodBrowser-inset",
                                                      "light": "PodBrowser-light",
                                                      "middle": "PodBrowser-middle",
                                                      "root": "PodBrowser-root",
                                                      "vertical": "PodBrowser-vertical",
                                                    }
                                                  }
                                                >
                                                  <hr
                                                    className="PodBrowser-root"
                                                  />
                                                </ForwardRef(Divider)>
                                              </WithStyles(ForwardRef(Divider))>
                                              <section
                                                className="PodBrowser-centeredSection"
                                              >
                                                <AgentSearchForm
                                                  buttonText="Add"
                                                  heading="Grant Permission"
                                                  onSubmit={[Function]}
                                                >
                                                  <h5
                                                    className="PodBrowser-content-h5"
                                                  >
                                                    Grant Permission
                                                  </h5>
                                                  <WithStyles(ForwardRef(FormControl))
                                                    className="PodBrowser-agentInput"
                                                  >
                                                    <ForwardRef(FormControl)
                                                      className="PodBrowser-agentInput"
                                                      classes={
                                                        Object {
                                                          "fullWidth": "PodBrowser-fullWidth",
                                                          "marginDense": "PodBrowser-marginDense",
                                                          "marginNormal": "PodBrowser-marginNormal",
                                                          "root": "PodBrowser-root",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="PodBrowser-root PodBrowser-agentInput"
                                                      >
                                                        <WithStyles(ForwardRef(InputLabel))
                                                          htmlFor={
                                                            Array [
                                                              "id1",
                                                            ]
                                                          }
                                                        >
                                                          <ForwardRef(InputLabel)
                                                            classes={
                                                              Object {
                                                                "animated": "PodBrowser-animated",
                                                                "asterisk": "PodBrowser-asterisk",
                                                                "disabled": "PodBrowser-disabled",
                                                                "error": "PodBrowser-error",
                                                                "filled": "PodBrowser-filled",
                                                                "focused": "PodBrowser-focused",
                                                                "formControl": "PodBrowser-formControl",
                                                                "marginDense": "PodBrowser-marginDense",
                                                                "outlined": "PodBrowser-outlined",
                                                                "required": "PodBrowser-required",
                                                                "root": "PodBrowser-root",
                                                                "shrink": "PodBrowser-shrink",
                                                              }
                                                            }
                                                            htmlFor={
                                                              Array [
                                                                "id1",
                                                              ]
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(FormLabel))
                                                              className="PodBrowser-root PodBrowser-formControl PodBrowser-animated PodBrowser-shrink"
                                                              classes={
                                                                Object {
                                                                  "asterisk": "PodBrowser-asterisk",
                                                                  "disabled": "PodBrowser-disabled",
                                                                  "error": "PodBrowser-error",
                                                                  "focused": "PodBrowser-focused",
                                                                  "required": "PodBrowser-required",
                                                                }
                                                              }
                                                              data-shrink={true}
                                                              htmlFor={
                                                                Array [
                                                                  "id1",
                                                                ]
                                                              }
                                                            >
                                                              <ForwardRef(FormLabel)
                                                                className="PodBrowser-root PodBrowser-formControl PodBrowser-animated PodBrowser-shrink"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "PodBrowser-asterisk PodBrowser-asterisk",
                                                                    "colorSecondary": "PodBrowser-colorSecondary",
                                                                    "disabled": "PodBrowser-disabled PodBrowser-disabled",
                                                                    "error": "PodBrowser-error PodBrowser-error",
                                                                    "filled": "PodBrowser-filled",
                                                                    "focused": "PodBrowser-focused PodBrowser-focused",
                                                                    "required": "PodBrowser-required PodBrowser-required",
                                                                    "root": "PodBrowser-root",
                                                                  }
                                                                }
                                                                data-shrink={true}
                                                                htmlFor={
                                                                  Array [
                                                                    "id1",
                                                                  ]
                                                                }
                                                              >
                                                                <label
                                                                  className="PodBrowser-root PodBrowser-root PodBrowser-formControl PodBrowser-animated PodBrowser-shrink"
                                                                  data-shrink={true}
                                                                  htmlFor={
                                                                    Array [
                                                                      "id1",
                                                                    ]
                                                                  }
                                                                >
                                                                  Web ID
                                                                </label>
                                                              </ForwardRef(FormLabel)>
                                                            </WithStyles(ForwardRef(FormLabel))>
                                                          </ForwardRef(InputLabel)>
                                                        </WithStyles(ForwardRef(InputLabel))>
                                                        <WithStyles(ForwardRef(Input))
                                                          id={
                                                            Array [
                                                              "id1",
                                                            ]
                                                          }
                                                          onChange={[Function]}
                                                          startAdornment={
                                                            <WithStyles(ForwardRef(InputAdornment))
                                                              position="start"
                                                            >
                                                              <Memo(AccountCircleIcon) />
                                                            </WithStyles(ForwardRef(InputAdornment))>
                                                          }
                                                          value=""
                                                        >
                                                          <ForwardRef(Input)
                                                            classes={
                                                              Object {
                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                "disabled": "PodBrowser-disabled",
                                                                "error": "PodBrowser-error",
                                                                "focused": "PodBrowser-focused",
                                                                "formControl": "PodBrowser-formControl",
                                                                "fullWidth": "PodBrowser-fullWidth",
                                                                "input": "PodBrowser-input",
                                                                "inputMarginDense": "PodBrowser-inputMarginDense",
                                                                "inputMultiline": "PodBrowser-inputMultiline",
                                                                "inputTypeSearch": "PodBrowser-inputTypeSearch",
                                                                "marginDense": "PodBrowser-marginDense",
                                                                "multiline": "PodBrowser-multiline",
                                                                "root": "PodBrowser-root",
                                                                "underline": "PodBrowser-underline",
                                                              }
                                                            }
                                                            id={
                                                              Array [
                                                                "id1",
                                                              ]
                                                            }
                                                            onChange={[Function]}
                                                            startAdornment={
                                                              <WithStyles(ForwardRef(InputAdornment))
                                                                position="start"
                                                              >
                                                                <Memo(AccountCircleIcon) />
                                                              </WithStyles(ForwardRef(InputAdornment))>
                                                            }
                                                            value=""
                                                          >
                                                            <WithStyles(ForwardRef(InputBase))
                                                              classes={
                                                                Object {
                                                                  "colorSecondary": "PodBrowser-colorSecondary",
                                                                  "disabled": "PodBrowser-disabled",
                                                                  "error": "PodBrowser-error",
                                                                  "focused": "PodBrowser-focused",
                                                                  "formControl": "PodBrowser-formControl",
                                                                  "fullWidth": "PodBrowser-fullWidth",
                                                                  "input": "PodBrowser-input",
                                                                  "inputMarginDense": "PodBrowser-inputMarginDense",
                                                                  "inputMultiline": "PodBrowser-inputMultiline",
                                                                  "inputTypeSearch": "PodBrowser-inputTypeSearch",
                                                                  "marginDense": "PodBrowser-marginDense",
                                                                  "multiline": "PodBrowser-multiline",
                                                                  "root": "PodBrowser-root PodBrowser-underline",
                                                                  "underline": null,
                                                                }
                                                              }
                                                              fullWidth={false}
                                                              id={
                                                                Array [
                                                                  "id1",
                                                                ]
                                                              }
                                                              inputComponent="input"
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              startAdornment={
                                                                <WithStyles(ForwardRef(InputAdornment))
                                                                  position="start"
                                                                >
                                                                  <Memo(AccountCircleIcon) />
                                                                </WithStyles(ForwardRef(InputAdornment))>
                                                              }
                                                              type="text"
                                                              value=""
                                                            >
                                                              <ForwardRef(InputBase)
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "PodBrowser-adornedEnd",
                                                                    "adornedStart": "PodBrowser-adornedStart",
                                                                    "colorSecondary": "PodBrowser-colorSecondary PodBrowser-colorSecondary",
                                                                    "disabled": "PodBrowser-disabled PodBrowser-disabled",
                                                                    "error": "PodBrowser-error PodBrowser-error",
                                                                    "focused": "PodBrowser-focused PodBrowser-focused",
                                                                    "formControl": "PodBrowser-formControl PodBrowser-formControl",
                                                                    "fullWidth": "PodBrowser-fullWidth PodBrowser-fullWidth",
                                                                    "input": "PodBrowser-input PodBrowser-input",
                                                                    "inputAdornedEnd": "PodBrowser-inputAdornedEnd",
                                                                    "inputAdornedStart": "PodBrowser-inputAdornedStart",
                                                                    "inputHiddenLabel": "PodBrowser-inputHiddenLabel",
                                                                    "inputMarginDense": "PodBrowser-inputMarginDense PodBrowser-inputMarginDense",
                                                                    "inputMultiline": "PodBrowser-inputMultiline PodBrowser-inputMultiline",
                                                                    "inputTypeSearch": "PodBrowser-inputTypeSearch PodBrowser-inputTypeSearch",
                                                                    "marginDense": "PodBrowser-marginDense PodBrowser-marginDense",
                                                                    "multiline": "PodBrowser-multiline PodBrowser-multiline",
                                                                    "root": "PodBrowser-root PodBrowser-root PodBrowser-underline",
                                                                  }
                                                                }
                                                                fullWidth={false}
                                                                id={
                                                                  Array [
                                                                    "id1",
                                                                  ]
                                                                }
                                                                inputComponent="input"
                                                                multiline={false}
                                                                onChange={[Function]}
                                                                startAdornment={
                                                                  <WithStyles(ForwardRef(InputAdornment))
                                                                    position="start"
                                                                  >
                                                                    <Memo(AccountCircleIcon) />
                                                                  </WithStyles(ForwardRef(InputAdornment))>
                                                                }
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className="PodBrowser-root PodBrowser-root PodBrowser-underline PodBrowser-formControl PodBrowser-formControl PodBrowser-adornedStart"
                                                                  onClick={[Function]}
                                                                >
                                                                  <WithStyles(ForwardRef(InputAdornment))
                                                                    position="start"
                                                                  >
                                                                    <ForwardRef(InputAdornment)
                                                                      classes={
                                                                        Object {
                                                                          "disablePointerEvents": "PodBrowser-disablePointerEvents",
                                                                          "filled": "PodBrowser-filled",
                                                                          "hiddenLabel": "PodBrowser-hiddenLabel",
                                                                          "marginDense": "PodBrowser-marginDense",
                                                                          "positionEnd": "PodBrowser-positionEnd",
                                                                          "positionStart": "PodBrowser-positionStart",
                                                                          "root": "PodBrowser-root",
                                                                        }
                                                                      }
                                                                      position="start"
                                                                    >
                                                                      <div
                                                                        className="PodBrowser-root PodBrowser-positionStart"
                                                                      >
                                                                        <ForwardRef>
                                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                                            <ForwardRef(SvgIcon)
                                                                              classes={
                                                                                Object {
                                                                                  "colorAction": "PodBrowser-colorAction",
                                                                                  "colorDisabled": "PodBrowser-colorDisabled",
                                                                                  "colorError": "PodBrowser-colorError",
                                                                                  "colorPrimary": "PodBrowser-colorPrimary",
                                                                                  "colorSecondary": "PodBrowser-colorSecondary",
                                                                                  "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                                  "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                                  "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                                  "root": "PodBrowser-root",
                                                                                  "sizeSmall": "PodBrowser-sizeSmall",
                                                                                }
                                                                              }
                                                                            >
                                                                              <svg
                                                                                aria-hidden={true}
                                                                                className="PodBrowser-root"
                                                                                focusable="false"
                                                                                viewBox="0 0 24 24"
                                                                              >
                                                                                <path
                                                                                  d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                                                                />
                                                                              </svg>
                                                                            </ForwardRef(SvgIcon)>
                                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                                        </ForwardRef>
                                                                      </div>
                                                                    </ForwardRef(InputAdornment)>
                                                                  </WithStyles(ForwardRef(InputAdornment))>
                                                                  <input
                                                                    aria-invalid={false}
                                                                    className="PodBrowser-input PodBrowser-input PodBrowser-inputAdornedStart"
                                                                    disabled={false}
                                                                    id={
                                                                      Array [
                                                                        "id1",
                                                                      ]
                                                                    }
                                                                    onAnimationStart={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    type="text"
                                                                    value=""
                                                                  />
                                                                </div>
                                                              </ForwardRef(InputBase)>
                                                            </WithStyles(ForwardRef(InputBase))>
                                                          </ForwardRef(Input)>
                                                        </WithStyles(ForwardRef(Input))>
                                                      </div>
                                                    </ForwardRef(FormControl)>
                                                  </WithStyles(ForwardRef(FormControl))>
                                                  <WithStyles(ForwardRef(Button))
                                                    className="PodBrowser-agentAddButton"
                                                    onClick={[Function]}
                                                    variant="contained"
                                                  >
                                                    <ForwardRef(Button)
                                                      className="PodBrowser-agentAddButton"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "PodBrowser-colorInherit",
                                                          "contained": "PodBrowser-contained",
                                                          "containedPrimary": "PodBrowser-containedPrimary",
                                                          "containedSecondary": "PodBrowser-containedSecondary",
                                                          "containedSizeLarge": "PodBrowser-containedSizeLarge",
                                                          "containedSizeSmall": "PodBrowser-containedSizeSmall",
                                                          "disableElevation": "PodBrowser-disableElevation",
                                                          "disabled": "PodBrowser-disabled",
                                                          "endIcon": "PodBrowser-endIcon",
                                                          "focusVisible": "PodBrowser-focusVisible",
                                                          "fullWidth": "PodBrowser-fullWidth",
                                                          "iconSizeLarge": "PodBrowser-iconSizeLarge",
                                                          "iconSizeMedium": "PodBrowser-iconSizeMedium",
                                                          "iconSizeSmall": "PodBrowser-iconSizeSmall",
                                                          "label": "PodBrowser-label",
                                                          "outlined": "PodBrowser-outlined",
                                                          "outlinedPrimary": "PodBrowser-outlinedPrimary",
                                                          "outlinedSecondary": "PodBrowser-outlinedSecondary",
                                                          "outlinedSizeLarge": "PodBrowser-outlinedSizeLarge",
                                                          "outlinedSizeSmall": "PodBrowser-outlinedSizeSmall",
                                                          "root": "PodBrowser-root",
                                                          "sizeLarge": "PodBrowser-sizeLarge",
                                                          "sizeSmall": "PodBrowser-sizeSmall",
                                                          "startIcon": "PodBrowser-startIcon",
                                                          "text": "PodBrowser-text",
                                                          "textPrimary": "PodBrowser-textPrimary",
                                                          "textSecondary": "PodBrowser-textSecondary",
                                                          "textSizeLarge": "PodBrowser-textSizeLarge",
                                                          "textSizeSmall": "PodBrowser-textSizeSmall",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      variant="contained"
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        className="PodBrowser-root PodBrowser-contained PodBrowser-agentAddButton"
                                                        component="button"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        focusVisibleClassName="PodBrowser-focusVisible"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          className="PodBrowser-root PodBrowser-contained PodBrowser-agentAddButton"
                                                          classes={
                                                            Object {
                                                              "disabled": "PodBrowser-disabled",
                                                              "focusVisible": "PodBrowser-focusVisible",
                                                              "root": "PodBrowser-root",
                                                            }
                                                          }
                                                          component="button"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          focusVisibleClassName="PodBrowser-focusVisible"
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <button
                                                            className="PodBrowser-root PodBrowser-root PodBrowser-contained PodBrowser-agentAddButton"
                                                            disabled={false}
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            tabIndex={0}
                                                            type="button"
                                                          >
                                                            <span
                                                              className="PodBrowser-label"
                                                            >
                                                              Add
                                                            </span>
                                                            <WithStyles(memo)
                                                              center={false}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "PodBrowser-child",
                                                                    "childLeaving": "PodBrowser-childLeaving",
                                                                    "childPulsate": "PodBrowser-childPulsate",
                                                                    "ripple": "PodBrowser-ripple",
                                                                    "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                    "rippleVisible": "PodBrowser-rippleVisible",
                                                                    "root": "PodBrowser-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="PodBrowser-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </button>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(Button)>
                                                  </WithStyles(ForwardRef(Button))>
                                                </AgentSearchForm>
                                              </section>
                                              <section
                                                className="PodBrowser-centeredSection"
                                              >
                                                <AgentAccessList
                                                  iri="/iri/"
                                                  onSave={[Function]}
                                                  onSubmit={[Function]}
                                                  permissions={Array []}
                                                  saveFn={[Function]}
                                                  warn={false}
                                                />
                                              </section>
                                              <WithStyles(ForwardRef(Divider))>
                                                <ForwardRef(Divider)
                                                  classes={
                                                    Object {
                                                      "absolute": "PodBrowser-absolute",
                                                      "flexItem": "PodBrowser-flexItem",
                                                      "inset": "PodBrowser-inset",
                                                      "light": "PodBrowser-light",
                                                      "middle": "PodBrowser-middle",
                                                      "root": "PodBrowser-root",
                                                      "vertical": "PodBrowser-vertical",
                                                    }
                                                  }
                                                >
                                                  <hr
                                                    className="PodBrowser-root"
                                                  />
                                                </ForwardRef(Divider)>
                                              </WithStyles(ForwardRef(Divider))>
                                              <section
                                                className="PodBrowser-centeredSection"
                                              >
                                                <h5
                                                  className="PodBrowser-content-h5"
                                                >
                                                  Default Access
                                                </h5>
                                                <WithStyles(ForwardRef(List))>
                                                  <ForwardRef(List)
                                                    classes={
                                                      Object {
                                                        "dense": "PodBrowser-dense",
                                                        "padding": "PodBrowser-padding",
                                                        "root": "PodBrowser-root",
                                                        "subheader": "PodBrowser-subheader",
                                                      }
                                                    }
                                                  >
                                                    <ul
                                                      className="PodBrowser-root PodBrowser-padding"
                                                    >
                                                      <WithStyles(ForwardRef(ListItem))
                                                        className="PodBrowser-listItem"
                                                        key="0"
                                                      >
                                                        <ForwardRef(ListItem)
                                                          className="PodBrowser-listItem"
                                                          classes={
                                                            Object {
                                                              "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                              "button": "PodBrowser-button",
                                                              "container": "PodBrowser-container",
                                                              "dense": "PodBrowser-dense",
                                                              "disabled": "PodBrowser-disabled",
                                                              "divider": "PodBrowser-divider",
                                                              "focusVisible": "PodBrowser-focusVisible",
                                                              "gutters": "PodBrowser-gutters",
                                                              "root": "PodBrowser-root",
                                                              "secondaryAction": "PodBrowser-secondaryAction",
                                                              "selected": "PodBrowser-selected",
                                                            }
                                                          }
                                                        >
                                                          <li
                                                            className="PodBrowser-root PodBrowser-listItem PodBrowser-gutters"
                                                            disabled={false}
                                                          >
                                                            <WithStyles(ForwardRef(ListItemIcon))
                                                              key=".0"
                                                            >
                                                              <ForwardRef(ListItemIcon)
                                                                classes={
                                                                  Object {
                                                                    "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                    "root": "PodBrowser-root",
                                                                  }
                                                                }
                                                              >
                                                                <div
                                                                  className="PodBrowser-root"
                                                                >
                                                                  <ForwardRef>
                                                                    <WithStyles(ForwardRef(SvgIcon))>
                                                                      <ForwardRef(SvgIcon)
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "PodBrowser-colorAction",
                                                                            "colorDisabled": "PodBrowser-colorDisabled",
                                                                            "colorError": "PodBrowser-colorError",
                                                                            "colorPrimary": "PodBrowser-colorPrimary",
                                                                            "colorSecondary": "PodBrowser-colorSecondary",
                                                                            "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                            "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                            "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                            "root": "PodBrowser-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="PodBrowser-root"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef>
                                                                  People
                                                                </div>
                                                              </ForwardRef(ListItemIcon)>
                                                            </WithStyles(ForwardRef(ListItemIcon))>
                                                          </li>
                                                        </ForwardRef(ListItem)>
                                                      </WithStyles(ForwardRef(ListItem))>
                                                      <WithStyles(ForwardRef(Divider))>
                                                        <ForwardRef(Divider)
                                                          classes={
                                                            Object {
                                                              "absolute": "PodBrowser-absolute",
                                                              "flexItem": "PodBrowser-flexItem",
                                                              "inset": "PodBrowser-inset",
                                                              "light": "PodBrowser-light",
                                                              "middle": "PodBrowser-middle",
                                                              "root": "PodBrowser-root",
                                                              "vertical": "PodBrowser-vertical",
                                                            }
                                                          }
                                                        >
                                                          <hr
                                                            className="PodBrowser-root"
                                                          />
                                                        </ForwardRef(Divider)>
                                                      </WithStyles(ForwardRef(Divider))>
                                                      <AgentAccessList
                                                        iri="/iri/"
                                                        onSave={[Function]}
                                                        onSubmit={[Function]}
                                                        permissions={Array []}
                                                        saveFn={[Function]}
                                                        warn={false}
                                                      />
                                                    </ul>
                                                  </ForwardRef(List)>
                                                </WithStyles(ForwardRef(List))>
                                                <DefaultPermissionForm
                                                  iri="/iri/"
                                                  onSubmit={[Function]}
                                                  permission={
                                                    Object {
                                                      "acl": Object {
                                                        "append": true,
                                                        "control": true,
                                                        "read": true,
                                                        "write": true,
                                                      },
                                                      "alias": "Control",
                                                      "profile": Object {
                                                        "webId": "https://test.url/profile/card#me",
                                                      },
                                                      "webId": "https://test.url/profile/card#me",
                                                    }
                                                  }
                                                  webId="https://test.url/profile/card#me"
                                                >
                                                  <AgentSearchForm
                                                    buttonText="Add"
                                                    heading="Grant Default Access"
                                                    onSubmit={[Function]}
                                                  >
                                                    <h5
                                                      className="PodBrowser-content-h5"
                                                    >
                                                      Grant Default Access
                                                    </h5>
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="PodBrowser-agentInput"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="PodBrowser-agentInput"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "PodBrowser-fullWidth",
                                                            "marginDense": "PodBrowser-marginDense",
                                                            "marginNormal": "PodBrowser-marginNormal",
                                                            "root": "PodBrowser-root",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="PodBrowser-root PodBrowser-agentInput"
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))
                                                            htmlFor={
                                                              Array [
                                                                "id2",
                                                              ]
                                                            }
                                                          >
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "PodBrowser-animated",
                                                                  "asterisk": "PodBrowser-asterisk",
                                                                  "disabled": "PodBrowser-disabled",
                                                                  "error": "PodBrowser-error",
                                                                  "filled": "PodBrowser-filled",
                                                                  "focused": "PodBrowser-focused",
                                                                  "formControl": "PodBrowser-formControl",
                                                                  "marginDense": "PodBrowser-marginDense",
                                                                  "outlined": "PodBrowser-outlined",
                                                                  "required": "PodBrowser-required",
                                                                  "root": "PodBrowser-root",
                                                                  "shrink": "PodBrowser-shrink",
                                                                }
                                                              }
                                                              htmlFor={
                                                                Array [
                                                                  "id2",
                                                                ]
                                                              }
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="PodBrowser-root PodBrowser-formControl PodBrowser-animated PodBrowser-shrink"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "PodBrowser-asterisk",
                                                                    "disabled": "PodBrowser-disabled",
                                                                    "error": "PodBrowser-error",
                                                                    "focused": "PodBrowser-focused",
                                                                    "required": "PodBrowser-required",
                                                                  }
                                                                }
                                                                data-shrink={true}
                                                                htmlFor={
                                                                  Array [
                                                                    "id2",
                                                                  ]
                                                                }
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="PodBrowser-root PodBrowser-formControl PodBrowser-animated PodBrowser-shrink"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "PodBrowser-asterisk PodBrowser-asterisk",
                                                                      "colorSecondary": "PodBrowser-colorSecondary",
                                                                      "disabled": "PodBrowser-disabled PodBrowser-disabled",
                                                                      "error": "PodBrowser-error PodBrowser-error",
                                                                      "filled": "PodBrowser-filled",
                                                                      "focused": "PodBrowser-focused PodBrowser-focused",
                                                                      "required": "PodBrowser-required PodBrowser-required",
                                                                      "root": "PodBrowser-root",
                                                                    }
                                                                  }
                                                                  data-shrink={true}
                                                                  htmlFor={
                                                                    Array [
                                                                      "id2",
                                                                    ]
                                                                  }
                                                                >
                                                                  <label
                                                                    className="PodBrowser-root PodBrowser-root PodBrowser-formControl PodBrowser-animated PodBrowser-shrink"
                                                                    data-shrink={true}
                                                                    htmlFor={
                                                                      Array [
                                                                        "id2",
                                                                      ]
                                                                    }
                                                                  >
                                                                    Web ID
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(Input))
                                                            id={
                                                              Array [
                                                                "id2",
                                                              ]
                                                            }
                                                            onChange={[Function]}
                                                            startAdornment={
                                                              <WithStyles(ForwardRef(InputAdornment))
                                                                position="start"
                                                              >
                                                                <Memo(AccountCircleIcon) />
                                                              </WithStyles(ForwardRef(InputAdornment))>
                                                            }
                                                            value=""
                                                          >
                                                            <ForwardRef(Input)
                                                              classes={
                                                                Object {
                                                                  "colorSecondary": "PodBrowser-colorSecondary",
                                                                  "disabled": "PodBrowser-disabled",
                                                                  "error": "PodBrowser-error",
                                                                  "focused": "PodBrowser-focused",
                                                                  "formControl": "PodBrowser-formControl",
                                                                  "fullWidth": "PodBrowser-fullWidth",
                                                                  "input": "PodBrowser-input",
                                                                  "inputMarginDense": "PodBrowser-inputMarginDense",
                                                                  "inputMultiline": "PodBrowser-inputMultiline",
                                                                  "inputTypeSearch": "PodBrowser-inputTypeSearch",
                                                                  "marginDense": "PodBrowser-marginDense",
                                                                  "multiline": "PodBrowser-multiline",
                                                                  "root": "PodBrowser-root",
                                                                  "underline": "PodBrowser-underline",
                                                                }
                                                              }
                                                              id={
                                                                Array [
                                                                  "id2",
                                                                ]
                                                              }
                                                              onChange={[Function]}
                                                              startAdornment={
                                                                <WithStyles(ForwardRef(InputAdornment))
                                                                  position="start"
                                                                >
                                                                  <Memo(AccountCircleIcon) />
                                                                </WithStyles(ForwardRef(InputAdornment))>
                                                              }
                                                              value=""
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                classes={
                                                                  Object {
                                                                    "colorSecondary": "PodBrowser-colorSecondary",
                                                                    "disabled": "PodBrowser-disabled",
                                                                    "error": "PodBrowser-error",
                                                                    "focused": "PodBrowser-focused",
                                                                    "formControl": "PodBrowser-formControl",
                                                                    "fullWidth": "PodBrowser-fullWidth",
                                                                    "input": "PodBrowser-input",
                                                                    "inputMarginDense": "PodBrowser-inputMarginDense",
                                                                    "inputMultiline": "PodBrowser-inputMultiline",
                                                                    "inputTypeSearch": "PodBrowser-inputTypeSearch",
                                                                    "marginDense": "PodBrowser-marginDense",
                                                                    "multiline": "PodBrowser-multiline",
                                                                    "root": "PodBrowser-root PodBrowser-underline",
                                                                    "underline": null,
                                                                  }
                                                                }
                                                                fullWidth={false}
                                                                id={
                                                                  Array [
                                                                    "id2",
                                                                  ]
                                                                }
                                                                inputComponent="input"
                                                                multiline={false}
                                                                onChange={[Function]}
                                                                startAdornment={
                                                                  <WithStyles(ForwardRef(InputAdornment))
                                                                    position="start"
                                                                  >
                                                                    <Memo(AccountCircleIcon) />
                                                                  </WithStyles(ForwardRef(InputAdornment))>
                                                                }
                                                                type="text"
                                                                value=""
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "PodBrowser-adornedEnd",
                                                                      "adornedStart": "PodBrowser-adornedStart",
                                                                      "colorSecondary": "PodBrowser-colorSecondary PodBrowser-colorSecondary",
                                                                      "disabled": "PodBrowser-disabled PodBrowser-disabled",
                                                                      "error": "PodBrowser-error PodBrowser-error",
                                                                      "focused": "PodBrowser-focused PodBrowser-focused",
                                                                      "formControl": "PodBrowser-formControl PodBrowser-formControl",
                                                                      "fullWidth": "PodBrowser-fullWidth PodBrowser-fullWidth",
                                                                      "input": "PodBrowser-input PodBrowser-input",
                                                                      "inputAdornedEnd": "PodBrowser-inputAdornedEnd",
                                                                      "inputAdornedStart": "PodBrowser-inputAdornedStart",
                                                                      "inputHiddenLabel": "PodBrowser-inputHiddenLabel",
                                                                      "inputMarginDense": "PodBrowser-inputMarginDense PodBrowser-inputMarginDense",
                                                                      "inputMultiline": "PodBrowser-inputMultiline PodBrowser-inputMultiline",
                                                                      "inputTypeSearch": "PodBrowser-inputTypeSearch PodBrowser-inputTypeSearch",
                                                                      "marginDense": "PodBrowser-marginDense PodBrowser-marginDense",
                                                                      "multiline": "PodBrowser-multiline PodBrowser-multiline",
                                                                      "root": "PodBrowser-root PodBrowser-root PodBrowser-underline",
                                                                    }
                                                                  }
                                                                  fullWidth={false}
                                                                  id={
                                                                    Array [
                                                                      "id2",
                                                                    ]
                                                                  }
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  onChange={[Function]}
                                                                  startAdornment={
                                                                    <WithStyles(ForwardRef(InputAdornment))
                                                                      position="start"
                                                                    >
                                                                      <Memo(AccountCircleIcon) />
                                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                                  }
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <div
                                                                    className="PodBrowser-root PodBrowser-root PodBrowser-underline PodBrowser-formControl PodBrowser-formControl PodBrowser-adornedStart"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(InputAdornment))
                                                                      position="start"
                                                                    >
                                                                      <ForwardRef(InputAdornment)
                                                                        classes={
                                                                          Object {
                                                                            "disablePointerEvents": "PodBrowser-disablePointerEvents",
                                                                            "filled": "PodBrowser-filled",
                                                                            "hiddenLabel": "PodBrowser-hiddenLabel",
                                                                            "marginDense": "PodBrowser-marginDense",
                                                                            "positionEnd": "PodBrowser-positionEnd",
                                                                            "positionStart": "PodBrowser-positionStart",
                                                                            "root": "PodBrowser-root",
                                                                          }
                                                                        }
                                                                        position="start"
                                                                      >
                                                                        <div
                                                                          className="PodBrowser-root PodBrowser-positionStart"
                                                                        >
                                                                          <ForwardRef>
                                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                                              <ForwardRef(SvgIcon)
                                                                                classes={
                                                                                  Object {
                                                                                    "colorAction": "PodBrowser-colorAction",
                                                                                    "colorDisabled": "PodBrowser-colorDisabled",
                                                                                    "colorError": "PodBrowser-colorError",
                                                                                    "colorPrimary": "PodBrowser-colorPrimary",
                                                                                    "colorSecondary": "PodBrowser-colorSecondary",
                                                                                    "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                                    "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                                    "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                                    "root": "PodBrowser-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="PodBrowser-root"
                                                                                  focusable="false"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                                                                  />
                                                                                </svg>
                                                                              </ForwardRef(SvgIcon)>
                                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                                          </ForwardRef>
                                                                        </div>
                                                                      </ForwardRef(InputAdornment)>
                                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                                    <input
                                                                      aria-invalid={false}
                                                                      className="PodBrowser-input PodBrowser-input PodBrowser-inputAdornedStart"
                                                                      disabled={false}
                                                                      id={
                                                                        Array [
                                                                          "id2",
                                                                        ]
                                                                      }
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={false}
                                                                      type="text"
                                                                      value=""
                                                                    />
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(Input)>
                                                          </WithStyles(ForwardRef(Input))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                    <WithStyles(ForwardRef(Button))
                                                      className="PodBrowser-agentAddButton"
                                                      onClick={[Function]}
                                                      variant="contained"
                                                    >
                                                      <ForwardRef(Button)
                                                        className="PodBrowser-agentAddButton"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "PodBrowser-colorInherit",
                                                            "contained": "PodBrowser-contained",
                                                            "containedPrimary": "PodBrowser-containedPrimary",
                                                            "containedSecondary": "PodBrowser-containedSecondary",
                                                            "containedSizeLarge": "PodBrowser-containedSizeLarge",
                                                            "containedSizeSmall": "PodBrowser-containedSizeSmall",
                                                            "disableElevation": "PodBrowser-disableElevation",
                                                            "disabled": "PodBrowser-disabled",
                                                            "endIcon": "PodBrowser-endIcon",
                                                            "focusVisible": "PodBrowser-focusVisible",
                                                            "fullWidth": "PodBrowser-fullWidth",
                                                            "iconSizeLarge": "PodBrowser-iconSizeLarge",
                                                            "iconSizeMedium": "PodBrowser-iconSizeMedium",
                                                            "iconSizeSmall": "PodBrowser-iconSizeSmall",
                                                            "label": "PodBrowser-label",
                                                            "outlined": "PodBrowser-outlined",
                                                            "outlinedPrimary": "PodBrowser-outlinedPrimary",
                                                            "outlinedSecondary": "PodBrowser-outlinedSecondary",
                                                            "outlinedSizeLarge": "PodBrowser-outlinedSizeLarge",
                                                            "outlinedSizeSmall": "PodBrowser-outlinedSizeSmall",
                                                            "root": "PodBrowser-root",
                                                            "sizeLarge": "PodBrowser-sizeLarge",
                                                            "sizeSmall": "PodBrowser-sizeSmall",
                                                            "startIcon": "PodBrowser-startIcon",
                                                            "text": "PodBrowser-text",
                                                            "textPrimary": "PodBrowser-textPrimary",
                                                            "textSecondary": "PodBrowser-textSecondary",
                                                            "textSizeLarge": "PodBrowser-textSizeLarge",
                                                            "textSizeSmall": "PodBrowser-textSizeSmall",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        variant="contained"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="PodBrowser-root PodBrowser-contained PodBrowser-agentAddButton"
                                                          component="button"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          focusVisibleClassName="PodBrowser-focusVisible"
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="PodBrowser-root PodBrowser-contained PodBrowser-agentAddButton"
                                                            classes={
                                                              Object {
                                                                "disabled": "PodBrowser-disabled",
                                                                "focusVisible": "PodBrowser-focusVisible",
                                                                "root": "PodBrowser-root",
                                                              }
                                                            }
                                                            component="button"
                                                            disabled={false}
                                                            focusRipple={true}
                                                            focusVisibleClassName="PodBrowser-focusVisible"
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <button
                                                              className="PodBrowser-root PodBrowser-root PodBrowser-contained PodBrowser-agentAddButton"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                              type="button"
                                                            >
                                                              <span
                                                                className="PodBrowser-label"
                                                              >
                                                                Add
                                                              </span>
                                                              <WithStyles(memo)
                                                                center={false}
                                                              >
                                                                <ForwardRef(TouchRipple)
                                                                  center={false}
                                                                  classes={
                                                                    Object {
                                                                      "child": "PodBrowser-child",
                                                                      "childLeaving": "PodBrowser-childLeaving",
                                                                      "childPulsate": "PodBrowser-childPulsate",
                                                                      "ripple": "PodBrowser-ripple",
                                                                      "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                      "rippleVisible": "PodBrowser-rippleVisible",
                                                                      "root": "PodBrowser-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="PodBrowser-root"
                                                                  >
                                                                    <TransitionGroup
                                                                      childFactory={[Function]}
                                                                      component={null}
                                                                      exit={true}
                                                                    />
                                                                  </span>
                                                                </ForwardRef(TouchRipple)>
                                                              </WithStyles(memo)>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(Button)>
                                                    </WithStyles(ForwardRef(Button))>
                                                  </AgentSearchForm>
                                                  <AgentAccessList
                                                    iri="/iri/"
                                                    onSave={[Function]}
                                                    onSubmit={[Function]}
                                                    permissions={Array []}
                                                    saveFn={[Function]}
                                                    warn={false}
                                                  />
                                                </DefaultPermissionForm>
                                                <WithStyles(ForwardRef(Divider))>
                                                  <ForwardRef(Divider)
                                                    classes={
                                                      Object {
                                                        "absolute": "PodBrowser-absolute",
                                                        "flexItem": "PodBrowser-flexItem",
                                                        "inset": "PodBrowser-inset",
                                                        "light": "PodBrowser-light",
                                                        "middle": "PodBrowser-middle",
                                                        "root": "PodBrowser-root",
                                                        "vertical": "PodBrowser-vertical",
                                                      }
                                                    }
                                                  >
                                                    <hr
                                                      className="PodBrowser-root"
                                                    />
                                                  </ForwardRef(Divider)>
                                                </WithStyles(ForwardRef(Divider))>
                                              </section>
                                            </ResourceSharing>
                                          </div>
                                        </div>
                                      </ForwardRef(AccordionDetails)>
                                    </WithStyles(ForwardRef(AccordionDetails))>
                                  </div>
                                </div>
<<<<<<< master
                              </Transition>
                            </ForwardRef(Collapse)>
                          </WithStyles(ForwardRef(Collapse))>
                        </div>
                      </ForwardRef(Paper)>
                    </WithStyles(ForwardRef(Paper))>
                  </ForwardRef(Accordion)>
                </WithStyles(ForwardRef(Accordion))>
              </ResourceDetails>
            </Contents>
          </AlertContextProvider>
        </g>
      </MockedSessionContextProvider>
=======
                              </div>
                            </div>
                          </Transition>
                        </ForwardRef(Collapse)>
                      </WithStyles(ForwardRef(Collapse))>
                    </div>
                  </ForwardRef(Paper)>
                </WithStyles(ForwardRef(Paper))>
              </ForwardRef(Accordion)>
            </WithStyles(ForwardRef(Accordion))>
          </ResourceDetails>
        </Contents>
      </AlertContextProvider>
>>>>>>> Partial work (saving before introducing context for resource)
    </ThemeProvider>
  </StylesProvider>
</Component>
`;

exports[`Contents it renders a ResourceSharingLoading component if there's no data and the action is sharing 1`] = `
<Component
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-ExtraBold": [Function],
        "fonts/Raleway/Raleway-Medium": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#4E4E4E",
          "secondary": "#4E4E4E",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 800,
        "fontWeightLight": 500,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.375rem",
          "fontWeight": 800,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.45,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.125rem",
          "fontWeight": 800,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.27,
        },
        "h3": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.05rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1.2,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.1,
        },
        "h5": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h6": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "0.625rem",
          "fontWeight": 800,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <StylesProvider
    generateClassName={[Function]}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1280,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "iconSet": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "icons": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "label": "SDK Default",
          "licenses": Array [
            "fonts/Raleway/OFL.txt",
          ],
          "localFonts": Object {
            "fonts/Raleway/Raleway-ExtraBold": [Function],
            "fonts/Raleway/Raleway-Medium": [Function],
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "name": "sdk-default",
          "overrides": Object {},
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "adjustAlpha": [Function],
            "augmentColor": [Function],
            "background": Object {
              "default": "#FFFFFF",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#f44336",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(86, 53, 178)",
              "light": "rgb(150, 112, 255)",
              "main": "#7C4DFF",
            },
            "secondary": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#083575",
              "light": "#01C9EA",
              "main": "#18A9E6",
            },
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#4E4E4E",
              "secondary": "#4E4E4E",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {},
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "stylesheets": Array [
            "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
          ],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "body1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 800,
            "fontWeightLight": 500,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.375rem",
              "fontWeight": 800,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.45,
            },
            "h2": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.125rem",
              "fontWeight": 800,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.27,
            },
            "h3": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.05rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1.2,
            },
            "h4": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.1,
            },
            "h5": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1,
            },
            "h6": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "0.625rem",
              "fontWeight": 800,
              "letterSpacing": "0.0075em",
              "lineHeight": 1,
            },
            "heading": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <Contents
        action="sharing"
        iri="/iri/"
        onUpdate={[Function]}
      >
        <DetailsLoading
          iri="/iri/"
          name="iri"
          onDelete={[Function]}
          onDeleteError={[Function]}
        >
          <section
            className="PodBrowser-centeredSection"
          >
            <h3
              className="PodBrowser-content-h3"
              title="/iri/"
            >
              iri
            </h3>
          </section>
          <WithStyles(ForwardRef(Divider))>
            <ForwardRef(Divider)
              classes={
                Object {
                  "absolute": "PodBrowser-absolute",
                  "flexItem": "PodBrowser-flexItem",
                  "inset": "PodBrowser-inset",
                  "light": "PodBrowser-light",
                  "middle": "PodBrowser-middle",
                  "root": "PodBrowser-root",
                  "vertical": "PodBrowser-vertical",
                }
              }
            >
              <hr
                className="PodBrowser-root"
              />
            </ForwardRef(Divider)>
          </WithStyles(ForwardRef(Divider))>
          <WithStyles(ForwardRef(Accordion))
            disabled={true}
          >
            <ForwardRef(Accordion)
              classes={
                Object {
                  "disabled": "PodBrowser-disabled",
                  "expanded": "PodBrowser-expanded",
                  "root": "PodBrowser-root",
                  "rounded": "PodBrowser-rounded",
                }
              }
              disabled={true}
            >
              <WithStyles(ForwardRef(Paper))
                className="PodBrowser-root PodBrowser-disabled PodBrowser-rounded"
                square={false}
              >
                <ForwardRef(Paper)
                  className="PodBrowser-root PodBrowser-disabled PodBrowser-rounded"
                  classes={
                    Object {
                      "elevation0": "PodBrowser-elevation0",
                      "elevation1": "PodBrowser-elevation1",
                      "elevation10": "PodBrowser-elevation10",
                      "elevation11": "PodBrowser-elevation11",
                      "elevation12": "PodBrowser-elevation12",
                      "elevation13": "PodBrowser-elevation13",
                      "elevation14": "PodBrowser-elevation14",
                      "elevation15": "PodBrowser-elevation15",
                      "elevation16": "PodBrowser-elevation16",
                      "elevation17": "PodBrowser-elevation17",
                      "elevation18": "PodBrowser-elevation18",
                      "elevation19": "PodBrowser-elevation19",
                      "elevation2": "PodBrowser-elevation2",
                      "elevation20": "PodBrowser-elevation20",
                      "elevation21": "PodBrowser-elevation21",
                      "elevation22": "PodBrowser-elevation22",
                      "elevation23": "PodBrowser-elevation23",
                      "elevation24": "PodBrowser-elevation24",
                      "elevation3": "PodBrowser-elevation3",
                      "elevation4": "PodBrowser-elevation4",
                      "elevation5": "PodBrowser-elevation5",
                      "elevation6": "PodBrowser-elevation6",
                      "elevation7": "PodBrowser-elevation7",
                      "elevation8": "PodBrowser-elevation8",
                      "elevation9": "PodBrowser-elevation9",
                      "outlined": "PodBrowser-outlined",
                      "root": "PodBrowser-root",
                      "rounded": "PodBrowser-rounded",
                    }
                  }
                  square={false}
                >
                  <div
                    className="PodBrowser-root PodBrowser-root PodBrowser-disabled PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                  >
                    <WithStyles(ForwardRef(AccordionSummary))
                      key=".0"
                    >
                      <ForwardRef(AccordionSummary)
                        classes={
                          Object {
                            "content": "PodBrowser-content",
                            "disabled": "PodBrowser-disabled",
                            "expandIcon": "PodBrowser-expandIcon",
                            "expanded": "PodBrowser-expanded",
                            "focused": "PodBrowser-focused",
                            "root": "PodBrowser-root",
                          }
                        }
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-expanded={false}
                          className="PodBrowser-root PodBrowser-disabled"
                          component="div"
                          disableRipple={true}
                          disabled={true}
                          focusRipple={false}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocusVisible={[Function]}
                        >
                          <ForwardRef(ButtonBase)
                            aria-expanded={false}
                            className="PodBrowser-root PodBrowser-disabled"
                            classes={
                              Object {
                                "disabled": "PodBrowser-disabled",
                                "focusVisible": "PodBrowser-focusVisible",
                                "root": "PodBrowser-root",
                              }
                            }
                            component="div"
                            disableRipple={true}
                            disabled={true}
                            focusRipple={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocusVisible={[Function]}
                          >
                            <div
                              aria-disabled={true}
                              aria-expanded={false}
                              className="PodBrowser-root PodBrowser-root PodBrowser-disabled PodBrowser-disabled"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={-1}
                            >
                              <div
                                className="PodBrowser-content"
                              >
                                Actions
                              </div>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(AccordionSummary)>
                    </WithStyles(ForwardRef(AccordionSummary))>
                    <WithStyles(ForwardRef(Collapse))
                      in={false}
                      timeout="auto"
                    >
                      <ForwardRef(Collapse)
                        classes={
                          Object {
                            "container": "PodBrowser-container",
                            "entered": "PodBrowser-entered",
                            "hidden": "PodBrowser-hidden",
                            "wrapper": "PodBrowser-wrapper",
                            "wrapperInner": "PodBrowser-wrapperInner",
                          }
                        }
                        in={false}
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <div
                            className="PodBrowser-container PodBrowser-hidden"
                            style={
                              Object {
                                "minHeight": "0px",
                              }
                            }
                          >
                            <div
                              className="PodBrowser-wrapper"
                            >
                              <div
                                className="PodBrowser-wrapperInner"
                              >
                                <div
                                  role="region"
                                />
                              </div>
                            </div>
                          </div>
                        </Transition>
                      </ForwardRef(Collapse)>
                    </WithStyles(ForwardRef(Collapse))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(Accordion)>
          </WithStyles(ForwardRef(Accordion))>
          <WithStyles(ForwardRef(Accordion))
            disabled={true}
          >
            <ForwardRef(Accordion)
              classes={
                Object {
                  "disabled": "PodBrowser-disabled",
                  "expanded": "PodBrowser-expanded",
                  "root": "PodBrowser-root",
                  "rounded": "PodBrowser-rounded",
                }
              }
              disabled={true}
            >
              <WithStyles(ForwardRef(Paper))
                className="PodBrowser-root PodBrowser-disabled PodBrowser-rounded"
                square={false}
              >
                <ForwardRef(Paper)
                  className="PodBrowser-root PodBrowser-disabled PodBrowser-rounded"
                  classes={
                    Object {
                      "elevation0": "PodBrowser-elevation0",
                      "elevation1": "PodBrowser-elevation1",
                      "elevation10": "PodBrowser-elevation10",
                      "elevation11": "PodBrowser-elevation11",
                      "elevation12": "PodBrowser-elevation12",
                      "elevation13": "PodBrowser-elevation13",
                      "elevation14": "PodBrowser-elevation14",
                      "elevation15": "PodBrowser-elevation15",
                      "elevation16": "PodBrowser-elevation16",
                      "elevation17": "PodBrowser-elevation17",
                      "elevation18": "PodBrowser-elevation18",
                      "elevation19": "PodBrowser-elevation19",
                      "elevation2": "PodBrowser-elevation2",
                      "elevation20": "PodBrowser-elevation20",
                      "elevation21": "PodBrowser-elevation21",
                      "elevation22": "PodBrowser-elevation22",
                      "elevation23": "PodBrowser-elevation23",
                      "elevation24": "PodBrowser-elevation24",
                      "elevation3": "PodBrowser-elevation3",
                      "elevation4": "PodBrowser-elevation4",
                      "elevation5": "PodBrowser-elevation5",
                      "elevation6": "PodBrowser-elevation6",
                      "elevation7": "PodBrowser-elevation7",
                      "elevation8": "PodBrowser-elevation8",
                      "elevation9": "PodBrowser-elevation9",
                      "outlined": "PodBrowser-outlined",
                      "root": "PodBrowser-root",
                      "rounded": "PodBrowser-rounded",
                    }
                  }
                  square={false}
                >
                  <div
                    className="PodBrowser-root PodBrowser-root PodBrowser-disabled PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                  >
                    <WithStyles(ForwardRef(AccordionSummary))
                      key=".0"
                    >
                      <ForwardRef(AccordionSummary)
                        classes={
                          Object {
                            "content": "PodBrowser-content",
                            "disabled": "PodBrowser-disabled",
                            "expandIcon": "PodBrowser-expandIcon",
                            "expanded": "PodBrowser-expanded",
                            "focused": "PodBrowser-focused",
                            "root": "PodBrowser-root",
                          }
                        }
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-expanded={false}
                          className="PodBrowser-root PodBrowser-disabled"
                          component="div"
                          disableRipple={true}
                          disabled={true}
                          focusRipple={false}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocusVisible={[Function]}
                        >
                          <ForwardRef(ButtonBase)
                            aria-expanded={false}
                            className="PodBrowser-root PodBrowser-disabled"
                            classes={
                              Object {
                                "disabled": "PodBrowser-disabled",
                                "focusVisible": "PodBrowser-focusVisible",
                                "root": "PodBrowser-root",
                              }
                            }
                            component="div"
                            disableRipple={true}
                            disabled={true}
                            focusRipple={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocusVisible={[Function]}
                          >
                            <div
                              aria-disabled={true}
                              aria-expanded={false}
                              className="PodBrowser-root PodBrowser-root PodBrowser-disabled PodBrowser-disabled"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={-1}
                            >
                              <div
                                className="PodBrowser-content"
                              >
                                Details
                              </div>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(AccordionSummary)>
                    </WithStyles(ForwardRef(AccordionSummary))>
                    <WithStyles(ForwardRef(Collapse))
                      in={false}
                      timeout="auto"
                    >
                      <ForwardRef(Collapse)
                        classes={
                          Object {
                            "container": "PodBrowser-container",
                            "entered": "PodBrowser-entered",
                            "hidden": "PodBrowser-hidden",
                            "wrapper": "PodBrowser-wrapper",
                            "wrapperInner": "PodBrowser-wrapperInner",
                          }
                        }
                        in={false}
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <div
                            className="PodBrowser-container PodBrowser-hidden"
                            style={
                              Object {
                                "minHeight": "0px",
                              }
                            }
                          >
                            <div
                              className="PodBrowser-wrapper"
                            >
                              <div
                                className="PodBrowser-wrapperInner"
                              >
                                <div
                                  role="region"
                                />
                              </div>
                            </div>
                          </div>
                        </Transition>
                      </ForwardRef(Collapse)>
                    </WithStyles(ForwardRef(Collapse))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(Accordion)>
          </WithStyles(ForwardRef(Accordion))>
          <WithStyles(ForwardRef(Accordion))
            disabled={true}
          >
            <ForwardRef(Accordion)
              classes={
                Object {
                  "disabled": "PodBrowser-disabled",
                  "expanded": "PodBrowser-expanded",
                  "root": "PodBrowser-root",
                  "rounded": "PodBrowser-rounded",
                }
              }
              disabled={true}
            >
              <WithStyles(ForwardRef(Paper))
                className="PodBrowser-root PodBrowser-disabled PodBrowser-rounded"
                square={false}
              >
                <ForwardRef(Paper)
                  className="PodBrowser-root PodBrowser-disabled PodBrowser-rounded"
                  classes={
                    Object {
                      "elevation0": "PodBrowser-elevation0",
                      "elevation1": "PodBrowser-elevation1",
                      "elevation10": "PodBrowser-elevation10",
                      "elevation11": "PodBrowser-elevation11",
                      "elevation12": "PodBrowser-elevation12",
                      "elevation13": "PodBrowser-elevation13",
                      "elevation14": "PodBrowser-elevation14",
                      "elevation15": "PodBrowser-elevation15",
                      "elevation16": "PodBrowser-elevation16",
                      "elevation17": "PodBrowser-elevation17",
                      "elevation18": "PodBrowser-elevation18",
                      "elevation19": "PodBrowser-elevation19",
                      "elevation2": "PodBrowser-elevation2",
                      "elevation20": "PodBrowser-elevation20",
                      "elevation21": "PodBrowser-elevation21",
                      "elevation22": "PodBrowser-elevation22",
                      "elevation23": "PodBrowser-elevation23",
                      "elevation24": "PodBrowser-elevation24",
                      "elevation3": "PodBrowser-elevation3",
                      "elevation4": "PodBrowser-elevation4",
                      "elevation5": "PodBrowser-elevation5",
                      "elevation6": "PodBrowser-elevation6",
                      "elevation7": "PodBrowser-elevation7",
                      "elevation8": "PodBrowser-elevation8",
                      "elevation9": "PodBrowser-elevation9",
                      "outlined": "PodBrowser-outlined",
                      "root": "PodBrowser-root",
                      "rounded": "PodBrowser-rounded",
                    }
                  }
                  square={false}
                >
                  <div
                    className="PodBrowser-root PodBrowser-root PodBrowser-disabled PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                  >
                    <WithStyles(ForwardRef(AccordionSummary))
                      key=".0"
                    >
                      <ForwardRef(AccordionSummary)
                        classes={
                          Object {
                            "content": "PodBrowser-content",
                            "disabled": "PodBrowser-disabled",
                            "expandIcon": "PodBrowser-expandIcon",
                            "expanded": "PodBrowser-expanded",
                            "focused": "PodBrowser-focused",
                            "root": "PodBrowser-root",
                          }
                        }
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-expanded={false}
                          className="PodBrowser-root PodBrowser-disabled"
                          component="div"
                          disableRipple={true}
                          disabled={true}
                          focusRipple={false}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocusVisible={[Function]}
                        >
                          <ForwardRef(ButtonBase)
                            aria-expanded={false}
                            className="PodBrowser-root PodBrowser-disabled"
                            classes={
                              Object {
                                "disabled": "PodBrowser-disabled",
                                "focusVisible": "PodBrowser-focusVisible",
                                "root": "PodBrowser-root",
                              }
                            }
                            component="div"
                            disableRipple={true}
                            disabled={true}
                            focusRipple={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocusVisible={[Function]}
                          >
                            <div
                              aria-disabled={true}
                              aria-expanded={false}
                              className="PodBrowser-root PodBrowser-root PodBrowser-disabled PodBrowser-disabled"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={-1}
                            >
                              <div
                                className="PodBrowser-content"
                              >
                                Permissions
                              </div>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(AccordionSummary)>
                    </WithStyles(ForwardRef(AccordionSummary))>
                    <WithStyles(ForwardRef(Collapse))
                      in={false}
                      timeout="auto"
                    >
                      <ForwardRef(Collapse)
                        classes={
                          Object {
                            "container": "PodBrowser-container",
                            "entered": "PodBrowser-entered",
                            "hidden": "PodBrowser-hidden",
                            "wrapper": "PodBrowser-wrapper",
                            "wrapperInner": "PodBrowser-wrapperInner",
                          }
                        }
                        in={false}
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <div
                            className="PodBrowser-container PodBrowser-hidden"
                            style={
                              Object {
                                "minHeight": "0px",
                              }
                            }
                          >
                            <div
                              className="PodBrowser-wrapper"
                            >
                              <div
                                className="PodBrowser-wrapperInner"
                              >
                                <div
                                  role="region"
                                />
                              </div>
                            </div>
                          </div>
                        </Transition>
                      </ForwardRef(Collapse)>
                    </WithStyles(ForwardRef(Collapse))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(Accordion)>
          </WithStyles(ForwardRef(Accordion))>
        </DetailsLoading>
      </Contents>
    </ThemeProvider>
  </StylesProvider>
</Component>
`;
