// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PermissionsForm Renders a permissions form 1`] = `
<PermissionsForm
  iri="https://mypod.myhost.com"
  onSave={[Function]}
  permission={
    Object {
      "acl": Object {
        "append": true,
        "control": true,
        "read": true,
        "write": true,
      },
      "alias": "Control",
      "profile": Object {
        "webId": "https://mypod.myhost.com/profile/card#me",
      },
      "webId": "https://mypod.myhost.com/profile/card#me",
    }
  }
  warnOnSubmit={false}
>
  <div
    className="makeStyles-container-1"
  >
    <WithStyles(ForwardRef(Button))
      className="makeStyles-summary-5"
      data-testid="permissions-dropdown-button"
      endIcon={<Memo(KeyboardArrowDownIcon) />}
      onClick={[Function]}
    >
      <ForwardRef(Button)
        className="makeStyles-summary-5"
        classes={
          Object {
            "colorInherit": "MuiButton-colorInherit",
            "contained": "MuiButton-contained",
            "containedPrimary": "MuiButton-containedPrimary",
            "containedSecondary": "MuiButton-containedSecondary",
            "containedSizeLarge": "MuiButton-containedSizeLarge",
            "containedSizeSmall": "MuiButton-containedSizeSmall",
            "disableElevation": "MuiButton-disableElevation",
            "disabled": "Mui-disabled",
            "endIcon": "MuiButton-endIcon",
            "focusVisible": "Mui-focusVisible",
            "fullWidth": "MuiButton-fullWidth",
            "iconSizeLarge": "MuiButton-iconSizeLarge",
            "iconSizeMedium": "MuiButton-iconSizeMedium",
            "iconSizeSmall": "MuiButton-iconSizeSmall",
            "label": "MuiButton-label",
            "outlined": "MuiButton-outlined",
            "outlinedPrimary": "MuiButton-outlinedPrimary",
            "outlinedSecondary": "MuiButton-outlinedSecondary",
            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
            "root": "MuiButton-root",
            "sizeLarge": "MuiButton-sizeLarge",
            "sizeSmall": "MuiButton-sizeSmall",
            "startIcon": "MuiButton-startIcon",
            "text": "MuiButton-text",
            "textPrimary": "MuiButton-textPrimary",
            "textSecondary": "MuiButton-textSecondary",
            "textSizeLarge": "MuiButton-textSizeLarge",
            "textSizeSmall": "MuiButton-textSizeSmall",
          }
        }
        data-testid="permissions-dropdown-button"
        endIcon={<Memo(KeyboardArrowDownIcon) />}
        onClick={[Function]}
      >
        <WithStyles(ForwardRef(ButtonBase))
          className="MuiButton-root MuiButton-text makeStyles-summary-5"
          component="button"
          data-testid="permissions-dropdown-button"
          disabled={false}
          focusRipple={true}
          focusVisibleClassName="Mui-focusVisible"
          onClick={[Function]}
          type="button"
        >
          <ForwardRef(ButtonBase)
            className="MuiButton-root MuiButton-text makeStyles-summary-5"
            classes={
              Object {
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "root": "MuiButtonBase-root",
              }
            }
            component="button"
            data-testid="permissions-dropdown-button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="Mui-focusVisible"
            onClick={[Function]}
            type="button"
          >
            <button
              className="MuiButtonBase-root MuiButton-root MuiButton-text makeStyles-summary-5"
              data-testid="permissions-dropdown-button"
              disabled={false}
              onBlur={[Function]}
              onClick={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              tabIndex={0}
              type="button"
            >
              <span
                className="MuiButton-label"
              >
                <span>
                  Control
                </span>
                <span
                  className="MuiButton-endIcon MuiButton-iconSizeMedium"
                >
                  <ForwardRef>
                    <WithStyles(ForwardRef(SvgIcon))>
                      <ForwardRef(SvgIcon)
                        classes={
                          Object {
                            "colorAction": "MuiSvgIcon-colorAction",
                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                            "colorError": "MuiSvgIcon-colorError",
                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                            "root": "MuiSvgIcon-root",
                          }
                        }
                      >
                        <svg
                          aria-hidden={true}
                          className="MuiSvgIcon-root"
                          focusable="false"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                          />
                        </svg>
                      </ForwardRef(SvgIcon)>
                    </WithStyles(ForwardRef(SvgIcon))>
                  </ForwardRef>
                </span>
              </span>
              <WithStyles(memo)
                center={false}
              >
                <ForwardRef(TouchRipple)
                  center={false}
                  classes={
                    Object {
                      "child": "MuiTouchRipple-child",
                      "childLeaving": "MuiTouchRipple-childLeaving",
                      "childPulsate": "MuiTouchRipple-childPulsate",
                      "ripple": "MuiTouchRipple-ripple",
                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                      "root": "MuiTouchRipple-root",
                    }
                  }
                >
                  <span
                    className="MuiTouchRipple-root"
                  >
                    <TransitionGroup
                      childFactory={[Function]}
                      component={null}
                      exit={true}
                    />
                  </span>
                </ForwardRef(TouchRipple)>
              </WithStyles(memo)>
            </button>
          </ForwardRef(ButtonBase)>
        </WithStyles(ForwardRef(ButtonBase))>
      </ForwardRef(Button)>
    </WithStyles(ForwardRef(Button))>
    <section
      className="makeStyles-selectionClosed-3"
    >
      <WithStyles(ForwardRef(List))>
        <ForwardRef(List)
          classes={
            Object {
              "dense": "MuiList-dense",
              "padding": "MuiList-padding",
              "root": "MuiList-root",
              "subheader": "MuiList-subheader",
            }
          }
        >
          <ul
            className="MuiList-root MuiList-padding"
          >
            <PermissionCheckbox
              classes={
                Object {
                  "checkbox": "makeStyles-checkbox-7",
                  "container": "makeStyles-container-1",
                  "label": "makeStyles-label-6",
                  "listItem": "makeStyles-listItem-2",
                  "selectionClosed": "makeStyles-selectionClosed-3",
                  "selectionOpen": "makeStyles-selectionOpen-4",
                  "summary": "makeStyles-summary-5",
                }
              }
              label="View"
              onChange={[Function]}
              value={true}
            >
              <WithStyles(ForwardRef(ListItem))
                className="makeStyles-listItem-9"
              >
                <ForwardRef(ListItem)
                  className="makeStyles-listItem-9"
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                      "button": "MuiListItem-button",
                      "container": "MuiListItem-container",
                      "dense": "MuiListItem-dense",
                      "disabled": "Mui-disabled",
                      "divider": "MuiListItem-divider",
                      "focusVisible": "Mui-focusVisible",
                      "gutters": "MuiListItem-gutters",
                      "root": "MuiListItem-root",
                      "secondaryAction": "MuiListItem-secondaryAction",
                      "selected": "Mui-selected",
                    }
                  }
                >
                  <li
                    className="MuiListItem-root makeStyles-listItem-9 MuiListItem-gutters"
                    disabled={false}
                  >
                    <WithStyles(ForwardRef(FormControlLabel))
                      classes={
                        Object {
                          "label": "makeStyles-label-13",
                        }
                      }
                      control={
                        <WithStyles(ForwardRef(Checkbox))
                          checked={true}
                          classes={
                            Object {
                              "root": "makeStyles-checkbox-14",
                            }
                          }
                          name="view"
                          onChange={[Function]}
                        />
                      }
                      key=".0"
                      label="View"
                    >
                      <ForwardRef(FormControlLabel)
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "label": "MuiFormControlLabel-label makeStyles-label-13",
                            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                            "root": "MuiFormControlLabel-root",
                          }
                        }
                        control={
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="view"
                            onChange={[Function]}
                          />
                        }
                        label="View"
                      >
                        <label
                          className="MuiFormControlLabel-root"
                        >
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="view"
                            onChange={[Function]}
                          >
                            <ForwardRef(Checkbox)
                              checked={true}
                              classes={
                                Object {
                                  "checked": "Mui-checked",
                                  "colorPrimary": "MuiCheckbox-colorPrimary",
                                  "colorSecondary": "MuiCheckbox-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "indeterminate": "MuiCheckbox-indeterminate",
                                  "root": "MuiCheckbox-root makeStyles-checkbox-14",
                                }
                              }
                              name="view"
                              onChange={[Function]}
                            >
                              <WithStyles(ForwardRef(SwitchBase))
                                checked={true}
                                checkedIcon={<Memo />}
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "disabled": "Mui-disabled",
                                    "root": "MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                  }
                                }
                                color="secondary"
                                icon={<Memo />}
                                inputProps={
                                  Object {
                                    "data-indeterminate": false,
                                  }
                                }
                                name="view"
                                onChange={[Function]}
                                type="checkbox"
                              >
                                <ForwardRef(SwitchBase)
                                  checked={true}
                                  checkedIcon={<Memo />}
                                  classes={
                                    Object {
                                      "checked": "PrivateSwitchBase-checked-16 Mui-checked",
                                      "disabled": "PrivateSwitchBase-disabled-17 Mui-disabled",
                                      "input": "PrivateSwitchBase-input-18",
                                      "root": "PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                    }
                                  }
                                  color="secondary"
                                  icon={<Memo />}
                                  inputProps={
                                    Object {
                                      "data-indeterminate": false,
                                    }
                                  }
                                  name="view"
                                  onChange={[Function]}
                                  type="checkbox"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked"
                                    color="secondary"
                                    component="span"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(IconButton)
                                      className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      color="secondary"
                                      component="span"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        centerRipple={true}
                                        className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                        component="span"
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(ButtonBase)
                                          centerRipple={true}
                                          className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          component="span"
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                            onBlur={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <input
                                                checked={true}
                                                className="PrivateSwitchBase-input-18"
                                                data-indeterminate={false}
                                                name="view"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                              <ForwardRef(CheckBoxIcon)>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(CheckBoxIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </span>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                </ForwardRef(SwitchBase)>
                              </WithStyles(ForwardRef(SwitchBase))>
                            </ForwardRef(Checkbox)>
                          </WithStyles(ForwardRef(Checkbox))>
                          <WithStyles(ForwardRef(Typography))
                            className="MuiFormControlLabel-label makeStyles-label-13"
                            component="span"
                          >
                            <ForwardRef(Typography)
                              className="MuiFormControlLabel-label makeStyles-label-13"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              component="span"
                            >
                              <span
                                className="MuiTypography-root MuiFormControlLabel-label makeStyles-label-13 MuiTypography-body1"
                              >
                                View
                              </span>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </label>
                      </ForwardRef(FormControlLabel)>
                    </WithStyles(ForwardRef(FormControlLabel))>
                  </li>
                </ForwardRef(ListItem)>
              </WithStyles(ForwardRef(ListItem))>
            </PermissionCheckbox>
            <PermissionCheckbox
              classes={
                Object {
                  "checkbox": "makeStyles-checkbox-7",
                  "container": "makeStyles-container-1",
                  "label": "makeStyles-label-6",
                  "listItem": "makeStyles-listItem-2",
                  "selectionClosed": "makeStyles-selectionClosed-3",
                  "selectionOpen": "makeStyles-selectionOpen-4",
                  "summary": "makeStyles-summary-5",
                }
              }
              label="Edit"
              onChange={[Function]}
              value={true}
            >
              <WithStyles(ForwardRef(ListItem))
                className="makeStyles-listItem-9"
              >
                <ForwardRef(ListItem)
                  className="makeStyles-listItem-9"
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                      "button": "MuiListItem-button",
                      "container": "MuiListItem-container",
                      "dense": "MuiListItem-dense",
                      "disabled": "Mui-disabled",
                      "divider": "MuiListItem-divider",
                      "focusVisible": "Mui-focusVisible",
                      "gutters": "MuiListItem-gutters",
                      "root": "MuiListItem-root",
                      "secondaryAction": "MuiListItem-secondaryAction",
                      "selected": "Mui-selected",
                    }
                  }
                >
                  <li
                    className="MuiListItem-root makeStyles-listItem-9 MuiListItem-gutters"
                    disabled={false}
                  >
                    <WithStyles(ForwardRef(FormControlLabel))
                      classes={
                        Object {
                          "label": "makeStyles-label-13",
                        }
                      }
                      control={
                        <WithStyles(ForwardRef(Checkbox))
                          checked={true}
                          classes={
                            Object {
                              "root": "makeStyles-checkbox-14",
                            }
                          }
                          name="edit"
                          onChange={[Function]}
                        />
                      }
                      key=".0"
                      label="Edit"
                    >
                      <ForwardRef(FormControlLabel)
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "label": "MuiFormControlLabel-label makeStyles-label-13",
                            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                            "root": "MuiFormControlLabel-root",
                          }
                        }
                        control={
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="edit"
                            onChange={[Function]}
                          />
                        }
                        label="Edit"
                      >
                        <label
                          className="MuiFormControlLabel-root"
                        >
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="edit"
                            onChange={[Function]}
                          >
                            <ForwardRef(Checkbox)
                              checked={true}
                              classes={
                                Object {
                                  "checked": "Mui-checked",
                                  "colorPrimary": "MuiCheckbox-colorPrimary",
                                  "colorSecondary": "MuiCheckbox-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "indeterminate": "MuiCheckbox-indeterminate",
                                  "root": "MuiCheckbox-root makeStyles-checkbox-14",
                                }
                              }
                              name="edit"
                              onChange={[Function]}
                            >
                              <WithStyles(ForwardRef(SwitchBase))
                                checked={true}
                                checkedIcon={<Memo />}
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "disabled": "Mui-disabled",
                                    "root": "MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                  }
                                }
                                color="secondary"
                                icon={<Memo />}
                                inputProps={
                                  Object {
                                    "data-indeterminate": false,
                                  }
                                }
                                name="edit"
                                onChange={[Function]}
                                type="checkbox"
                              >
                                <ForwardRef(SwitchBase)
                                  checked={true}
                                  checkedIcon={<Memo />}
                                  classes={
                                    Object {
                                      "checked": "PrivateSwitchBase-checked-16 Mui-checked",
                                      "disabled": "PrivateSwitchBase-disabled-17 Mui-disabled",
                                      "input": "PrivateSwitchBase-input-18",
                                      "root": "PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                    }
                                  }
                                  color="secondary"
                                  icon={<Memo />}
                                  inputProps={
                                    Object {
                                      "data-indeterminate": false,
                                    }
                                  }
                                  name="edit"
                                  onChange={[Function]}
                                  type="checkbox"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked"
                                    color="secondary"
                                    component="span"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(IconButton)
                                      className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      color="secondary"
                                      component="span"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        centerRipple={true}
                                        className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                        component="span"
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(ButtonBase)
                                          centerRipple={true}
                                          className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          component="span"
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                            onBlur={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <input
                                                checked={true}
                                                className="PrivateSwitchBase-input-18"
                                                data-indeterminate={false}
                                                name="edit"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                              <ForwardRef(CheckBoxIcon)>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(CheckBoxIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </span>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                </ForwardRef(SwitchBase)>
                              </WithStyles(ForwardRef(SwitchBase))>
                            </ForwardRef(Checkbox)>
                          </WithStyles(ForwardRef(Checkbox))>
                          <WithStyles(ForwardRef(Typography))
                            className="MuiFormControlLabel-label makeStyles-label-13"
                            component="span"
                          >
                            <ForwardRef(Typography)
                              className="MuiFormControlLabel-label makeStyles-label-13"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              component="span"
                            >
                              <span
                                className="MuiTypography-root MuiFormControlLabel-label makeStyles-label-13 MuiTypography-body1"
                              >
                                Edit
                              </span>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </label>
                      </ForwardRef(FormControlLabel)>
                    </WithStyles(ForwardRef(FormControlLabel))>
                  </li>
                </ForwardRef(ListItem)>
              </WithStyles(ForwardRef(ListItem))>
            </PermissionCheckbox>
            <PermissionCheckbox
              classes={
                Object {
                  "checkbox": "makeStyles-checkbox-7",
                  "container": "makeStyles-container-1",
                  "label": "makeStyles-label-6",
                  "listItem": "makeStyles-listItem-2",
                  "selectionClosed": "makeStyles-selectionClosed-3",
                  "selectionOpen": "makeStyles-selectionOpen-4",
                  "summary": "makeStyles-summary-5",
                }
              }
              label="Append"
              onChange={[Function]}
              value={true}
            >
              <WithStyles(ForwardRef(ListItem))
                className="makeStyles-listItem-9"
              >
                <ForwardRef(ListItem)
                  className="makeStyles-listItem-9"
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                      "button": "MuiListItem-button",
                      "container": "MuiListItem-container",
                      "dense": "MuiListItem-dense",
                      "disabled": "Mui-disabled",
                      "divider": "MuiListItem-divider",
                      "focusVisible": "Mui-focusVisible",
                      "gutters": "MuiListItem-gutters",
                      "root": "MuiListItem-root",
                      "secondaryAction": "MuiListItem-secondaryAction",
                      "selected": "Mui-selected",
                    }
                  }
                >
                  <li
                    className="MuiListItem-root makeStyles-listItem-9 MuiListItem-gutters"
                    disabled={false}
                  >
                    <WithStyles(ForwardRef(FormControlLabel))
                      classes={
                        Object {
                          "label": "makeStyles-label-13",
                        }
                      }
                      control={
                        <WithStyles(ForwardRef(Checkbox))
                          checked={true}
                          classes={
                            Object {
                              "root": "makeStyles-checkbox-14",
                            }
                          }
                          name="append"
                          onChange={[Function]}
                        />
                      }
                      key=".0"
                      label="Append"
                    >
                      <ForwardRef(FormControlLabel)
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "label": "MuiFormControlLabel-label makeStyles-label-13",
                            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                            "root": "MuiFormControlLabel-root",
                          }
                        }
                        control={
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="append"
                            onChange={[Function]}
                          />
                        }
                        label="Append"
                      >
                        <label
                          className="MuiFormControlLabel-root"
                        >
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="append"
                            onChange={[Function]}
                          >
                            <ForwardRef(Checkbox)
                              checked={true}
                              classes={
                                Object {
                                  "checked": "Mui-checked",
                                  "colorPrimary": "MuiCheckbox-colorPrimary",
                                  "colorSecondary": "MuiCheckbox-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "indeterminate": "MuiCheckbox-indeterminate",
                                  "root": "MuiCheckbox-root makeStyles-checkbox-14",
                                }
                              }
                              name="append"
                              onChange={[Function]}
                            >
                              <WithStyles(ForwardRef(SwitchBase))
                                checked={true}
                                checkedIcon={<Memo />}
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "disabled": "Mui-disabled",
                                    "root": "MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                  }
                                }
                                color="secondary"
                                icon={<Memo />}
                                inputProps={
                                  Object {
                                    "data-indeterminate": false,
                                  }
                                }
                                name="append"
                                onChange={[Function]}
                                type="checkbox"
                              >
                                <ForwardRef(SwitchBase)
                                  checked={true}
                                  checkedIcon={<Memo />}
                                  classes={
                                    Object {
                                      "checked": "PrivateSwitchBase-checked-16 Mui-checked",
                                      "disabled": "PrivateSwitchBase-disabled-17 Mui-disabled",
                                      "input": "PrivateSwitchBase-input-18",
                                      "root": "PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                    }
                                  }
                                  color="secondary"
                                  icon={<Memo />}
                                  inputProps={
                                    Object {
                                      "data-indeterminate": false,
                                    }
                                  }
                                  name="append"
                                  onChange={[Function]}
                                  type="checkbox"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked"
                                    color="secondary"
                                    component="span"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(IconButton)
                                      className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      color="secondary"
                                      component="span"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        centerRipple={true}
                                        className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                        component="span"
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(ButtonBase)
                                          centerRipple={true}
                                          className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          component="span"
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                            onBlur={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <input
                                                checked={true}
                                                className="PrivateSwitchBase-input-18"
                                                data-indeterminate={false}
                                                name="append"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                              <ForwardRef(CheckBoxIcon)>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(CheckBoxIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </span>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                </ForwardRef(SwitchBase)>
                              </WithStyles(ForwardRef(SwitchBase))>
                            </ForwardRef(Checkbox)>
                          </WithStyles(ForwardRef(Checkbox))>
                          <WithStyles(ForwardRef(Typography))
                            className="MuiFormControlLabel-label makeStyles-label-13"
                            component="span"
                          >
                            <ForwardRef(Typography)
                              className="MuiFormControlLabel-label makeStyles-label-13"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              component="span"
                            >
                              <span
                                className="MuiTypography-root MuiFormControlLabel-label makeStyles-label-13 MuiTypography-body1"
                              >
                                Append
                              </span>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </label>
                      </ForwardRef(FormControlLabel)>
                    </WithStyles(ForwardRef(FormControlLabel))>
                  </li>
                </ForwardRef(ListItem)>
              </WithStyles(ForwardRef(ListItem))>
            </PermissionCheckbox>
            <PermissionCheckbox
              classes={
                Object {
                  "checkbox": "makeStyles-checkbox-7",
                  "container": "makeStyles-container-1",
                  "label": "makeStyles-label-6",
                  "listItem": "makeStyles-listItem-2",
                  "selectionClosed": "makeStyles-selectionClosed-3",
                  "selectionOpen": "makeStyles-selectionOpen-4",
                  "summary": "makeStyles-summary-5",
                }
              }
              label="Control"
              onChange={[Function]}
              value={true}
            >
              <WithStyles(ForwardRef(ListItem))
                className="makeStyles-listItem-9"
              >
                <ForwardRef(ListItem)
                  className="makeStyles-listItem-9"
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                      "button": "MuiListItem-button",
                      "container": "MuiListItem-container",
                      "dense": "MuiListItem-dense",
                      "disabled": "Mui-disabled",
                      "divider": "MuiListItem-divider",
                      "focusVisible": "Mui-focusVisible",
                      "gutters": "MuiListItem-gutters",
                      "root": "MuiListItem-root",
                      "secondaryAction": "MuiListItem-secondaryAction",
                      "selected": "Mui-selected",
                    }
                  }
                >
                  <li
                    className="MuiListItem-root makeStyles-listItem-9 MuiListItem-gutters"
                    disabled={false}
                  >
                    <WithStyles(ForwardRef(FormControlLabel))
                      classes={
                        Object {
                          "label": "makeStyles-label-13",
                        }
                      }
                      control={
                        <WithStyles(ForwardRef(Checkbox))
                          checked={true}
                          classes={
                            Object {
                              "root": "makeStyles-checkbox-14",
                            }
                          }
                          name="control"
                          onChange={[Function]}
                        />
                      }
                      key=".0"
                      label="Control"
                    >
                      <ForwardRef(FormControlLabel)
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "label": "MuiFormControlLabel-label makeStyles-label-13",
                            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                            "root": "MuiFormControlLabel-root",
                          }
                        }
                        control={
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="control"
                            onChange={[Function]}
                          />
                        }
                        label="Control"
                      >
                        <label
                          className="MuiFormControlLabel-root"
                        >
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="control"
                            onChange={[Function]}
                          >
                            <ForwardRef(Checkbox)
                              checked={true}
                              classes={
                                Object {
                                  "checked": "Mui-checked",
                                  "colorPrimary": "MuiCheckbox-colorPrimary",
                                  "colorSecondary": "MuiCheckbox-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "indeterminate": "MuiCheckbox-indeterminate",
                                  "root": "MuiCheckbox-root makeStyles-checkbox-14",
                                }
                              }
                              name="control"
                              onChange={[Function]}
                            >
                              <WithStyles(ForwardRef(SwitchBase))
                                checked={true}
                                checkedIcon={<Memo />}
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "disabled": "Mui-disabled",
                                    "root": "MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                  }
                                }
                                color="secondary"
                                icon={<Memo />}
                                inputProps={
                                  Object {
                                    "data-indeterminate": false,
                                  }
                                }
                                name="control"
                                onChange={[Function]}
                                type="checkbox"
                              >
                                <ForwardRef(SwitchBase)
                                  checked={true}
                                  checkedIcon={<Memo />}
                                  classes={
                                    Object {
                                      "checked": "PrivateSwitchBase-checked-16 Mui-checked",
                                      "disabled": "PrivateSwitchBase-disabled-17 Mui-disabled",
                                      "input": "PrivateSwitchBase-input-18",
                                      "root": "PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                    }
                                  }
                                  color="secondary"
                                  icon={<Memo />}
                                  inputProps={
                                    Object {
                                      "data-indeterminate": false,
                                    }
                                  }
                                  name="control"
                                  onChange={[Function]}
                                  type="checkbox"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked"
                                    color="secondary"
                                    component="span"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(IconButton)
                                      className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      color="secondary"
                                      component="span"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        centerRipple={true}
                                        className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                        component="span"
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(ButtonBase)
                                          centerRipple={true}
                                          className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          component="span"
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                            onBlur={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <input
                                                checked={true}
                                                className="PrivateSwitchBase-input-18"
                                                data-indeterminate={false}
                                                name="control"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                              <ForwardRef(CheckBoxIcon)>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(CheckBoxIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </span>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                </ForwardRef(SwitchBase)>
                              </WithStyles(ForwardRef(SwitchBase))>
                            </ForwardRef(Checkbox)>
                          </WithStyles(ForwardRef(Checkbox))>
                          <WithStyles(ForwardRef(Typography))
                            className="MuiFormControlLabel-label makeStyles-label-13"
                            component="span"
                          >
                            <ForwardRef(Typography)
                              className="MuiFormControlLabel-label makeStyles-label-13"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              component="span"
                            >
                              <span
                                className="MuiTypography-root MuiFormControlLabel-label makeStyles-label-13 MuiTypography-body1"
                              >
                                Control
                              </span>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </label>
                      </ForwardRef(FormControlLabel)>
                    </WithStyles(ForwardRef(FormControlLabel))>
                  </li>
                </ForwardRef(ListItem)>
              </WithStyles(ForwardRef(ListItem))>
            </PermissionCheckbox>
          </ul>
        </ForwardRef(List)>
      </WithStyles(ForwardRef(List))>
      <WithStyles(ForwardRef(Button))
        onClick={[Function]}
        variant="contained"
      >
        <ForwardRef(Button)
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit",
              "contained": "MuiButton-contained",
              "containedPrimary": "MuiButton-containedPrimary",
              "containedSecondary": "MuiButton-containedSecondary",
              "containedSizeLarge": "MuiButton-containedSizeLarge",
              "containedSizeSmall": "MuiButton-containedSizeSmall",
              "disableElevation": "MuiButton-disableElevation",
              "disabled": "Mui-disabled",
              "endIcon": "MuiButton-endIcon",
              "focusVisible": "Mui-focusVisible",
              "fullWidth": "MuiButton-fullWidth",
              "iconSizeLarge": "MuiButton-iconSizeLarge",
              "iconSizeMedium": "MuiButton-iconSizeMedium",
              "iconSizeSmall": "MuiButton-iconSizeSmall",
              "label": "MuiButton-label",
              "outlined": "MuiButton-outlined",
              "outlinedPrimary": "MuiButton-outlinedPrimary",
              "outlinedSecondary": "MuiButton-outlinedSecondary",
              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
              "root": "MuiButton-root",
              "sizeLarge": "MuiButton-sizeLarge",
              "sizeSmall": "MuiButton-sizeSmall",
              "startIcon": "MuiButton-startIcon",
              "text": "MuiButton-text",
              "textPrimary": "MuiButton-textPrimary",
              "textSecondary": "MuiButton-textSecondary",
              "textSizeLarge": "MuiButton-textSizeLarge",
              "textSizeSmall": "MuiButton-textSizeSmall",
            }
          }
          onClick={[Function]}
          variant="contained"
        >
          <WithStyles(ForwardRef(ButtonBase))
            className="MuiButton-root MuiButton-contained"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="Mui-focusVisible"
            onClick={[Function]}
            type="button"
          >
            <ForwardRef(ButtonBase)
              className="MuiButton-root MuiButton-contained"
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "focusVisible": "Mui-focusVisible",
                  "root": "MuiButtonBase-root",
                }
              }
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              onClick={[Function]}
              type="button"
            >
              <button
                className="MuiButtonBase-root MuiButton-root MuiButton-contained"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex={0}
                type="button"
              >
                <span
                  className="MuiButton-label"
                >
                  Save
                </span>
                <WithStyles(memo)
                  center={false}
                >
                  <ForwardRef(TouchRipple)
                    center={false}
                    classes={
                      Object {
                        "child": "MuiTouchRipple-child",
                        "childLeaving": "MuiTouchRipple-childLeaving",
                        "childPulsate": "MuiTouchRipple-childPulsate",
                        "ripple": "MuiTouchRipple-ripple",
                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                        "root": "MuiTouchRipple-root",
                      }
                    }
                  >
                    <span
                      className="MuiTouchRipple-root"
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        component={null}
                        exit={true}
                      />
                    </span>
                  </ForwardRef(TouchRipple)>
                </WithStyles(memo)>
              </button>
            </ForwardRef(ButtonBase)>
          </WithStyles(ForwardRef(ButtonBase))>
        </ForwardRef(Button)>
      </WithStyles(ForwardRef(Button))>
    </section>
  </div>
</PermissionsForm>
`;

exports[`PermissionsForm arrowIcon it returns the down arrow when open is false 1`] = `
<ForwardRef>
  <WithStyles(ForwardRef(SvgIcon))>
    <ForwardRef(SvgIcon)
      classes={
        Object {
          "colorAction": "MuiSvgIcon-colorAction",
          "colorDisabled": "MuiSvgIcon-colorDisabled",
          "colorError": "MuiSvgIcon-colorError",
          "colorPrimary": "MuiSvgIcon-colorPrimary",
          "colorSecondary": "MuiSvgIcon-colorSecondary",
          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
          "root": "MuiSvgIcon-root",
        }
      }
    >
      <svg
        aria-hidden={true}
        className="MuiSvgIcon-root"
        focusable="false"
        viewBox="0 0 24 24"
      >
        <path
          d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
        />
      </svg>
    </ForwardRef(SvgIcon)>
  </WithStyles(ForwardRef(SvgIcon))>
</ForwardRef>
`;

exports[`PermissionsForm arrowIcon it returns the up arrow when open is true 1`] = `
<ForwardRef>
  <WithStyles(ForwardRef(SvgIcon))>
    <ForwardRef(SvgIcon)
      classes={
        Object {
          "colorAction": "MuiSvgIcon-colorAction",
          "colorDisabled": "MuiSvgIcon-colorDisabled",
          "colorError": "MuiSvgIcon-colorError",
          "colorPrimary": "MuiSvgIcon-colorPrimary",
          "colorSecondary": "MuiSvgIcon-colorSecondary",
          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
          "root": "MuiSvgIcon-root",
        }
      }
    >
      <svg
        aria-hidden={true}
        className="MuiSvgIcon-root"
        focusable="false"
        viewBox="0 0 24 24"
      >
        <path
          d="M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z"
        />
      </svg>
    </ForwardRef(SvgIcon)>
  </WithStyles(ForwardRef(SvgIcon))>
</ForwardRef>
`;

exports[`PermissionsForm it returns null if control is false 1`] = `
<PermissionsForm
  iri="https://mypod.myhost.com"
  onSave={[Function]}
  permission={
    Object {
      "acl": Object {
        "append": true,
        "control": false,
        "read": true,
        "write": true,
      },
      "alias": "Control",
      "profile": Object {
        "webId": "https://mypod.myhost.com/profile/card#me",
      },
      "webId": "https://mypod.myhost.com/profile/card#me",
    }
  }
  warnOnSubmit={false}
>
  <div
    className="makeStyles-container-1"
  >
    <WithStyles(ForwardRef(Button))
      className="makeStyles-summary-5"
      data-testid="permissions-dropdown-button"
      endIcon={<Memo(KeyboardArrowDownIcon) />}
      onClick={[Function]}
    >
      <ForwardRef(Button)
        className="makeStyles-summary-5"
        classes={
          Object {
            "colorInherit": "MuiButton-colorInherit",
            "contained": "MuiButton-contained",
            "containedPrimary": "MuiButton-containedPrimary",
            "containedSecondary": "MuiButton-containedSecondary",
            "containedSizeLarge": "MuiButton-containedSizeLarge",
            "containedSizeSmall": "MuiButton-containedSizeSmall",
            "disableElevation": "MuiButton-disableElevation",
            "disabled": "Mui-disabled",
            "endIcon": "MuiButton-endIcon",
            "focusVisible": "Mui-focusVisible",
            "fullWidth": "MuiButton-fullWidth",
            "iconSizeLarge": "MuiButton-iconSizeLarge",
            "iconSizeMedium": "MuiButton-iconSizeMedium",
            "iconSizeSmall": "MuiButton-iconSizeSmall",
            "label": "MuiButton-label",
            "outlined": "MuiButton-outlined",
            "outlinedPrimary": "MuiButton-outlinedPrimary",
            "outlinedSecondary": "MuiButton-outlinedSecondary",
            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
            "root": "MuiButton-root",
            "sizeLarge": "MuiButton-sizeLarge",
            "sizeSmall": "MuiButton-sizeSmall",
            "startIcon": "MuiButton-startIcon",
            "text": "MuiButton-text",
            "textPrimary": "MuiButton-textPrimary",
            "textSecondary": "MuiButton-textSecondary",
            "textSizeLarge": "MuiButton-textSizeLarge",
            "textSizeSmall": "MuiButton-textSizeSmall",
          }
        }
        data-testid="permissions-dropdown-button"
        endIcon={<Memo(KeyboardArrowDownIcon) />}
        onClick={[Function]}
      >
        <WithStyles(ForwardRef(ButtonBase))
          className="MuiButton-root MuiButton-text makeStyles-summary-5"
          component="button"
          data-testid="permissions-dropdown-button"
          disabled={false}
          focusRipple={true}
          focusVisibleClassName="Mui-focusVisible"
          onClick={[Function]}
          type="button"
        >
          <ForwardRef(ButtonBase)
            className="MuiButton-root MuiButton-text makeStyles-summary-5"
            classes={
              Object {
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "root": "MuiButtonBase-root",
              }
            }
            component="button"
            data-testid="permissions-dropdown-button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="Mui-focusVisible"
            onClick={[Function]}
            type="button"
          >
            <button
              className="MuiButtonBase-root MuiButton-root MuiButton-text makeStyles-summary-5"
              data-testid="permissions-dropdown-button"
              disabled={false}
              onBlur={[Function]}
              onClick={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              tabIndex={0}
              type="button"
            >
              <span
                className="MuiButton-label"
              >
                <span>
                  Edit
                </span>
                <span
                  className="MuiButton-endIcon MuiButton-iconSizeMedium"
                >
                  <ForwardRef>
                    <WithStyles(ForwardRef(SvgIcon))>
                      <ForwardRef(SvgIcon)
                        classes={
                          Object {
                            "colorAction": "MuiSvgIcon-colorAction",
                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                            "colorError": "MuiSvgIcon-colorError",
                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                            "root": "MuiSvgIcon-root",
                          }
                        }
                      >
                        <svg
                          aria-hidden={true}
                          className="MuiSvgIcon-root"
                          focusable="false"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                          />
                        </svg>
                      </ForwardRef(SvgIcon)>
                    </WithStyles(ForwardRef(SvgIcon))>
                  </ForwardRef>
                </span>
              </span>
              <WithStyles(memo)
                center={false}
              >
                <ForwardRef(TouchRipple)
                  center={false}
                  classes={
                    Object {
                      "child": "MuiTouchRipple-child",
                      "childLeaving": "MuiTouchRipple-childLeaving",
                      "childPulsate": "MuiTouchRipple-childPulsate",
                      "ripple": "MuiTouchRipple-ripple",
                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                      "root": "MuiTouchRipple-root",
                    }
                  }
                >
                  <span
                    className="MuiTouchRipple-root"
                  >
                    <TransitionGroup
                      childFactory={[Function]}
                      component={null}
                      exit={true}
                    />
                  </span>
                </ForwardRef(TouchRipple)>
              </WithStyles(memo)>
            </button>
          </ForwardRef(ButtonBase)>
        </WithStyles(ForwardRef(ButtonBase))>
      </ForwardRef(Button)>
    </WithStyles(ForwardRef(Button))>
    <section
      className="makeStyles-selectionClosed-3"
    >
      <WithStyles(ForwardRef(List))>
        <ForwardRef(List)
          classes={
            Object {
              "dense": "MuiList-dense",
              "padding": "MuiList-padding",
              "root": "MuiList-root",
              "subheader": "MuiList-subheader",
            }
          }
        >
          <ul
            className="MuiList-root MuiList-padding"
          >
            <PermissionCheckbox
              classes={
                Object {
                  "checkbox": "makeStyles-checkbox-7",
                  "container": "makeStyles-container-1",
                  "label": "makeStyles-label-6",
                  "listItem": "makeStyles-listItem-2",
                  "selectionClosed": "makeStyles-selectionClosed-3",
                  "selectionOpen": "makeStyles-selectionOpen-4",
                  "summary": "makeStyles-summary-5",
                }
              }
              label="View"
              onChange={[Function]}
              value={true}
            >
              <WithStyles(ForwardRef(ListItem))
                className="makeStyles-listItem-9"
              >
                <ForwardRef(ListItem)
                  className="makeStyles-listItem-9"
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                      "button": "MuiListItem-button",
                      "container": "MuiListItem-container",
                      "dense": "MuiListItem-dense",
                      "disabled": "Mui-disabled",
                      "divider": "MuiListItem-divider",
                      "focusVisible": "Mui-focusVisible",
                      "gutters": "MuiListItem-gutters",
                      "root": "MuiListItem-root",
                      "secondaryAction": "MuiListItem-secondaryAction",
                      "selected": "Mui-selected",
                    }
                  }
                >
                  <li
                    className="MuiListItem-root makeStyles-listItem-9 MuiListItem-gutters"
                    disabled={false}
                  >
                    <WithStyles(ForwardRef(FormControlLabel))
                      classes={
                        Object {
                          "label": "makeStyles-label-13",
                        }
                      }
                      control={
                        <WithStyles(ForwardRef(Checkbox))
                          checked={true}
                          classes={
                            Object {
                              "root": "makeStyles-checkbox-14",
                            }
                          }
                          name="view"
                          onChange={[Function]}
                        />
                      }
                      key=".0"
                      label="View"
                    >
                      <ForwardRef(FormControlLabel)
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "label": "MuiFormControlLabel-label makeStyles-label-13",
                            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                            "root": "MuiFormControlLabel-root",
                          }
                        }
                        control={
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="view"
                            onChange={[Function]}
                          />
                        }
                        label="View"
                      >
                        <label
                          className="MuiFormControlLabel-root"
                        >
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="view"
                            onChange={[Function]}
                          >
                            <ForwardRef(Checkbox)
                              checked={true}
                              classes={
                                Object {
                                  "checked": "Mui-checked",
                                  "colorPrimary": "MuiCheckbox-colorPrimary",
                                  "colorSecondary": "MuiCheckbox-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "indeterminate": "MuiCheckbox-indeterminate",
                                  "root": "MuiCheckbox-root makeStyles-checkbox-14",
                                }
                              }
                              name="view"
                              onChange={[Function]}
                            >
                              <WithStyles(ForwardRef(SwitchBase))
                                checked={true}
                                checkedIcon={<Memo />}
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "disabled": "Mui-disabled",
                                    "root": "MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                  }
                                }
                                color="secondary"
                                icon={<Memo />}
                                inputProps={
                                  Object {
                                    "data-indeterminate": false,
                                  }
                                }
                                name="view"
                                onChange={[Function]}
                                type="checkbox"
                              >
                                <ForwardRef(SwitchBase)
                                  checked={true}
                                  checkedIcon={<Memo />}
                                  classes={
                                    Object {
                                      "checked": "PrivateSwitchBase-checked-16 Mui-checked",
                                      "disabled": "PrivateSwitchBase-disabled-17 Mui-disabled",
                                      "input": "PrivateSwitchBase-input-18",
                                      "root": "PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                    }
                                  }
                                  color="secondary"
                                  icon={<Memo />}
                                  inputProps={
                                    Object {
                                      "data-indeterminate": false,
                                    }
                                  }
                                  name="view"
                                  onChange={[Function]}
                                  type="checkbox"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked"
                                    color="secondary"
                                    component="span"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(IconButton)
                                      className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      color="secondary"
                                      component="span"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        centerRipple={true}
                                        className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                        component="span"
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(ButtonBase)
                                          centerRipple={true}
                                          className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          component="span"
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                            onBlur={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <input
                                                checked={true}
                                                className="PrivateSwitchBase-input-18"
                                                data-indeterminate={false}
                                                name="view"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                              <ForwardRef(CheckBoxIcon)>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(CheckBoxIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </span>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                </ForwardRef(SwitchBase)>
                              </WithStyles(ForwardRef(SwitchBase))>
                            </ForwardRef(Checkbox)>
                          </WithStyles(ForwardRef(Checkbox))>
                          <WithStyles(ForwardRef(Typography))
                            className="MuiFormControlLabel-label makeStyles-label-13"
                            component="span"
                          >
                            <ForwardRef(Typography)
                              className="MuiFormControlLabel-label makeStyles-label-13"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              component="span"
                            >
                              <span
                                className="MuiTypography-root MuiFormControlLabel-label makeStyles-label-13 MuiTypography-body1"
                              >
                                View
                              </span>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </label>
                      </ForwardRef(FormControlLabel)>
                    </WithStyles(ForwardRef(FormControlLabel))>
                  </li>
                </ForwardRef(ListItem)>
              </WithStyles(ForwardRef(ListItem))>
            </PermissionCheckbox>
            <PermissionCheckbox
              classes={
                Object {
                  "checkbox": "makeStyles-checkbox-7",
                  "container": "makeStyles-container-1",
                  "label": "makeStyles-label-6",
                  "listItem": "makeStyles-listItem-2",
                  "selectionClosed": "makeStyles-selectionClosed-3",
                  "selectionOpen": "makeStyles-selectionOpen-4",
                  "summary": "makeStyles-summary-5",
                }
              }
              label="Edit"
              onChange={[Function]}
              value={true}
            >
              <WithStyles(ForwardRef(ListItem))
                className="makeStyles-listItem-9"
              >
                <ForwardRef(ListItem)
                  className="makeStyles-listItem-9"
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                      "button": "MuiListItem-button",
                      "container": "MuiListItem-container",
                      "dense": "MuiListItem-dense",
                      "disabled": "Mui-disabled",
                      "divider": "MuiListItem-divider",
                      "focusVisible": "Mui-focusVisible",
                      "gutters": "MuiListItem-gutters",
                      "root": "MuiListItem-root",
                      "secondaryAction": "MuiListItem-secondaryAction",
                      "selected": "Mui-selected",
                    }
                  }
                >
                  <li
                    className="MuiListItem-root makeStyles-listItem-9 MuiListItem-gutters"
                    disabled={false}
                  >
                    <WithStyles(ForwardRef(FormControlLabel))
                      classes={
                        Object {
                          "label": "makeStyles-label-13",
                        }
                      }
                      control={
                        <WithStyles(ForwardRef(Checkbox))
                          checked={true}
                          classes={
                            Object {
                              "root": "makeStyles-checkbox-14",
                            }
                          }
                          name="edit"
                          onChange={[Function]}
                        />
                      }
                      key=".0"
                      label="Edit"
                    >
                      <ForwardRef(FormControlLabel)
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "label": "MuiFormControlLabel-label makeStyles-label-13",
                            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                            "root": "MuiFormControlLabel-root",
                          }
                        }
                        control={
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="edit"
                            onChange={[Function]}
                          />
                        }
                        label="Edit"
                      >
                        <label
                          className="MuiFormControlLabel-root"
                        >
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="edit"
                            onChange={[Function]}
                          >
                            <ForwardRef(Checkbox)
                              checked={true}
                              classes={
                                Object {
                                  "checked": "Mui-checked",
                                  "colorPrimary": "MuiCheckbox-colorPrimary",
                                  "colorSecondary": "MuiCheckbox-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "indeterminate": "MuiCheckbox-indeterminate",
                                  "root": "MuiCheckbox-root makeStyles-checkbox-14",
                                }
                              }
                              name="edit"
                              onChange={[Function]}
                            >
                              <WithStyles(ForwardRef(SwitchBase))
                                checked={true}
                                checkedIcon={<Memo />}
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "disabled": "Mui-disabled",
                                    "root": "MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                  }
                                }
                                color="secondary"
                                icon={<Memo />}
                                inputProps={
                                  Object {
                                    "data-indeterminate": false,
                                  }
                                }
                                name="edit"
                                onChange={[Function]}
                                type="checkbox"
                              >
                                <ForwardRef(SwitchBase)
                                  checked={true}
                                  checkedIcon={<Memo />}
                                  classes={
                                    Object {
                                      "checked": "PrivateSwitchBase-checked-16 Mui-checked",
                                      "disabled": "PrivateSwitchBase-disabled-17 Mui-disabled",
                                      "input": "PrivateSwitchBase-input-18",
                                      "root": "PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                    }
                                  }
                                  color="secondary"
                                  icon={<Memo />}
                                  inputProps={
                                    Object {
                                      "data-indeterminate": false,
                                    }
                                  }
                                  name="edit"
                                  onChange={[Function]}
                                  type="checkbox"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked"
                                    color="secondary"
                                    component="span"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(IconButton)
                                      className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      color="secondary"
                                      component="span"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        centerRipple={true}
                                        className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                        component="span"
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(ButtonBase)
                                          centerRipple={true}
                                          className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          component="span"
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                            onBlur={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <input
                                                checked={true}
                                                className="PrivateSwitchBase-input-18"
                                                data-indeterminate={false}
                                                name="edit"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                              <ForwardRef(CheckBoxIcon)>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(CheckBoxIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </span>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                </ForwardRef(SwitchBase)>
                              </WithStyles(ForwardRef(SwitchBase))>
                            </ForwardRef(Checkbox)>
                          </WithStyles(ForwardRef(Checkbox))>
                          <WithStyles(ForwardRef(Typography))
                            className="MuiFormControlLabel-label makeStyles-label-13"
                            component="span"
                          >
                            <ForwardRef(Typography)
                              className="MuiFormControlLabel-label makeStyles-label-13"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              component="span"
                            >
                              <span
                                className="MuiTypography-root MuiFormControlLabel-label makeStyles-label-13 MuiTypography-body1"
                              >
                                Edit
                              </span>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </label>
                      </ForwardRef(FormControlLabel)>
                    </WithStyles(ForwardRef(FormControlLabel))>
                  </li>
                </ForwardRef(ListItem)>
              </WithStyles(ForwardRef(ListItem))>
            </PermissionCheckbox>
            <PermissionCheckbox
              classes={
                Object {
                  "checkbox": "makeStyles-checkbox-7",
                  "container": "makeStyles-container-1",
                  "label": "makeStyles-label-6",
                  "listItem": "makeStyles-listItem-2",
                  "selectionClosed": "makeStyles-selectionClosed-3",
                  "selectionOpen": "makeStyles-selectionOpen-4",
                  "summary": "makeStyles-summary-5",
                }
              }
              label="Append"
              onChange={[Function]}
              value={true}
            >
              <WithStyles(ForwardRef(ListItem))
                className="makeStyles-listItem-9"
              >
                <ForwardRef(ListItem)
                  className="makeStyles-listItem-9"
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                      "button": "MuiListItem-button",
                      "container": "MuiListItem-container",
                      "dense": "MuiListItem-dense",
                      "disabled": "Mui-disabled",
                      "divider": "MuiListItem-divider",
                      "focusVisible": "Mui-focusVisible",
                      "gutters": "MuiListItem-gutters",
                      "root": "MuiListItem-root",
                      "secondaryAction": "MuiListItem-secondaryAction",
                      "selected": "Mui-selected",
                    }
                  }
                >
                  <li
                    className="MuiListItem-root makeStyles-listItem-9 MuiListItem-gutters"
                    disabled={false}
                  >
                    <WithStyles(ForwardRef(FormControlLabel))
                      classes={
                        Object {
                          "label": "makeStyles-label-13",
                        }
                      }
                      control={
                        <WithStyles(ForwardRef(Checkbox))
                          checked={true}
                          classes={
                            Object {
                              "root": "makeStyles-checkbox-14",
                            }
                          }
                          name="append"
                          onChange={[Function]}
                        />
                      }
                      key=".0"
                      label="Append"
                    >
                      <ForwardRef(FormControlLabel)
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "label": "MuiFormControlLabel-label makeStyles-label-13",
                            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                            "root": "MuiFormControlLabel-root",
                          }
                        }
                        control={
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="append"
                            onChange={[Function]}
                          />
                        }
                        label="Append"
                      >
                        <label
                          className="MuiFormControlLabel-root"
                        >
                          <WithStyles(ForwardRef(Checkbox))
                            checked={true}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="append"
                            onChange={[Function]}
                          >
                            <ForwardRef(Checkbox)
                              checked={true}
                              classes={
                                Object {
                                  "checked": "Mui-checked",
                                  "colorPrimary": "MuiCheckbox-colorPrimary",
                                  "colorSecondary": "MuiCheckbox-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "indeterminate": "MuiCheckbox-indeterminate",
                                  "root": "MuiCheckbox-root makeStyles-checkbox-14",
                                }
                              }
                              name="append"
                              onChange={[Function]}
                            >
                              <WithStyles(ForwardRef(SwitchBase))
                                checked={true}
                                checkedIcon={<Memo />}
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "disabled": "Mui-disabled",
                                    "root": "MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                  }
                                }
                                color="secondary"
                                icon={<Memo />}
                                inputProps={
                                  Object {
                                    "data-indeterminate": false,
                                  }
                                }
                                name="append"
                                onChange={[Function]}
                                type="checkbox"
                              >
                                <ForwardRef(SwitchBase)
                                  checked={true}
                                  checkedIcon={<Memo />}
                                  classes={
                                    Object {
                                      "checked": "PrivateSwitchBase-checked-16 Mui-checked",
                                      "disabled": "PrivateSwitchBase-disabled-17 Mui-disabled",
                                      "input": "PrivateSwitchBase-input-18",
                                      "root": "PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                    }
                                  }
                                  color="secondary"
                                  icon={<Memo />}
                                  inputProps={
                                    Object {
                                      "data-indeterminate": false,
                                    }
                                  }
                                  name="append"
                                  onChange={[Function]}
                                  type="checkbox"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked"
                                    color="secondary"
                                    component="span"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(IconButton)
                                      className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      color="secondary"
                                      component="span"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        centerRipple={true}
                                        className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                        component="span"
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(ButtonBase)
                                          centerRipple={true}
                                          className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          component="span"
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary PrivateSwitchBase-checked-16 Mui-checked MuiIconButton-colorSecondary"
                                            onBlur={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <input
                                                checked={true}
                                                className="PrivateSwitchBase-input-18"
                                                data-indeterminate={false}
                                                name="append"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                              <ForwardRef(CheckBoxIcon)>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(CheckBoxIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </span>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                </ForwardRef(SwitchBase)>
                              </WithStyles(ForwardRef(SwitchBase))>
                            </ForwardRef(Checkbox)>
                          </WithStyles(ForwardRef(Checkbox))>
                          <WithStyles(ForwardRef(Typography))
                            className="MuiFormControlLabel-label makeStyles-label-13"
                            component="span"
                          >
                            <ForwardRef(Typography)
                              className="MuiFormControlLabel-label makeStyles-label-13"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              component="span"
                            >
                              <span
                                className="MuiTypography-root MuiFormControlLabel-label makeStyles-label-13 MuiTypography-body1"
                              >
                                Append
                              </span>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </label>
                      </ForwardRef(FormControlLabel)>
                    </WithStyles(ForwardRef(FormControlLabel))>
                  </li>
                </ForwardRef(ListItem)>
              </WithStyles(ForwardRef(ListItem))>
            </PermissionCheckbox>
            <PermissionCheckbox
              classes={
                Object {
                  "checkbox": "makeStyles-checkbox-7",
                  "container": "makeStyles-container-1",
                  "label": "makeStyles-label-6",
                  "listItem": "makeStyles-listItem-2",
                  "selectionClosed": "makeStyles-selectionClosed-3",
                  "selectionOpen": "makeStyles-selectionOpen-4",
                  "summary": "makeStyles-summary-5",
                }
              }
              label="Control"
              onChange={[Function]}
              value={false}
            >
              <WithStyles(ForwardRef(ListItem))
                className="makeStyles-listItem-9"
              >
                <ForwardRef(ListItem)
                  className="makeStyles-listItem-9"
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                      "button": "MuiListItem-button",
                      "container": "MuiListItem-container",
                      "dense": "MuiListItem-dense",
                      "disabled": "Mui-disabled",
                      "divider": "MuiListItem-divider",
                      "focusVisible": "Mui-focusVisible",
                      "gutters": "MuiListItem-gutters",
                      "root": "MuiListItem-root",
                      "secondaryAction": "MuiListItem-secondaryAction",
                      "selected": "Mui-selected",
                    }
                  }
                >
                  <li
                    className="MuiListItem-root makeStyles-listItem-9 MuiListItem-gutters"
                    disabled={false}
                  >
                    <WithStyles(ForwardRef(FormControlLabel))
                      classes={
                        Object {
                          "label": "makeStyles-label-13",
                        }
                      }
                      control={
                        <WithStyles(ForwardRef(Checkbox))
                          checked={false}
                          classes={
                            Object {
                              "root": "makeStyles-checkbox-14",
                            }
                          }
                          name="control"
                          onChange={[Function]}
                        />
                      }
                      key=".0"
                      label="Control"
                    >
                      <ForwardRef(FormControlLabel)
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "label": "MuiFormControlLabel-label makeStyles-label-13",
                            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                            "root": "MuiFormControlLabel-root",
                          }
                        }
                        control={
                          <WithStyles(ForwardRef(Checkbox))
                            checked={false}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="control"
                            onChange={[Function]}
                          />
                        }
                        label="Control"
                      >
                        <label
                          className="MuiFormControlLabel-root"
                        >
                          <WithStyles(ForwardRef(Checkbox))
                            checked={false}
                            classes={
                              Object {
                                "root": "makeStyles-checkbox-14",
                              }
                            }
                            name="control"
                            onChange={[Function]}
                          >
                            <ForwardRef(Checkbox)
                              checked={false}
                              classes={
                                Object {
                                  "checked": "Mui-checked",
                                  "colorPrimary": "MuiCheckbox-colorPrimary",
                                  "colorSecondary": "MuiCheckbox-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "indeterminate": "MuiCheckbox-indeterminate",
                                  "root": "MuiCheckbox-root makeStyles-checkbox-14",
                                }
                              }
                              name="control"
                              onChange={[Function]}
                            >
                              <WithStyles(ForwardRef(SwitchBase))
                                checked={false}
                                checkedIcon={<Memo />}
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "disabled": "Mui-disabled",
                                    "root": "MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                  }
                                }
                                color="secondary"
                                icon={<Memo />}
                                inputProps={
                                  Object {
                                    "data-indeterminate": false,
                                  }
                                }
                                name="control"
                                onChange={[Function]}
                                type="checkbox"
                              >
                                <ForwardRef(SwitchBase)
                                  checked={false}
                                  checkedIcon={<Memo />}
                                  classes={
                                    Object {
                                      "checked": "PrivateSwitchBase-checked-16 Mui-checked",
                                      "disabled": "PrivateSwitchBase-disabled-17 Mui-disabled",
                                      "input": "PrivateSwitchBase-input-18",
                                      "root": "PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary",
                                    }
                                  }
                                  color="secondary"
                                  icon={<Memo />}
                                  inputProps={
                                    Object {
                                      "data-indeterminate": false,
                                    }
                                  }
                                  name="control"
                                  onChange={[Function]}
                                  type="checkbox"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary"
                                    color="secondary"
                                    component="span"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(IconButton)
                                      className="PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      color="secondary"
                                      component="span"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      tabIndex={null}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        centerRipple={true}
                                        className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                        component="span"
                                        disabled={false}
                                        focusRipple={true}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(ButtonBase)
                                          centerRipple={true}
                                          className="MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          component="span"
                                          disabled={false}
                                          focusRipple={true}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <span
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-15 MuiCheckbox-root makeStyles-checkbox-14 MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                            onBlur={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={null}
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <input
                                                checked={false}
                                                className="PrivateSwitchBase-input-18"
                                                data-indeterminate={false}
                                                name="control"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                              <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef(CheckBoxOutlineBlankIcon)>
                                            </span>
                                            <WithStyles(memo)
                                              center={true}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </span>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                </ForwardRef(SwitchBase)>
                              </WithStyles(ForwardRef(SwitchBase))>
                            </ForwardRef(Checkbox)>
                          </WithStyles(ForwardRef(Checkbox))>
                          <WithStyles(ForwardRef(Typography))
                            className="MuiFormControlLabel-label makeStyles-label-13"
                            component="span"
                          >
                            <ForwardRef(Typography)
                              className="MuiFormControlLabel-label makeStyles-label-13"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              component="span"
                            >
                              <span
                                className="MuiTypography-root MuiFormControlLabel-label makeStyles-label-13 MuiTypography-body1"
                              >
                                Control
                              </span>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </label>
                      </ForwardRef(FormControlLabel)>
                    </WithStyles(ForwardRef(FormControlLabel))>
                  </li>
                </ForwardRef(ListItem)>
              </WithStyles(ForwardRef(ListItem))>
            </PermissionCheckbox>
          </ul>
        </ForwardRef(List)>
      </WithStyles(ForwardRef(List))>
      <WithStyles(ForwardRef(Button))
        onClick={[Function]}
        variant="contained"
      >
        <ForwardRef(Button)
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit",
              "contained": "MuiButton-contained",
              "containedPrimary": "MuiButton-containedPrimary",
              "containedSecondary": "MuiButton-containedSecondary",
              "containedSizeLarge": "MuiButton-containedSizeLarge",
              "containedSizeSmall": "MuiButton-containedSizeSmall",
              "disableElevation": "MuiButton-disableElevation",
              "disabled": "Mui-disabled",
              "endIcon": "MuiButton-endIcon",
              "focusVisible": "Mui-focusVisible",
              "fullWidth": "MuiButton-fullWidth",
              "iconSizeLarge": "MuiButton-iconSizeLarge",
              "iconSizeMedium": "MuiButton-iconSizeMedium",
              "iconSizeSmall": "MuiButton-iconSizeSmall",
              "label": "MuiButton-label",
              "outlined": "MuiButton-outlined",
              "outlinedPrimary": "MuiButton-outlinedPrimary",
              "outlinedSecondary": "MuiButton-outlinedSecondary",
              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
              "root": "MuiButton-root",
              "sizeLarge": "MuiButton-sizeLarge",
              "sizeSmall": "MuiButton-sizeSmall",
              "startIcon": "MuiButton-startIcon",
              "text": "MuiButton-text",
              "textPrimary": "MuiButton-textPrimary",
              "textSecondary": "MuiButton-textSecondary",
              "textSizeLarge": "MuiButton-textSizeLarge",
              "textSizeSmall": "MuiButton-textSizeSmall",
            }
          }
          onClick={[Function]}
          variant="contained"
        >
          <WithStyles(ForwardRef(ButtonBase))
            className="MuiButton-root MuiButton-contained"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="Mui-focusVisible"
            onClick={[Function]}
            type="button"
          >
            <ForwardRef(ButtonBase)
              className="MuiButton-root MuiButton-contained"
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "focusVisible": "Mui-focusVisible",
                  "root": "MuiButtonBase-root",
                }
              }
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              onClick={[Function]}
              type="button"
            >
              <button
                className="MuiButtonBase-root MuiButton-root MuiButton-contained"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex={0}
                type="button"
              >
                <span
                  className="MuiButton-label"
                >
                  Save
                </span>
                <WithStyles(memo)
                  center={false}
                >
                  <ForwardRef(TouchRipple)
                    center={false}
                    classes={
                      Object {
                        "child": "MuiTouchRipple-child",
                        "childLeaving": "MuiTouchRipple-childLeaving",
                        "childPulsate": "MuiTouchRipple-childPulsate",
                        "ripple": "MuiTouchRipple-ripple",
                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                        "root": "MuiTouchRipple-root",
                      }
                    }
                  >
                    <span
                      className="MuiTouchRipple-root"
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        component={null}
                        exit={true}
                      />
                    </span>
                  </ForwardRef(TouchRipple)>
                </WithStyles(memo)>
              </button>
            </ForwardRef(ButtonBase)>
          </WithStyles(ForwardRef(ButtonBase))>
        </ForwardRef(Button)>
      </WithStyles(ForwardRef(Button))>
    </section>
  </div>
</PermissionsForm>
`;
