// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Permission it renders permissions if given 1`] = `
<WithStyles(ForwardRef(ListItem))
  key="https://somepod.somehost.com/profile#me"
>
  <WithStyles(ForwardRef(Avatar))
    alt={[MockFunction]}
    src="https://somepod.somehost.com/public/photo.jpg"
  />
  <WithStyles(ForwardRef(Typography))>
    <Component />
  </WithStyles(ForwardRef(Typography))>
  <WithStyles(ForwardRef(Typography))
    className="undefined undefined"
  >
    some-alias
  </WithStyles(ForwardRef(Typography))>
</WithStyles(ForwardRef(ListItem))>
`;

exports[`Permission it returns null if given no permissions 1`] = `""`;

exports[`Resource details renders 'no access' if there is an error 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
        "fonts/Roboto/LICENSE.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-Bold.woff2": [Function],
        "fonts/Raleway/Raleway-Regular.woff2": [Function],
        "fonts/Roboto/Roboto-Bold.woff2": [Function],
        "fonts/Roboto/Roboto-Light.woff2": [Function],
        "fonts/Roboto/Roboto-Regular.woff2": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.54)",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:400,700|Roboto:300,400,700&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 300,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 300,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 300,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 400,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "2.5rem",
          "fontWeight": 700,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "2rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "1.9rem",
          "fontWeight": 300,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 900,
          "letterSpacing": "0.00735em",
          "lineHeight": 1,
          "textTransform": "uppercase",
        },
        "h5": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1,
          "textTransform": "uppercase",
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "0.625rem",
          "fontWeight": 300,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 300,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <ResourceDetails
    iri="iri"
    name="Resource Name"
    types={
      Array [
        "Resource",
      ]
    }
  >
    <section
      className="makeStyles-centeredSection-2"
    >
      <h3
        className="makeStyles-content-h3-10"
        title="iri"
      >
        Resource Name
      </h3>
    </section>
    <section
      className="makeStyles-centeredSection-2"
    >
      <h5
        className="makeStyles-content-h5-12"
      >
        Details
      </h5>
    </section>
    <WithStyles(ForwardRef(Divider))>
      <ForwardRef(Divider)
        classes={
          Object {
            "absolute": "MuiDivider-absolute",
            "flexItem": "MuiDivider-flexItem",
            "inset": "MuiDivider-inset",
            "light": "MuiDivider-light",
            "middle": "MuiDivider-middle",
            "root": "MuiDivider-root",
            "vertical": "MuiDivider-vertical",
          }
        }
      >
        <hr
          className="MuiDivider-root"
        />
      </ForwardRef(Divider)>
    </WithStyles(ForwardRef(Divider))>
    <section
      className="makeStyles-centeredSection-2"
    >
      <h5
        className="makeStyles-content-h5-12"
      >
        My Access
      </h5>
      <WithStyles(ForwardRef(List))>
        <ForwardRef(List)
          classes={
            Object {
              "dense": "MuiList-dense",
              "padding": "MuiList-padding",
              "root": "MuiList-root",
              "subheader": "MuiList-subheader",
            }
          }
        >
          <ul
            className="MuiList-root MuiList-padding"
          >
            <Permission
              classes={
                Object {
                  "avatar": "makeStyles-avatar-1",
                  "centeredSection": "makeStyles-centeredSection-2",
                  "content": "makeStyles-content-18",
                  "content-blockquote": "makeStyles-content-blockquote-16",
                  "content-h1": "makeStyles-content-h1-8",
                  "content-h2": "makeStyles-content-h2-9",
                  "content-h3": "makeStyles-content-h3-10",
                  "content-h4": "makeStyles-content-h4-11",
                  "content-h5": "makeStyles-content-h5-12",
                  "content-h6": "makeStyles-content-h6-13",
                  "content-ol": "makeStyles-content-ol-15",
                  "content-p": "makeStyles-content-p-17",
                  "content-ul": "makeStyles-content-ul-14",
                  "detailText": "makeStyles-detailText-5",
                  "image": "makeStyles-image-7",
                  "listItem": "makeStyles-listItem-4",
                  "raw": "makeStyles-raw-3",
                  "typeValue": "makeStyles-typeValue-6",
                }
              }
              permission={null}
            />
          </ul>
        </ForwardRef(List)>
      </WithStyles(ForwardRef(List))>
    </section>
    <ThirdPartyPermissions
      classes={
        Object {
          "avatar": "makeStyles-avatar-1",
          "centeredSection": "makeStyles-centeredSection-2",
          "content": "makeStyles-content-18",
          "content-blockquote": "makeStyles-content-blockquote-16",
          "content-h1": "makeStyles-content-h1-8",
          "content-h2": "makeStyles-content-h2-9",
          "content-h3": "makeStyles-content-h3-10",
          "content-h4": "makeStyles-content-h4-11",
          "content-h5": "makeStyles-content-h5-12",
          "content-h6": "makeStyles-content-h6-13",
          "content-ol": "makeStyles-content-ol-15",
          "content-p": "makeStyles-content-p-17",
          "content-ul": "makeStyles-content-ul-14",
          "detailText": "makeStyles-detailText-5",
          "image": "makeStyles-image-7",
          "listItem": "makeStyles-listItem-4",
          "raw": "makeStyles-raw-3",
          "typeValue": "makeStyles-typeValue-6",
        }
      }
      thirdPartyPermissions={Array []}
    >
      <section
        className="makeStyles-centeredSection-2"
      >
        <h5
          className="makeStyles-content-h5-12"
        >
          Sharing
        </h5>
        <WithStyles(ForwardRef(List))>
          <ForwardRef(List)
            classes={
              Object {
                "dense": "MuiList-dense",
                "padding": "MuiList-padding",
                "root": "MuiList-root",
                "subheader": "MuiList-subheader",
              }
            }
          >
            <ul
              className="MuiList-root MuiList-padding"
            >
              <WithStyles(ForwardRef(ListItem))
                className="makeStyles-listItem-4"
              >
                <ForwardRef(ListItem)
                  className="makeStyles-listItem-4"
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                      "button": "MuiListItem-button",
                      "container": "MuiListItem-container",
                      "dense": "MuiListItem-dense",
                      "disabled": "Mui-disabled",
                      "divider": "MuiListItem-divider",
                      "focusVisible": "Mui-focusVisible",
                      "gutters": "MuiListItem-gutters",
                      "root": "MuiListItem-root",
                      "secondaryAction": "MuiListItem-secondaryAction",
                      "selected": "Mui-selected",
                    }
                  }
                >
                  <li
                    className="MuiListItem-root makeStyles-listItem-4 MuiListItem-gutters"
                    disabled={false}
                  >
                    <WithStyles(ForwardRef(Typography))
                      className="makeStyles-detailText-5"
                      key=".0"
                    >
                      <ForwardRef(Typography)
                        className="makeStyles-detailText-5"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                      >
                        <p
                          className="MuiTypography-root makeStyles-detailText-5 MuiTypography-body1"
                        >
                          No 3rd party access
                        </p>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </li>
                </ForwardRef(ListItem)>
              </WithStyles(ForwardRef(ListItem))>
            </ul>
          </ForwardRef(List)>
        </WithStyles(ForwardRef(List))>
      </section>
    </ThirdPartyPermissions>
    <WithStyles(ForwardRef(Divider))>
      <ForwardRef(Divider)
        classes={
          Object {
            "absolute": "MuiDivider-absolute",
            "flexItem": "MuiDivider-flexItem",
            "inset": "MuiDivider-inset",
            "light": "MuiDivider-light",
            "middle": "MuiDivider-middle",
            "root": "MuiDivider-root",
            "vertical": "MuiDivider-vertical",
          }
        }
      >
        <hr
          className="MuiDivider-root"
        />
      </ForwardRef(Divider)>
    </WithStyles(ForwardRef(Divider))>
    <section
      className="makeStyles-centeredSection-2"
    >
      <WithStyles(ForwardRef(List))>
        <ForwardRef(List)
          classes={
            Object {
              "dense": "MuiList-dense",
              "padding": "MuiList-padding",
              "root": "MuiList-root",
              "subheader": "MuiList-subheader",
            }
          }
        >
          <ul
            className="MuiList-root MuiList-padding"
          >
            <WithStyles(ForwardRef(ListItem))
              className="makeStyles-listItem-4"
            >
              <ForwardRef(ListItem)
                className="makeStyles-listItem-4"
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
              >
                <li
                  className="MuiListItem-root makeStyles-listItem-4 MuiListItem-gutters"
                  disabled={false}
                >
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-detailText-5"
                    key=".0"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-detailText-5"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                    >
                      <p
                        className="MuiTypography-root makeStyles-detailText-5 MuiTypography-body1"
                      >
                        Thing Type:
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-typeValue-6 makeStyles-detailText-5"
                    key=".1"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-typeValue-6 makeStyles-detailText-5"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                    >
                      <p
                        className="MuiTypography-root makeStyles-typeValue-6 makeStyles-detailText-5 MuiTypography-body1"
                      >
                        Resource
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                </li>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
          </ul>
        </ForwardRef(List)>
      </WithStyles(ForwardRef(List))>
    </section>
    <WithStyles(ForwardRef(Divider))>
      <ForwardRef(Divider)
        classes={
          Object {
            "absolute": "MuiDivider-absolute",
            "flexItem": "MuiDivider-flexItem",
            "inset": "MuiDivider-inset",
            "light": "MuiDivider-light",
            "middle": "MuiDivider-middle",
            "root": "MuiDivider-root",
            "vertical": "MuiDivider-vertical",
          }
        }
      >
        <hr
          className="MuiDivider-root"
        />
      </ForwardRef(Divider)>
    </WithStyles(ForwardRef(Divider))>
    <section
      className="makeStyles-centeredSection-2"
    >
      <WithStyles(ForwardRef(Button))
        onClick={[Function]}
        variant="contained"
      >
        <ForwardRef(Button)
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit",
              "contained": "MuiButton-contained",
              "containedPrimary": "MuiButton-containedPrimary",
              "containedSecondary": "MuiButton-containedSecondary",
              "containedSizeLarge": "MuiButton-containedSizeLarge",
              "containedSizeSmall": "MuiButton-containedSizeSmall",
              "disableElevation": "MuiButton-disableElevation",
              "disabled": "Mui-disabled",
              "endIcon": "MuiButton-endIcon",
              "focusVisible": "Mui-focusVisible",
              "fullWidth": "MuiButton-fullWidth",
              "iconSizeLarge": "MuiButton-iconSizeLarge",
              "iconSizeMedium": "MuiButton-iconSizeMedium",
              "iconSizeSmall": "MuiButton-iconSizeSmall",
              "label": "MuiButton-label",
              "outlined": "MuiButton-outlined",
              "outlinedPrimary": "MuiButton-outlinedPrimary",
              "outlinedSecondary": "MuiButton-outlinedSecondary",
              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
              "root": "MuiButton-root",
              "sizeLarge": "MuiButton-sizeLarge",
              "sizeSmall": "MuiButton-sizeSmall",
              "startIcon": "MuiButton-startIcon",
              "text": "MuiButton-text",
              "textPrimary": "MuiButton-textPrimary",
              "textSecondary": "MuiButton-textSecondary",
              "textSizeLarge": "MuiButton-textSizeLarge",
              "textSizeSmall": "MuiButton-textSizeSmall",
            }
          }
          onClick={[Function]}
          variant="contained"
        >
          <WithStyles(ForwardRef(ButtonBase))
            className="MuiButton-root MuiButton-contained"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="Mui-focusVisible"
            onClick={[Function]}
            type="button"
          >
            <ForwardRef(ButtonBase)
              className="MuiButton-root MuiButton-contained"
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "focusVisible": "Mui-focusVisible",
                  "root": "MuiButtonBase-root",
                }
              }
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              onClick={[Function]}
              type="button"
            >
              <button
                className="MuiButtonBase-root MuiButton-root MuiButton-contained"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex={0}
                type="button"
              >
                <span
                  className="MuiButton-label"
                >
                  Download
                </span>
                <WithStyles(memo)
                  center={false}
                >
                  <ForwardRef(TouchRipple)
                    center={false}
                    classes={
                      Object {
                        "child": "MuiTouchRipple-child",
                        "childLeaving": "MuiTouchRipple-childLeaving",
                        "childPulsate": "MuiTouchRipple-childPulsate",
                        "ripple": "MuiTouchRipple-ripple",
                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                        "root": "MuiTouchRipple-root",
                      }
                    }
                  >
                    <span
                      className="MuiTouchRipple-root"
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        component={null}
                        exit={true}
                      />
                    </span>
                  </ForwardRef(TouchRipple)>
                </WithStyles(memo)>
              </button>
            </ForwardRef(ButtonBase)>
          </WithStyles(ForwardRef(ButtonBase))>
        </ForwardRef(Button)>
      </WithStyles(ForwardRef(Button))>
    </section>
  </ResourceDetails>
</ThemeProvider>
`;

exports[`Resource details renders loading if there is no data or error 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
        "fonts/Roboto/LICENSE.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-Bold.woff2": [Function],
        "fonts/Raleway/Raleway-Regular.woff2": [Function],
        "fonts/Roboto/Roboto-Bold.woff2": [Function],
        "fonts/Roboto/Roboto-Light.woff2": [Function],
        "fonts/Roboto/Roboto-Regular.woff2": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.54)",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:400,700|Roboto:300,400,700&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 300,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 300,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 300,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 400,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "2.5rem",
          "fontWeight": 700,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "2rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "1.9rem",
          "fontWeight": 300,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 900,
          "letterSpacing": "0.00735em",
          "lineHeight": 1,
          "textTransform": "uppercase",
        },
        "h5": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1,
          "textTransform": "uppercase",
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "0.625rem",
          "fontWeight": 300,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 300,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <ResourceDetails
    iri="iri"
    name="Resource Name"
    types={
      Array [
        "Resource",
      ]
    }
  >
    <DetailsLoading
      resource={
        Object {
          "iri": "iri",
          "name": "Resource Name",
          "types": Array [
            "Resource",
          ],
        }
      }
    >
      <section
        className="makeStyles-centeredSection-20"
      >
        <h3
          className="makeStyles-content-h3-29"
          title="iri"
        >
          Resource Name
        </h3>
      </section>
      <section
        className="makeStyles-centeredSection-20"
      >
        <h5
          className="makeStyles-content-h5-31"
        >
          Details
        </h5>
      </section>
      <WithStyles(ForwardRef(Divider))>
        <ForwardRef(Divider)
          classes={
            Object {
              "absolute": "MuiDivider-absolute",
              "flexItem": "MuiDivider-flexItem",
              "inset": "MuiDivider-inset",
              "light": "MuiDivider-light",
              "middle": "MuiDivider-middle",
              "root": "MuiDivider-root",
              "vertical": "MuiDivider-vertical",
            }
          }
        >
          <hr
            className="MuiDivider-root"
          />
        </ForwardRef(Divider)>
      </WithStyles(ForwardRef(Divider))>
      <section
        className="makeStyles-centeredSection-20"
      >
        <h5
          className="makeStyles-content-h5-31"
        >
          My Access
        </h5>
        <WithStyles(ForwardRef(List))>
          <ForwardRef(List)
            classes={
              Object {
                "dense": "MuiList-dense",
                "padding": "MuiList-padding",
                "root": "MuiList-root",
                "subheader": "MuiList-subheader",
              }
            }
          >
            <ul
              className="MuiList-root MuiList-padding"
            >
              <WithStyles(ForwardRef(ListItem))
                className="makeStyles-listItem-22"
              >
                <ForwardRef(ListItem)
                  className="makeStyles-listItem-22"
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                      "button": "MuiListItem-button",
                      "container": "MuiListItem-container",
                      "dense": "MuiListItem-dense",
                      "disabled": "Mui-disabled",
                      "divider": "MuiListItem-divider",
                      "focusVisible": "Mui-focusVisible",
                      "gutters": "MuiListItem-gutters",
                      "root": "MuiListItem-root",
                      "secondaryAction": "MuiListItem-secondaryAction",
                      "selected": "Mui-selected",
                    }
                  }
                >
                  <li
                    className="MuiListItem-root makeStyles-listItem-22 MuiListItem-gutters"
                    disabled={false}
                  >
                    <WithStyles(ForwardRef(Skeleton))
                      className="makeStyles-avatar-25"
                      height={40}
                      key=".0"
                      variant="circle"
                      width={45}
                    >
                      <ForwardRef(Skeleton)
                        className="makeStyles-avatar-25"
                        classes={
                          Object {
                            "circle": "MuiSkeleton-circle",
                            "fitContent": "MuiSkeleton-fitContent",
                            "heightAuto": "MuiSkeleton-heightAuto",
                            "pulse": "MuiSkeleton-pulse",
                            "rect": "MuiSkeleton-rect",
                            "root": "MuiSkeleton-root",
                            "text": "MuiSkeleton-text",
                            "wave": "MuiSkeleton-wave",
                            "withChildren": "MuiSkeleton-withChildren",
                          }
                        }
                        height={40}
                        variant="circle"
                        width={45}
                      >
                        <span
                          className="MuiSkeleton-root MuiSkeleton-circle makeStyles-avatar-25 MuiSkeleton-pulse"
                          style={
                            Object {
                              "height": 40,
                              "width": 45,
                            }
                          }
                        />
                      </ForwardRef(Skeleton)>
                    </WithStyles(ForwardRef(Skeleton))>
                    <WithStyles(ForwardRef(Skeleton))
                      key=".1"
                      variant="text"
                      width="100%"
                    >
                      <ForwardRef(Skeleton)
                        classes={
                          Object {
                            "circle": "MuiSkeleton-circle",
                            "fitContent": "MuiSkeleton-fitContent",
                            "heightAuto": "MuiSkeleton-heightAuto",
                            "pulse": "MuiSkeleton-pulse",
                            "rect": "MuiSkeleton-rect",
                            "root": "MuiSkeleton-root",
                            "text": "MuiSkeleton-text",
                            "wave": "MuiSkeleton-wave",
                            "withChildren": "MuiSkeleton-withChildren",
                          }
                        }
                        variant="text"
                        width="100%"
                      >
                        <span
                          className="MuiSkeleton-root MuiSkeleton-text MuiSkeleton-pulse"
                          style={
                            Object {
                              "height": undefined,
                              "width": "100%",
                            }
                          }
                        />
                      </ForwardRef(Skeleton)>
                    </WithStyles(ForwardRef(Skeleton))>
                  </li>
                </ForwardRef(ListItem)>
              </WithStyles(ForwardRef(ListItem))>
            </ul>
          </ForwardRef(List)>
        </WithStyles(ForwardRef(List))>
      </section>
      <section
        className="makeStyles-centeredSection-20"
      >
        <h5
          className="makeStyles-content-h5-31"
        >
          Sharing
        </h5>
        <WithStyles(ForwardRef(List))>
          <ForwardRef(List)
            classes={
              Object {
                "dense": "MuiList-dense",
                "padding": "MuiList-padding",
                "root": "MuiList-root",
                "subheader": "MuiList-subheader",
              }
            }
          >
            <ul
              className="MuiList-root MuiList-padding"
            >
              <WithStyles(ForwardRef(ListItem))
                className="makeStyles-listItem-22"
              >
                <ForwardRef(ListItem)
                  className="makeStyles-listItem-22"
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                      "button": "MuiListItem-button",
                      "container": "MuiListItem-container",
                      "dense": "MuiListItem-dense",
                      "disabled": "Mui-disabled",
                      "divider": "MuiListItem-divider",
                      "focusVisible": "Mui-focusVisible",
                      "gutters": "MuiListItem-gutters",
                      "root": "MuiListItem-root",
                      "secondaryAction": "MuiListItem-secondaryAction",
                      "selected": "Mui-selected",
                    }
                  }
                >
                  <li
                    className="MuiListItem-root makeStyles-listItem-22 MuiListItem-gutters"
                    disabled={false}
                  >
                    <WithStyles(ForwardRef(Skeleton))
                      className="makeStyles-avatar-25"
                      height={40}
                      key=".0"
                      variant="circle"
                      width={45}
                    >
                      <ForwardRef(Skeleton)
                        className="makeStyles-avatar-25"
                        classes={
                          Object {
                            "circle": "MuiSkeleton-circle",
                            "fitContent": "MuiSkeleton-fitContent",
                            "heightAuto": "MuiSkeleton-heightAuto",
                            "pulse": "MuiSkeleton-pulse",
                            "rect": "MuiSkeleton-rect",
                            "root": "MuiSkeleton-root",
                            "text": "MuiSkeleton-text",
                            "wave": "MuiSkeleton-wave",
                            "withChildren": "MuiSkeleton-withChildren",
                          }
                        }
                        height={40}
                        variant="circle"
                        width={45}
                      >
                        <span
                          className="MuiSkeleton-root MuiSkeleton-circle makeStyles-avatar-25 MuiSkeleton-pulse"
                          style={
                            Object {
                              "height": 40,
                              "width": 45,
                            }
                          }
                        />
                      </ForwardRef(Skeleton)>
                    </WithStyles(ForwardRef(Skeleton))>
                    <WithStyles(ForwardRef(Skeleton))
                      key=".1"
                      variant="text"
                      width="100%"
                    >
                      <ForwardRef(Skeleton)
                        classes={
                          Object {
                            "circle": "MuiSkeleton-circle",
                            "fitContent": "MuiSkeleton-fitContent",
                            "heightAuto": "MuiSkeleton-heightAuto",
                            "pulse": "MuiSkeleton-pulse",
                            "rect": "MuiSkeleton-rect",
                            "root": "MuiSkeleton-root",
                            "text": "MuiSkeleton-text",
                            "wave": "MuiSkeleton-wave",
                            "withChildren": "MuiSkeleton-withChildren",
                          }
                        }
                        variant="text"
                        width="100%"
                      >
                        <span
                          className="MuiSkeleton-root MuiSkeleton-text MuiSkeleton-pulse"
                          style={
                            Object {
                              "height": undefined,
                              "width": "100%",
                            }
                          }
                        />
                      </ForwardRef(Skeleton)>
                    </WithStyles(ForwardRef(Skeleton))>
                  </li>
                </ForwardRef(ListItem)>
              </WithStyles(ForwardRef(ListItem))>
            </ul>
          </ForwardRef(List)>
        </WithStyles(ForwardRef(List))>
      </section>
      <WithStyles(ForwardRef(Divider))>
        <ForwardRef(Divider)
          classes={
            Object {
              "absolute": "MuiDivider-absolute",
              "flexItem": "MuiDivider-flexItem",
              "inset": "MuiDivider-inset",
              "light": "MuiDivider-light",
              "middle": "MuiDivider-middle",
              "root": "MuiDivider-root",
              "vertical": "MuiDivider-vertical",
            }
          }
        >
          <hr
            className="MuiDivider-root"
          />
        </ForwardRef(Divider)>
      </WithStyles(ForwardRef(Divider))>
      <section
        className="makeStyles-centeredSection-20"
      >
        <WithStyles(ForwardRef(List))>
          <ForwardRef(List)
            classes={
              Object {
                "dense": "MuiList-dense",
                "padding": "MuiList-padding",
                "root": "MuiList-root",
                "subheader": "MuiList-subheader",
              }
            }
          >
            <ul
              className="MuiList-root MuiList-padding"
            >
              <WithStyles(ForwardRef(ListItem))
                className="makeStyles-listItem-22"
              >
                <ForwardRef(ListItem)
                  className="makeStyles-listItem-22"
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                      "button": "MuiListItem-button",
                      "container": "MuiListItem-container",
                      "dense": "MuiListItem-dense",
                      "disabled": "Mui-disabled",
                      "divider": "MuiListItem-divider",
                      "focusVisible": "Mui-focusVisible",
                      "gutters": "MuiListItem-gutters",
                      "root": "MuiListItem-root",
                      "secondaryAction": "MuiListItem-secondaryAction",
                      "selected": "Mui-selected",
                    }
                  }
                >
                  <li
                    className="MuiListItem-root makeStyles-listItem-22 MuiListItem-gutters"
                    disabled={false}
                  >
                    <WithStyles(ForwardRef(Typography))
                      className="makeStyles-detailText-23"
                      key=".0"
                    >
                      <ForwardRef(Typography)
                        className="makeStyles-detailText-23"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                      >
                        <p
                          className="MuiTypography-root makeStyles-detailText-23 MuiTypography-body1"
                        >
                          Thing Type:
                        </p>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                    <WithStyles(ForwardRef(Skeleton))
                      key=".1"
                      variant="text"
                      width="50%"
                    >
                      <ForwardRef(Skeleton)
                        classes={
                          Object {
                            "circle": "MuiSkeleton-circle",
                            "fitContent": "MuiSkeleton-fitContent",
                            "heightAuto": "MuiSkeleton-heightAuto",
                            "pulse": "MuiSkeleton-pulse",
                            "rect": "MuiSkeleton-rect",
                            "root": "MuiSkeleton-root",
                            "text": "MuiSkeleton-text",
                            "wave": "MuiSkeleton-wave",
                            "withChildren": "MuiSkeleton-withChildren",
                          }
                        }
                        variant="text"
                        width="50%"
                      >
                        <span
                          className="MuiSkeleton-root MuiSkeleton-text MuiSkeleton-pulse"
                          style={
                            Object {
                              "height": undefined,
                              "width": "50%",
                            }
                          }
                        />
                      </ForwardRef(Skeleton)>
                    </WithStyles(ForwardRef(Skeleton))>
                  </li>
                </ForwardRef(ListItem)>
              </WithStyles(ForwardRef(ListItem))>
            </ul>
          </ForwardRef(List)>
        </WithStyles(ForwardRef(List))>
      </section>
    </DetailsLoading>
  </ResourceDetails>
</ThemeProvider>
`;

exports[`Resource details renders no 3rd party access message 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
        "fonts/Roboto/LICENSE.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-Bold.woff2": [Function],
        "fonts/Raleway/Raleway-Regular.woff2": [Function],
        "fonts/Roboto/Roboto-Bold.woff2": [Function],
        "fonts/Roboto/Roboto-Light.woff2": [Function],
        "fonts/Roboto/Roboto-Regular.woff2": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.54)",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:400,700|Roboto:300,400,700&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 300,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 300,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 300,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 400,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "2.5rem",
          "fontWeight": 700,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "2rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "1.9rem",
          "fontWeight": 300,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 900,
          "letterSpacing": "0.00735em",
          "lineHeight": 1,
          "textTransform": "uppercase",
        },
        "h5": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1,
          "textTransform": "uppercase",
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "0.625rem",
          "fontWeight": 300,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 300,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <ResourceDetails
    iri="iri"
    name="Resource Name"
    types={
      Array [
        "Resource",
      ]
    }
  >
    <section
      className="makeStyles-centeredSection-2"
    >
      <h3
        className="makeStyles-content-h3-10"
        title="iri"
      >
        Resource Name
      </h3>
    </section>
    <section
      className="makeStyles-centeredSection-2"
    >
      <h5
        className="makeStyles-content-h5-12"
      >
        Details
      </h5>
    </section>
    <WithStyles(ForwardRef(Divider))>
      <ForwardRef(Divider)
        classes={
          Object {
            "absolute": "MuiDivider-absolute",
            "flexItem": "MuiDivider-flexItem",
            "inset": "MuiDivider-inset",
            "light": "MuiDivider-light",
            "middle": "MuiDivider-middle",
            "root": "MuiDivider-root",
            "vertical": "MuiDivider-vertical",
          }
        }
      >
        <hr
          className="MuiDivider-root"
        />
      </ForwardRef(Divider)>
    </WithStyles(ForwardRef(Divider))>
    <section
      className="makeStyles-centeredSection-2"
    >
      <h5
        className="makeStyles-content-h5-12"
      >
        My Access
      </h5>
      <WithStyles(ForwardRef(List))>
        <ForwardRef(List)
          classes={
            Object {
              "dense": "MuiList-dense",
              "padding": "MuiList-padding",
              "root": "MuiList-root",
              "subheader": "MuiList-subheader",
            }
          }
        >
          <ul
            className="MuiList-root MuiList-padding"
          >
            <Permission
              classes={
                Object {
                  "avatar": "makeStyles-avatar-1",
                  "centeredSection": "makeStyles-centeredSection-2",
                  "content": "makeStyles-content-18",
                  "content-blockquote": "makeStyles-content-blockquote-16",
                  "content-h1": "makeStyles-content-h1-8",
                  "content-h2": "makeStyles-content-h2-9",
                  "content-h3": "makeStyles-content-h3-10",
                  "content-h4": "makeStyles-content-h4-11",
                  "content-h5": "makeStyles-content-h5-12",
                  "content-h6": "makeStyles-content-h6-13",
                  "content-ol": "makeStyles-content-ol-15",
                  "content-p": "makeStyles-content-p-17",
                  "content-ul": "makeStyles-content-ul-14",
                  "detailText": "makeStyles-detailText-5",
                  "image": "makeStyles-image-7",
                  "listItem": "makeStyles-listItem-4",
                  "raw": "makeStyles-raw-3",
                  "typeValue": "makeStyles-typeValue-6",
                }
              }
              permission={
                Object {
                  "acl": Object {
                    "append": true,
                    "control": true,
                    "read": true,
                    "write": true,
                  },
                  "alias": "Full Control",
                  "profile": Object {
                    "avatar": "http://example.com/avatar.png",
                    "name": "Test Person",
                    "nickname": "owner",
                  },
                  "webId": "owner",
                }
              }
            >
              <WithStyles(ForwardRef(ListItem))
                className="makeStyles-listItem-4"
                key="owner"
              >
                <ForwardRef(ListItem)
                  className="makeStyles-listItem-4"
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                      "button": "MuiListItem-button",
                      "container": "MuiListItem-container",
                      "dense": "MuiListItem-dense",
                      "disabled": "Mui-disabled",
                      "divider": "MuiListItem-divider",
                      "focusVisible": "Mui-focusVisible",
                      "gutters": "MuiListItem-gutters",
                      "root": "MuiListItem-root",
                      "secondaryAction": "MuiListItem-secondaryAction",
                      "selected": "Mui-selected",
                    }
                  }
                >
                  <li
                    className="MuiListItem-root makeStyles-listItem-4 MuiListItem-gutters"
                    disabled={false}
                  >
                    <WithStyles(ForwardRef(Avatar))
                      alt="Test Person"
                      className="makeStyles-avatar-1"
                      key=".0"
                      src="http://example.com/avatar.png"
                    >
                      <ForwardRef(Avatar)
                        alt="Test Person"
                        className="makeStyles-avatar-1"
                        classes={
                          Object {
                            "circle": "MuiAvatar-circle",
                            "colorDefault": "MuiAvatar-colorDefault",
                            "fallback": "MuiAvatar-fallback",
                            "img": "MuiAvatar-img",
                            "root": "MuiAvatar-root",
                            "rounded": "MuiAvatar-rounded",
                            "square": "MuiAvatar-square",
                          }
                        }
                        src="http://example.com/avatar.png"
                      >
                        <div
                          className="MuiAvatar-root MuiAvatar-circle makeStyles-avatar-1"
                        >
                          <img
                            alt="Test Person"
                            className="MuiAvatar-img"
                            src="http://example.com/avatar.png"
                          />
                        </div>
                      </ForwardRef(Avatar)>
                    </WithStyles(ForwardRef(Avatar))>
                    <WithStyles(ForwardRef(Typography))
                      className="makeStyles-detailText-5"
                      key=".1"
                    >
                      <ForwardRef(Typography)
                        className="makeStyles-detailText-5"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                      >
                        <p
                          className="MuiTypography-root makeStyles-detailText-5 MuiTypography-body1"
                        >
                          Test Person
                        </p>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                    <WithStyles(ForwardRef(Typography))
                      className="makeStyles-typeValue-6 makeStyles-detailText-5"
                      key=".2"
                    >
                      <ForwardRef(Typography)
                        className="makeStyles-typeValue-6 makeStyles-detailText-5"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                      >
                        <p
                          className="MuiTypography-root makeStyles-typeValue-6 makeStyles-detailText-5 MuiTypography-body1"
                        >
                          Full Control
                        </p>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </li>
                </ForwardRef(ListItem)>
              </WithStyles(ForwardRef(ListItem))>
            </Permission>
          </ul>
        </ForwardRef(List)>
      </WithStyles(ForwardRef(List))>
    </section>
    <ThirdPartyPermissions
      classes={
        Object {
          "avatar": "makeStyles-avatar-1",
          "centeredSection": "makeStyles-centeredSection-2",
          "content": "makeStyles-content-18",
          "content-blockquote": "makeStyles-content-blockquote-16",
          "content-h1": "makeStyles-content-h1-8",
          "content-h2": "makeStyles-content-h2-9",
          "content-h3": "makeStyles-content-h3-10",
          "content-h4": "makeStyles-content-h4-11",
          "content-h5": "makeStyles-content-h5-12",
          "content-h6": "makeStyles-content-h6-13",
          "content-ol": "makeStyles-content-ol-15",
          "content-p": "makeStyles-content-p-17",
          "content-ul": "makeStyles-content-ul-14",
          "detailText": "makeStyles-detailText-5",
          "image": "makeStyles-image-7",
          "listItem": "makeStyles-listItem-4",
          "raw": "makeStyles-raw-3",
          "typeValue": "makeStyles-typeValue-6",
        }
      }
      thirdPartyPermissions={Array []}
    >
      <section
        className="makeStyles-centeredSection-2"
      >
        <h5
          className="makeStyles-content-h5-12"
        >
          Sharing
        </h5>
        <WithStyles(ForwardRef(List))>
          <ForwardRef(List)
            classes={
              Object {
                "dense": "MuiList-dense",
                "padding": "MuiList-padding",
                "root": "MuiList-root",
                "subheader": "MuiList-subheader",
              }
            }
          >
            <ul
              className="MuiList-root MuiList-padding"
            >
              <WithStyles(ForwardRef(ListItem))
                className="makeStyles-listItem-4"
              >
                <ForwardRef(ListItem)
                  className="makeStyles-listItem-4"
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                      "button": "MuiListItem-button",
                      "container": "MuiListItem-container",
                      "dense": "MuiListItem-dense",
                      "disabled": "Mui-disabled",
                      "divider": "MuiListItem-divider",
                      "focusVisible": "Mui-focusVisible",
                      "gutters": "MuiListItem-gutters",
                      "root": "MuiListItem-root",
                      "secondaryAction": "MuiListItem-secondaryAction",
                      "selected": "Mui-selected",
                    }
                  }
                >
                  <li
                    className="MuiListItem-root makeStyles-listItem-4 MuiListItem-gutters"
                    disabled={false}
                  >
                    <WithStyles(ForwardRef(Typography))
                      className="makeStyles-detailText-5"
                      key=".0"
                    >
                      <ForwardRef(Typography)
                        className="makeStyles-detailText-5"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                      >
                        <p
                          className="MuiTypography-root makeStyles-detailText-5 MuiTypography-body1"
                        >
                          No 3rd party access
                        </p>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </li>
                </ForwardRef(ListItem)>
              </WithStyles(ForwardRef(ListItem))>
            </ul>
          </ForwardRef(List)>
        </WithStyles(ForwardRef(List))>
      </section>
    </ThirdPartyPermissions>
    <WithStyles(ForwardRef(Divider))>
      <ForwardRef(Divider)
        classes={
          Object {
            "absolute": "MuiDivider-absolute",
            "flexItem": "MuiDivider-flexItem",
            "inset": "MuiDivider-inset",
            "light": "MuiDivider-light",
            "middle": "MuiDivider-middle",
            "root": "MuiDivider-root",
            "vertical": "MuiDivider-vertical",
          }
        }
      >
        <hr
          className="MuiDivider-root"
        />
      </ForwardRef(Divider)>
    </WithStyles(ForwardRef(Divider))>
    <section
      className="makeStyles-centeredSection-2"
    >
      <WithStyles(ForwardRef(List))>
        <ForwardRef(List)
          classes={
            Object {
              "dense": "MuiList-dense",
              "padding": "MuiList-padding",
              "root": "MuiList-root",
              "subheader": "MuiList-subheader",
            }
          }
        >
          <ul
            className="MuiList-root MuiList-padding"
          >
            <WithStyles(ForwardRef(ListItem))
              className="makeStyles-listItem-4"
            >
              <ForwardRef(ListItem)
                className="makeStyles-listItem-4"
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
              >
                <li
                  className="MuiListItem-root makeStyles-listItem-4 MuiListItem-gutters"
                  disabled={false}
                >
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-detailText-5"
                    key=".0"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-detailText-5"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                    >
                      <p
                        className="MuiTypography-root makeStyles-detailText-5 MuiTypography-body1"
                      >
                        Thing Type:
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-typeValue-6 makeStyles-detailText-5"
                    key=".1"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-typeValue-6 makeStyles-detailText-5"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                    >
                      <p
                        className="MuiTypography-root makeStyles-typeValue-6 makeStyles-detailText-5 MuiTypography-body1"
                      >
                        Resource
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                </li>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
          </ul>
        </ForwardRef(List)>
      </WithStyles(ForwardRef(List))>
    </section>
    <WithStyles(ForwardRef(Divider))>
      <ForwardRef(Divider)
        classes={
          Object {
            "absolute": "MuiDivider-absolute",
            "flexItem": "MuiDivider-flexItem",
            "inset": "MuiDivider-inset",
            "light": "MuiDivider-light",
            "middle": "MuiDivider-middle",
            "root": "MuiDivider-root",
            "vertical": "MuiDivider-vertical",
          }
        }
      >
        <hr
          className="MuiDivider-root"
        />
      </ForwardRef(Divider)>
    </WithStyles(ForwardRef(Divider))>
    <section
      className="makeStyles-centeredSection-2"
    >
      <WithStyles(ForwardRef(Button))
        onClick={[Function]}
        variant="contained"
      >
        <ForwardRef(Button)
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit",
              "contained": "MuiButton-contained",
              "containedPrimary": "MuiButton-containedPrimary",
              "containedSecondary": "MuiButton-containedSecondary",
              "containedSizeLarge": "MuiButton-containedSizeLarge",
              "containedSizeSmall": "MuiButton-containedSizeSmall",
              "disableElevation": "MuiButton-disableElevation",
              "disabled": "Mui-disabled",
              "endIcon": "MuiButton-endIcon",
              "focusVisible": "Mui-focusVisible",
              "fullWidth": "MuiButton-fullWidth",
              "iconSizeLarge": "MuiButton-iconSizeLarge",
              "iconSizeMedium": "MuiButton-iconSizeMedium",
              "iconSizeSmall": "MuiButton-iconSizeSmall",
              "label": "MuiButton-label",
              "outlined": "MuiButton-outlined",
              "outlinedPrimary": "MuiButton-outlinedPrimary",
              "outlinedSecondary": "MuiButton-outlinedSecondary",
              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
              "root": "MuiButton-root",
              "sizeLarge": "MuiButton-sizeLarge",
              "sizeSmall": "MuiButton-sizeSmall",
              "startIcon": "MuiButton-startIcon",
              "text": "MuiButton-text",
              "textPrimary": "MuiButton-textPrimary",
              "textSecondary": "MuiButton-textSecondary",
              "textSizeLarge": "MuiButton-textSizeLarge",
              "textSizeSmall": "MuiButton-textSizeSmall",
            }
          }
          onClick={[Function]}
          variant="contained"
        >
          <WithStyles(ForwardRef(ButtonBase))
            className="MuiButton-root MuiButton-contained"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="Mui-focusVisible"
            onClick={[Function]}
            type="button"
          >
            <ForwardRef(ButtonBase)
              className="MuiButton-root MuiButton-contained"
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "focusVisible": "Mui-focusVisible",
                  "root": "MuiButtonBase-root",
                }
              }
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              onClick={[Function]}
              type="button"
            >
              <button
                className="MuiButtonBase-root MuiButton-root MuiButton-contained"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex={0}
                type="button"
              >
                <span
                  className="MuiButton-label"
                >
                  Download
                </span>
                <WithStyles(memo)
                  center={false}
                >
                  <ForwardRef(TouchRipple)
                    center={false}
                    classes={
                      Object {
                        "child": "MuiTouchRipple-child",
                        "childLeaving": "MuiTouchRipple-childLeaving",
                        "childPulsate": "MuiTouchRipple-childPulsate",
                        "ripple": "MuiTouchRipple-ripple",
                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                        "root": "MuiTouchRipple-root",
                      }
                    }
                  >
                    <span
                      className="MuiTouchRipple-root"
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        component={null}
                        exit={true}
                      />
                    </span>
                  </ForwardRef(TouchRipple)>
                </WithStyles(memo)>
              </button>
            </ForwardRef(ButtonBase)>
          </WithStyles(ForwardRef(ButtonBase))>
        </ForwardRef(Button)>
      </WithStyles(ForwardRef(Button))>
    </section>
  </ResourceDetails>
</ThemeProvider>
`;

exports[`Resource details renders resource details 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
        "fonts/Roboto/LICENSE.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-Bold.woff2": [Function],
        "fonts/Raleway/Raleway-Regular.woff2": [Function],
        "fonts/Roboto/Roboto-Bold.woff2": [Function],
        "fonts/Roboto/Roboto-Light.woff2": [Function],
        "fonts/Roboto/Roboto-Regular.woff2": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.54)",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:400,700|Roboto:300,400,700&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 300,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 300,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 300,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 400,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "2.5rem",
          "fontWeight": 700,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "2rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "1.9rem",
          "fontWeight": 300,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 900,
          "letterSpacing": "0.00735em",
          "lineHeight": 1,
          "textTransform": "uppercase",
        },
        "h5": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1,
          "textTransform": "uppercase",
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", sans-serif",
          "fontSize": "0.625rem",
          "fontWeight": 300,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway\\", \\"Roboto\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 300,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <ResourceDetails
    iri="iri"
    name="Resource Name"
    types={
      Array [
        "Resource",
      ]
    }
  >
    <section
      className="makeStyles-centeredSection-2"
    >
      <h3
        className="makeStyles-content-h3-10"
        title="iri"
      >
        Resource Name
      </h3>
    </section>
    <section
      className="makeStyles-centeredSection-2"
    >
      <h5
        className="makeStyles-content-h5-12"
      >
        Details
      </h5>
    </section>
    <WithStyles(ForwardRef(Divider))>
      <ForwardRef(Divider)
        classes={
          Object {
            "absolute": "MuiDivider-absolute",
            "flexItem": "MuiDivider-flexItem",
            "inset": "MuiDivider-inset",
            "light": "MuiDivider-light",
            "middle": "MuiDivider-middle",
            "root": "MuiDivider-root",
            "vertical": "MuiDivider-vertical",
          }
        }
      >
        <hr
          className="MuiDivider-root"
        />
      </ForwardRef(Divider)>
    </WithStyles(ForwardRef(Divider))>
    <section
      className="makeStyles-centeredSection-2"
    >
      <h5
        className="makeStyles-content-h5-12"
      >
        My Access
      </h5>
      <WithStyles(ForwardRef(List))>
        <ForwardRef(List)
          classes={
            Object {
              "dense": "MuiList-dense",
              "padding": "MuiList-padding",
              "root": "MuiList-root",
              "subheader": "MuiList-subheader",
            }
          }
        >
          <ul
            className="MuiList-root MuiList-padding"
          >
            <Permission
              classes={
                Object {
                  "avatar": "makeStyles-avatar-1",
                  "centeredSection": "makeStyles-centeredSection-2",
                  "content": "makeStyles-content-18",
                  "content-blockquote": "makeStyles-content-blockquote-16",
                  "content-h1": "makeStyles-content-h1-8",
                  "content-h2": "makeStyles-content-h2-9",
                  "content-h3": "makeStyles-content-h3-10",
                  "content-h4": "makeStyles-content-h4-11",
                  "content-h5": "makeStyles-content-h5-12",
                  "content-h6": "makeStyles-content-h6-13",
                  "content-ol": "makeStyles-content-ol-15",
                  "content-p": "makeStyles-content-p-17",
                  "content-ul": "makeStyles-content-ul-14",
                  "detailText": "makeStyles-detailText-5",
                  "image": "makeStyles-image-7",
                  "listItem": "makeStyles-listItem-4",
                  "raw": "makeStyles-raw-3",
                  "typeValue": "makeStyles-typeValue-6",
                }
              }
              permission={
                Object {
                  "acl": Object {
                    "append": true,
                    "control": true,
                    "read": true,
                    "write": true,
                  },
                  "alias": "Full Control",
                  "profile": Object {
                    "avatar": "http://example.com/avatar.png",
                    "name": "Test Person",
                    "nickname": "owner",
                  },
                  "webId": "owner",
                }
              }
            >
              <WithStyles(ForwardRef(ListItem))
                className="makeStyles-listItem-4"
                key="owner"
              >
                <ForwardRef(ListItem)
                  className="makeStyles-listItem-4"
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                      "button": "MuiListItem-button",
                      "container": "MuiListItem-container",
                      "dense": "MuiListItem-dense",
                      "disabled": "Mui-disabled",
                      "divider": "MuiListItem-divider",
                      "focusVisible": "Mui-focusVisible",
                      "gutters": "MuiListItem-gutters",
                      "root": "MuiListItem-root",
                      "secondaryAction": "MuiListItem-secondaryAction",
                      "selected": "Mui-selected",
                    }
                  }
                >
                  <li
                    className="MuiListItem-root makeStyles-listItem-4 MuiListItem-gutters"
                    disabled={false}
                  >
                    <WithStyles(ForwardRef(Avatar))
                      alt="Test Person"
                      className="makeStyles-avatar-1"
                      key=".0"
                      src="http://example.com/avatar.png"
                    >
                      <ForwardRef(Avatar)
                        alt="Test Person"
                        className="makeStyles-avatar-1"
                        classes={
                          Object {
                            "circle": "MuiAvatar-circle",
                            "colorDefault": "MuiAvatar-colorDefault",
                            "fallback": "MuiAvatar-fallback",
                            "img": "MuiAvatar-img",
                            "root": "MuiAvatar-root",
                            "rounded": "MuiAvatar-rounded",
                            "square": "MuiAvatar-square",
                          }
                        }
                        src="http://example.com/avatar.png"
                      >
                        <div
                          className="MuiAvatar-root MuiAvatar-circle makeStyles-avatar-1"
                        >
                          <img
                            alt="Test Person"
                            className="MuiAvatar-img"
                            src="http://example.com/avatar.png"
                          />
                        </div>
                      </ForwardRef(Avatar)>
                    </WithStyles(ForwardRef(Avatar))>
                    <WithStyles(ForwardRef(Typography))
                      className="makeStyles-detailText-5"
                      key=".1"
                    >
                      <ForwardRef(Typography)
                        className="makeStyles-detailText-5"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                      >
                        <p
                          className="MuiTypography-root makeStyles-detailText-5 MuiTypography-body1"
                        >
                          Test Person
                        </p>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                    <WithStyles(ForwardRef(Typography))
                      className="makeStyles-typeValue-6 makeStyles-detailText-5"
                      key=".2"
                    >
                      <ForwardRef(Typography)
                        className="makeStyles-typeValue-6 makeStyles-detailText-5"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                      >
                        <p
                          className="MuiTypography-root makeStyles-typeValue-6 makeStyles-detailText-5 MuiTypography-body1"
                        >
                          Full Control
                        </p>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </li>
                </ForwardRef(ListItem)>
              </WithStyles(ForwardRef(ListItem))>
            </Permission>
          </ul>
        </ForwardRef(List)>
      </WithStyles(ForwardRef(List))>
    </section>
    <ThirdPartyPermissions
      classes={
        Object {
          "avatar": "makeStyles-avatar-1",
          "centeredSection": "makeStyles-centeredSection-2",
          "content": "makeStyles-content-18",
          "content-blockquote": "makeStyles-content-blockquote-16",
          "content-h1": "makeStyles-content-h1-8",
          "content-h2": "makeStyles-content-h2-9",
          "content-h3": "makeStyles-content-h3-10",
          "content-h4": "makeStyles-content-h4-11",
          "content-h5": "makeStyles-content-h5-12",
          "content-h6": "makeStyles-content-h6-13",
          "content-ol": "makeStyles-content-ol-15",
          "content-p": "makeStyles-content-p-17",
          "content-ul": "makeStyles-content-ul-14",
          "detailText": "makeStyles-detailText-5",
          "image": "makeStyles-image-7",
          "listItem": "makeStyles-listItem-4",
          "raw": "makeStyles-raw-3",
          "typeValue": "makeStyles-typeValue-6",
        }
      }
      thirdPartyPermissions={
        Array [
          Object {
            "acl": Object {
              "append": false,
              "control": false,
              "read": true,
              "write": false,
            },
            "alias": "Can View",
            "profile": Object {
              "avatar": null,
              "name": "Test Collaborator",
              "nickname": "collaborator",
            },
            "webId": "collaborator",
          },
        ]
      }
    >
      <section
        className="makeStyles-centeredSection-2"
      >
        <h5
          className="makeStyles-content-h5-12"
        >
          Sharing
        </h5>
        <WithStyles(ForwardRef(List))>
          <ForwardRef(List)
            classes={
              Object {
                "dense": "MuiList-dense",
                "padding": "MuiList-padding",
                "root": "MuiList-root",
                "subheader": "MuiList-subheader",
              }
            }
          >
            <ul
              className="MuiList-root MuiList-padding"
            >
              <Permission
                classes={
                  Object {
                    "avatar": "makeStyles-avatar-1",
                    "centeredSection": "makeStyles-centeredSection-2",
                    "content": "makeStyles-content-18",
                    "content-blockquote": "makeStyles-content-blockquote-16",
                    "content-h1": "makeStyles-content-h1-8",
                    "content-h2": "makeStyles-content-h2-9",
                    "content-h3": "makeStyles-content-h3-10",
                    "content-h4": "makeStyles-content-h4-11",
                    "content-h5": "makeStyles-content-h5-12",
                    "content-h6": "makeStyles-content-h6-13",
                    "content-ol": "makeStyles-content-ol-15",
                    "content-p": "makeStyles-content-p-17",
                    "content-ul": "makeStyles-content-ul-14",
                    "detailText": "makeStyles-detailText-5",
                    "image": "makeStyles-image-7",
                    "listItem": "makeStyles-listItem-4",
                    "raw": "makeStyles-raw-3",
                    "typeValue": "makeStyles-typeValue-6",
                  }
                }
                key="collaborator"
                permission={
                  Object {
                    "acl": Object {
                      "append": false,
                      "control": false,
                      "read": true,
                      "write": false,
                    },
                    "alias": "Can View",
                    "profile": Object {
                      "avatar": null,
                      "name": "Test Collaborator",
                      "nickname": "collaborator",
                    },
                    "webId": "collaborator",
                  }
                }
              >
                <WithStyles(ForwardRef(ListItem))
                  className="makeStyles-listItem-4"
                  key="collaborator"
                >
                  <ForwardRef(ListItem)
                    className="makeStyles-listItem-4"
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                  >
                    <li
                      className="MuiListItem-root makeStyles-listItem-4 MuiListItem-gutters"
                      disabled={false}
                    >
                      <WithStyles(ForwardRef(Avatar))
                        alt="Test Collaborator"
                        className="makeStyles-avatar-1"
                        key=".0"
                      >
                        <ForwardRef(Avatar)
                          alt="Test Collaborator"
                          className="makeStyles-avatar-1"
                          classes={
                            Object {
                              "circle": "MuiAvatar-circle",
                              "colorDefault": "MuiAvatar-colorDefault",
                              "fallback": "MuiAvatar-fallback",
                              "img": "MuiAvatar-img",
                              "root": "MuiAvatar-root",
                              "rounded": "MuiAvatar-rounded",
                              "square": "MuiAvatar-square",
                            }
                          }
                        >
                          <div
                            className="MuiAvatar-root MuiAvatar-circle makeStyles-avatar-1 MuiAvatar-colorDefault"
                          >
                            <ForwardRef(PersonIcon)
                              className="MuiAvatar-fallback"
                            >
                              <WithStyles(ForwardRef(SvgIcon))
                                className="MuiAvatar-fallback"
                              >
                                <ForwardRef(SvgIcon)
                                  className="MuiAvatar-fallback"
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                      "colorError": "MuiSvgIcon-colorError",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                      "root": "MuiSvgIcon-root",
                                    }
                                  }
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="MuiSvgIcon-root MuiAvatar-fallback"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                    />
                                  </svg>
                                </ForwardRef(SvgIcon)>
                              </WithStyles(ForwardRef(SvgIcon))>
                            </ForwardRef(PersonIcon)>
                          </div>
                        </ForwardRef(Avatar)>
                      </WithStyles(ForwardRef(Avatar))>
                      <WithStyles(ForwardRef(Typography))
                        className="makeStyles-detailText-5"
                        key=".1"
                      >
                        <ForwardRef(Typography)
                          className="makeStyles-detailText-5"
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                        >
                          <p
                            className="MuiTypography-root makeStyles-detailText-5 MuiTypography-body1"
                          >
                            Test Collaborator
                          </p>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                      <WithStyles(ForwardRef(Typography))
                        className="makeStyles-typeValue-6 makeStyles-detailText-5"
                        key=".2"
                      >
                        <ForwardRef(Typography)
                          className="makeStyles-typeValue-6 makeStyles-detailText-5"
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                        >
                          <p
                            className="MuiTypography-root makeStyles-typeValue-6 makeStyles-detailText-5 MuiTypography-body1"
                          >
                            Can View
                          </p>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                    </li>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
              </Permission>
            </ul>
          </ForwardRef(List)>
        </WithStyles(ForwardRef(List))>
      </section>
    </ThirdPartyPermissions>
    <WithStyles(ForwardRef(Divider))>
      <ForwardRef(Divider)
        classes={
          Object {
            "absolute": "MuiDivider-absolute",
            "flexItem": "MuiDivider-flexItem",
            "inset": "MuiDivider-inset",
            "light": "MuiDivider-light",
            "middle": "MuiDivider-middle",
            "root": "MuiDivider-root",
            "vertical": "MuiDivider-vertical",
          }
        }
      >
        <hr
          className="MuiDivider-root"
        />
      </ForwardRef(Divider)>
    </WithStyles(ForwardRef(Divider))>
    <section
      className="makeStyles-centeredSection-2"
    >
      <WithStyles(ForwardRef(List))>
        <ForwardRef(List)
          classes={
            Object {
              "dense": "MuiList-dense",
              "padding": "MuiList-padding",
              "root": "MuiList-root",
              "subheader": "MuiList-subheader",
            }
          }
        >
          <ul
            className="MuiList-root MuiList-padding"
          >
            <WithStyles(ForwardRef(ListItem))
              className="makeStyles-listItem-4"
            >
              <ForwardRef(ListItem)
                className="makeStyles-listItem-4"
                classes={
                  Object {
                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                    "button": "MuiListItem-button",
                    "container": "MuiListItem-container",
                    "dense": "MuiListItem-dense",
                    "disabled": "Mui-disabled",
                    "divider": "MuiListItem-divider",
                    "focusVisible": "Mui-focusVisible",
                    "gutters": "MuiListItem-gutters",
                    "root": "MuiListItem-root",
                    "secondaryAction": "MuiListItem-secondaryAction",
                    "selected": "Mui-selected",
                  }
                }
              >
                <li
                  className="MuiListItem-root makeStyles-listItem-4 MuiListItem-gutters"
                  disabled={false}
                >
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-detailText-5"
                    key=".0"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-detailText-5"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                    >
                      <p
                        className="MuiTypography-root makeStyles-detailText-5 MuiTypography-body1"
                      >
                        Thing Type:
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-typeValue-6 makeStyles-detailText-5"
                    key=".1"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-typeValue-6 makeStyles-detailText-5"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                    >
                      <p
                        className="MuiTypography-root makeStyles-typeValue-6 makeStyles-detailText-5 MuiTypography-body1"
                      >
                        Resource
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                </li>
              </ForwardRef(ListItem)>
            </WithStyles(ForwardRef(ListItem))>
          </ul>
        </ForwardRef(List)>
      </WithStyles(ForwardRef(List))>
    </section>
    <WithStyles(ForwardRef(Divider))>
      <ForwardRef(Divider)
        classes={
          Object {
            "absolute": "MuiDivider-absolute",
            "flexItem": "MuiDivider-flexItem",
            "inset": "MuiDivider-inset",
            "light": "MuiDivider-light",
            "middle": "MuiDivider-middle",
            "root": "MuiDivider-root",
            "vertical": "MuiDivider-vertical",
          }
        }
      >
        <hr
          className="MuiDivider-root"
        />
      </ForwardRef(Divider)>
    </WithStyles(ForwardRef(Divider))>
    <section
      className="makeStyles-centeredSection-2"
    >
      <WithStyles(ForwardRef(Button))
        onClick={[Function]}
        variant="contained"
      >
        <ForwardRef(Button)
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit",
              "contained": "MuiButton-contained",
              "containedPrimary": "MuiButton-containedPrimary",
              "containedSecondary": "MuiButton-containedSecondary",
              "containedSizeLarge": "MuiButton-containedSizeLarge",
              "containedSizeSmall": "MuiButton-containedSizeSmall",
              "disableElevation": "MuiButton-disableElevation",
              "disabled": "Mui-disabled",
              "endIcon": "MuiButton-endIcon",
              "focusVisible": "Mui-focusVisible",
              "fullWidth": "MuiButton-fullWidth",
              "iconSizeLarge": "MuiButton-iconSizeLarge",
              "iconSizeMedium": "MuiButton-iconSizeMedium",
              "iconSizeSmall": "MuiButton-iconSizeSmall",
              "label": "MuiButton-label",
              "outlined": "MuiButton-outlined",
              "outlinedPrimary": "MuiButton-outlinedPrimary",
              "outlinedSecondary": "MuiButton-outlinedSecondary",
              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
              "root": "MuiButton-root",
              "sizeLarge": "MuiButton-sizeLarge",
              "sizeSmall": "MuiButton-sizeSmall",
              "startIcon": "MuiButton-startIcon",
              "text": "MuiButton-text",
              "textPrimary": "MuiButton-textPrimary",
              "textSecondary": "MuiButton-textSecondary",
              "textSizeLarge": "MuiButton-textSizeLarge",
              "textSizeSmall": "MuiButton-textSizeSmall",
            }
          }
          onClick={[Function]}
          variant="contained"
        >
          <WithStyles(ForwardRef(ButtonBase))
            className="MuiButton-root MuiButton-contained"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="Mui-focusVisible"
            onClick={[Function]}
            type="button"
          >
            <ForwardRef(ButtonBase)
              className="MuiButton-root MuiButton-contained"
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "focusVisible": "Mui-focusVisible",
                  "root": "MuiButtonBase-root",
                }
              }
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              onClick={[Function]}
              type="button"
            >
              <button
                className="MuiButtonBase-root MuiButton-root MuiButton-contained"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex={0}
                type="button"
              >
                <span
                  className="MuiButton-label"
                >
                  Download
                </span>
                <WithStyles(memo)
                  center={false}
                >
                  <ForwardRef(TouchRipple)
                    center={false}
                    classes={
                      Object {
                        "child": "MuiTouchRipple-child",
                        "childLeaving": "MuiTouchRipple-childLeaving",
                        "childPulsate": "MuiTouchRipple-childPulsate",
                        "ripple": "MuiTouchRipple-ripple",
                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                        "root": "MuiTouchRipple-root",
                      }
                    }
                  >
                    <span
                      className="MuiTouchRipple-root"
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        component={null}
                        exit={true}
                      />
                    </span>
                  </ForwardRef(TouchRipple)>
                </WithStyles(memo)>
              </button>
            </ForwardRef(ButtonBase)>
          </WithStyles(ForwardRef(ButtonBase))>
        </ForwardRef(Button)>
      </WithStyles(ForwardRef(Button))>
    </section>
  </ResourceDetails>
</ThemeProvider>
`;

exports[`ThirdPartyPermissions it renders permissions if given 1`] = `
<section>
  <h5>
    Sharing
  </h5>
  <WithStyles(ForwardRef(List))>
    <Permission
      classes={Object {}}
      key="owner"
      permission={
        Object {
          "acl": Object {
            "append": true,
            "control": true,
            "read": true,
            "write": true,
          },
          "alias": "Full Control",
          "profile": Object {
            "avatar": "http://example.com/avatar.png",
            "name": "Test Person",
            "nickname": "owner",
          },
          "webId": "owner",
        }
      }
    />
    <Permission
      classes={Object {}}
      key="collaborator"
      permission={
        Object {
          "acl": Object {
            "append": false,
            "control": false,
            "read": true,
            "write": false,
          },
          "alias": "Can View",
          "profile": Object {
            "avatar": null,
            "name": "Test Collaborator",
            "nickname": "collaborator",
          },
          "webId": "collaborator",
        }
      }
    />
  </WithStyles(ForwardRef(List))>
</section>
`;

exports[`ThirdPartyPermissions it returns a useful message if there are no third party permissions 1`] = `
<section>
  <h5>
    Sharing
  </h5>
  <WithStyles(ForwardRef(List))>
    <WithStyles(ForwardRef(ListItem))>
      <WithStyles(ForwardRef(Typography))>
        No 3rd party access
      </WithStyles(ForwardRef(Typography))>
    </WithStyles(ForwardRef(ListItem))>
  </WithStyles(ForwardRef(List))>
</section>
`;

exports[`ThirdPartyPermissions it returns null if given no permissions 1`] = `""`;
