// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContactsListSearch render profiles when people are loaded 1`] = `
<Component
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-ExtraBold": [Function],
        "fonts/Raleway/Raleway-Medium": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#4E4E4E",
          "secondary": "#4E4E4E",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 800,
        "fontWeightLight": 500,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.375rem",
          "fontWeight": 800,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.45,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.125rem",
          "fontWeight": 800,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.27,
        },
        "h3": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.05rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1.2,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.1,
        },
        "h5": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h6": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "0.625rem",
          "fontWeight": 800,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <StylesProvider
    generateClassName={[Function]}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1280,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "iconSet": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "icons": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "label": "SDK Default",
          "licenses": Array [
            "fonts/Raleway/OFL.txt",
          ],
          "localFonts": Object {
            "fonts/Raleway/Raleway-ExtraBold": [Function],
            "fonts/Raleway/Raleway-Medium": [Function],
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "name": "sdk-default",
          "overrides": Object {},
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "adjustAlpha": [Function],
            "augmentColor": [Function],
            "background": Object {
              "default": "#FFFFFF",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#f44336",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(86, 53, 178)",
              "light": "rgb(150, 112, 255)",
              "main": "#7C4DFF",
            },
            "secondary": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#083575",
              "light": "#01C9EA",
              "main": "#18A9E6",
            },
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#4E4E4E",
              "secondary": "#4E4E4E",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {},
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "stylesheets": Array [
            "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
          ],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "body1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 800,
            "fontWeightLight": 500,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.375rem",
              "fontWeight": 800,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.45,
            },
            "h2": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.125rem",
              "fontWeight": 800,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.27,
            },
            "h3": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.05rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1.2,
            },
            "h4": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.1,
            },
            "h5": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1,
            },
            "h6": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "0.625rem",
              "fontWeight": 800,
              "letterSpacing": "0.0075em",
              "lineHeight": 1,
            },
            "heading": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <SearchProvider
        search=""
        setSearch={[Function]}
      >
        <ContactsListSearch
          people={
            Array [
              DatasetCore {
                "internal_url": "http://example.com/alice#me",
                "quads": Set {
                  Quad {
                    "graph": DefaultGraph {
                      "value": "",
                    },
                    "object": Literal {
                      "datatype": NamedNode {
                        "value": "http://www.w3.org/2001/XMLSchema#string",
                      },
                      "language": "",
                      "value": "Alice",
                    },
                    "predicate": NamedNode {
                      "value": "http://www.w3.org/2006/vcard/ns#fn",
                    },
                    "subject": NamedNode {
                      "value": "http://example.com/alice#me",
                    },
                  },
                  Quad {
                    "graph": DefaultGraph {
                      "value": "",
                    },
                    "object": Literal {
                      "datatype": NamedNode {
                        "value": "http://www.w3.org/2001/XMLSchema#string",
                      },
                      "language": "",
                      "value": "A",
                    },
                    "predicate": NamedNode {
                      "value": "http://www.w3.org/2006/vcard/ns#nickname",
                    },
                    "subject": NamedNode {
                      "value": "http://example.com/alice#me",
                    },
                  },
                  Quad {
                    "graph": DefaultGraph {
                      "value": "",
                    },
                    "object": NamedNode {
                      "value": "http://example.com/alice.jpg",
                    },
                    "predicate": NamedNode {
                      "value": "http://www.w3.org/2006/vcard/ns#hasPhoto",
                    },
                    "subject": NamedNode {
                      "value": "http://example.com/alice#me",
                    },
                  },
                },
              },
              DatasetCore {
                "internal_url": "http://example.com/bob#me",
                "quads": Set {
                  Quad {
                    "graph": DefaultGraph {
                      "value": "",
                    },
                    "object": Literal {
                      "datatype": NamedNode {
                        "value": "http://www.w3.org/2001/XMLSchema#string",
                      },
                      "language": "",
                      "value": "Bob",
                    },
                    "predicate": NamedNode {
                      "value": "http://xmlns.com/foaf/0.1/name",
                    },
                    "subject": NamedNode {
                      "value": "http://example.com/bob#me",
                    },
                  },
                  Quad {
                    "graph": DefaultGraph {
                      "value": "",
                    },
                    "object": Literal {
                      "datatype": NamedNode {
                        "value": "http://www.w3.org/2001/XMLSchema#string",
                      },
                      "language": "",
                      "value": "B",
                    },
                    "predicate": NamedNode {
                      "value": "http://xmlns.com/foaf/0.1/nick",
                    },
                    "subject": NamedNode {
                      "value": "http://example.com/bob#me",
                    },
                  },
                },
              },
            ]
          }
        >
          <WithStyles(ForwardRef(Autocomplete))
            classes={
              Object {
                "inputRoot": "PodBrowser-searchInput",
                "root": "PodBrowser-search",
              }
            }
            freeSolo={true}
            id="ContactsSearch"
            onChange={[Function]}
            options={
              Array [
                "Alice",
                "Bob",
              ]
            }
            renderInput={[Function]}
          >
            <ForwardRef(Autocomplete)
              classes={
                Object {
                  "clearIndicator": "PodBrowser-clearIndicator",
                  "clearIndicatorDirty": "PodBrowser-clearIndicatorDirty",
                  "endAdornment": "PodBrowser-endAdornment",
                  "focused": "PodBrowser-focused",
                  "fullWidth": "PodBrowser-fullWidth",
                  "groupLabel": "PodBrowser-groupLabel",
                  "groupUl": "PodBrowser-groupUl",
                  "hasClearIcon": "PodBrowser-hasClearIcon",
                  "hasPopupIcon": "PodBrowser-hasPopupIcon",
                  "input": "PodBrowser-input",
                  "inputFocused": "PodBrowser-inputFocused",
                  "inputRoot": "PodBrowser-inputRoot PodBrowser-searchInput",
                  "listbox": "PodBrowser-listbox",
                  "loading": "PodBrowser-loading",
                  "noOptions": "PodBrowser-noOptions",
                  "option": "PodBrowser-option",
                  "paper": "PodBrowser-paper",
                  "popper": "PodBrowser-popper",
                  "popperDisablePortal": "PodBrowser-popperDisablePortal",
                  "popupIndicator": "PodBrowser-popupIndicator",
                  "popupIndicatorOpen": "PodBrowser-popupIndicatorOpen",
                  "root": "PodBrowser-root PodBrowser-search",
                  "tag": "PodBrowser-tag",
                  "tagSizeSmall": "PodBrowser-tagSizeSmall",
                }
              }
              freeSolo={true}
              id="ContactsSearch"
              onChange={[Function]}
              options={
                Array [
                  "Alice",
                  "Bob",
                ]
              }
              renderInput={[Function]}
            >
              <div
                aria-expanded={false}
                aria-owns={null}
                className="PodBrowser-root PodBrowser-search PodBrowser-hasClearIcon"
                onClick={[Function]}
                onKeyDown={[Function]}
                onMouseDown={[Function]}
                role="combobox"
              >
                <WithStyles(ForwardRef(TextField))
                  InputLabelProps={
                    Object {
                      "htmlFor": "ContactsSearch",
                      "id": "ContactsSearch-label",
                    }
                  }
                  InputProps={
                    Object {
                      "className": "PodBrowser-inputRoot PodBrowser-searchInput",
                      "endAdornment": <div
                        className="PodBrowser-endAdornment"
                      >
                        <WithStyles(ForwardRef(IconButton))
                          aria-label="Clear"
                          className="PodBrowser-clearIndicator"
                          onClick={[Function]}
                          tabIndex={-1}
                          title="Clear"
                        >
                          <Memo
                            fontSize="small"
                          />
                        </WithStyles(ForwardRef(IconButton))>
                      </div>,
                      "ref": [Function],
                      "startAdornment": undefined,
                    }
                  }
                  disabled={false}
                  fullWidth={true}
                  id="ContactsSearch"
                  inputProps={
                    Object {
                      "aria-activedescendant": null,
                      "aria-autocomplete": "list",
                      "aria-controls": null,
                      "autoCapitalize": "none",
                      "autoComplete": "off",
                      "className": "PodBrowser-input PodBrowser-inputFocused",
                      "data-testid": "contacts-search",
                      "disabled": false,
                      "id": "ContactsSearch",
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "onMouseDown": [Function],
                      "ref": Object {
                        "current": <input
                          aria-autocomplete="list"
                          aria-invalid="false"
                          autocapitalize="none"
                          autocomplete="off"
                          class="PodBrowser-input PodBrowser-input PodBrowser-input PodBrowser-inputFocused PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd PodBrowser-inputMarginDense PodBrowser-inputMarginDense"
                          data-testid="contacts-search"
                          id="ContactsSearch"
                          spellcheck="false"
                          type="text"
                          value=""
                        />,
                      },
                      "spellCheck": "false",
                      "value": "",
                    }
                  }
                  margin="dense"
                  variant="outlined"
                >
                  <ForwardRef(TextField)
                    InputLabelProps={
                      Object {
                        "htmlFor": "ContactsSearch",
                        "id": "ContactsSearch-label",
                      }
                    }
                    InputProps={
                      Object {
                        "className": "PodBrowser-inputRoot PodBrowser-searchInput",
                        "endAdornment": <div
                          className="PodBrowser-endAdornment"
                        >
                          <WithStyles(ForwardRef(IconButton))
                            aria-label="Clear"
                            className="PodBrowser-clearIndicator"
                            onClick={[Function]}
                            tabIndex={-1}
                            title="Clear"
                          >
                            <Memo
                              fontSize="small"
                            />
                          </WithStyles(ForwardRef(IconButton))>
                        </div>,
                        "ref": [Function],
                        "startAdornment": undefined,
                      }
                    }
                    classes={
                      Object {
                        "root": "PodBrowser-root",
                      }
                    }
                    disabled={false}
                    fullWidth={true}
                    id="ContactsSearch"
                    inputProps={
                      Object {
                        "aria-activedescendant": null,
                        "aria-autocomplete": "list",
                        "aria-controls": null,
                        "autoCapitalize": "none",
                        "autoComplete": "off",
                        "className": "PodBrowser-input PodBrowser-inputFocused",
                        "data-testid": "contacts-search",
                        "disabled": false,
                        "id": "ContactsSearch",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "onMouseDown": [Function],
                        "ref": Object {
                          "current": <input
                            aria-autocomplete="list"
                            aria-invalid="false"
                            autocapitalize="none"
                            autocomplete="off"
                            class="PodBrowser-input PodBrowser-input PodBrowser-input PodBrowser-inputFocused PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd PodBrowser-inputMarginDense PodBrowser-inputMarginDense"
                            data-testid="contacts-search"
                            id="ContactsSearch"
                            spellcheck="false"
                            type="text"
                            value=""
                          />,
                        },
                        "spellCheck": "false",
                        "value": "",
                      }
                    }
                    margin="dense"
                    variant="outlined"
                  >
                    <WithStyles(ForwardRef(FormControl))
                      className="PodBrowser-root"
                      color="primary"
                      disabled={false}
                      error={false}
                      fullWidth={true}
                      margin="dense"
                      required={false}
                      variant="outlined"
                    >
                      <ForwardRef(FormControl)
                        className="PodBrowser-root"
                        classes={
                          Object {
                            "fullWidth": "PodBrowser-fullWidth",
                            "marginDense": "PodBrowser-marginDense",
                            "marginNormal": "PodBrowser-marginNormal",
                            "root": "PodBrowser-root",
                          }
                        }
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        margin="dense"
                        required={false}
                        variant="outlined"
                      >
                        <div
                          className="PodBrowser-root PodBrowser-root PodBrowser-marginDense PodBrowser-fullWidth"
                        >
                          <WithStyles(ForwardRef(OutlinedInput))
                            autoFocus={false}
                            className="PodBrowser-inputRoot PodBrowser-searchInput"
                            endAdornment={
                              <div
                                className="PodBrowser-endAdornment"
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="Clear"
                                  className="PodBrowser-clearIndicator"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  title="Clear"
                                >
                                  <Memo
                                    fontSize="small"
                                  />
                                </WithStyles(ForwardRef(IconButton))>
                              </div>
                            }
                            fullWidth={true}
                            id="ContactsSearch"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": null,
                                "autoCapitalize": "none",
                                "autoComplete": "off",
                                "className": "PodBrowser-input PodBrowser-inputFocused",
                                "data-testid": "contacts-search",
                                "disabled": false,
                                "id": "ContactsSearch",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onFocus": [Function],
                                "onMouseDown": [Function],
                                "ref": Object {
                                  "current": <input
                                    aria-autocomplete="list"
                                    aria-invalid="false"
                                    autocapitalize="none"
                                    autocomplete="off"
                                    class="PodBrowser-input PodBrowser-input PodBrowser-input PodBrowser-inputFocused PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd PodBrowser-inputMarginDense PodBrowser-inputMarginDense"
                                    data-testid="contacts-search"
                                    id="ContactsSearch"
                                    spellcheck="false"
                                    type="text"
                                    value=""
                                  />,
                                },
                                "spellCheck": "false",
                                "value": "",
                              }
                            }
                            multiline={false}
                          >
                            <ForwardRef(OutlinedInput)
                              autoFocus={false}
                              className="PodBrowser-inputRoot PodBrowser-searchInput"
                              classes={
                                Object {
                                  "adornedEnd": "PodBrowser-adornedEnd",
                                  "adornedStart": "PodBrowser-adornedStart",
                                  "colorSecondary": "PodBrowser-colorSecondary",
                                  "disabled": "PodBrowser-disabled",
                                  "error": "PodBrowser-error",
                                  "focused": "PodBrowser-focused",
                                  "input": "PodBrowser-input",
                                  "inputAdornedEnd": "PodBrowser-inputAdornedEnd",
                                  "inputAdornedStart": "PodBrowser-inputAdornedStart",
                                  "inputMarginDense": "PodBrowser-inputMarginDense",
                                  "inputMultiline": "PodBrowser-inputMultiline",
                                  "marginDense": "PodBrowser-marginDense",
                                  "multiline": "PodBrowser-multiline",
                                  "notchedOutline": "PodBrowser-notchedOutline",
                                  "root": "PodBrowser-root",
                                }
                              }
                              endAdornment={
                                <div
                                  className="PodBrowser-endAdornment"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    aria-label="Clear"
                                    className="PodBrowser-clearIndicator"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Clear"
                                  >
                                    <Memo
                                      fontSize="small"
                                    />
                                  </WithStyles(ForwardRef(IconButton))>
                                </div>
                              }
                              fullWidth={true}
                              id="ContactsSearch"
                              inputProps={
                                Object {
                                  "aria-activedescendant": null,
                                  "aria-autocomplete": "list",
                                  "aria-controls": null,
                                  "autoCapitalize": "none",
                                  "autoComplete": "off",
                                  "className": "PodBrowser-input PodBrowser-inputFocused",
                                  "data-testid": "contacts-search",
                                  "disabled": false,
                                  "id": "ContactsSearch",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "onMouseDown": [Function],
                                  "ref": Object {
                                    "current": <input
                                      aria-autocomplete="list"
                                      aria-invalid="false"
                                      autocapitalize="none"
                                      autocomplete="off"
                                      class="PodBrowser-input PodBrowser-input PodBrowser-input PodBrowser-inputFocused PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd PodBrowser-inputMarginDense PodBrowser-inputMarginDense"
                                      data-testid="contacts-search"
                                      id="ContactsSearch"
                                      spellcheck="false"
                                      type="text"
                                      value=""
                                    />,
                                  },
                                  "spellCheck": "false",
                                  "value": "",
                                }
                              }
                              multiline={false}
                            >
                              <WithStyles(ForwardRef(InputBase))
                                autoFocus={false}
                                className="PodBrowser-inputRoot PodBrowser-searchInput"
                                classes={
                                  Object {
                                    "adornedEnd": "PodBrowser-adornedEnd",
                                    "adornedStart": "PodBrowser-adornedStart",
                                    "colorSecondary": "PodBrowser-colorSecondary",
                                    "disabled": "PodBrowser-disabled",
                                    "error": "PodBrowser-error",
                                    "focused": "PodBrowser-focused",
                                    "input": "PodBrowser-input",
                                    "inputAdornedEnd": "PodBrowser-inputAdornedEnd",
                                    "inputAdornedStart": "PodBrowser-inputAdornedStart",
                                    "inputMarginDense": "PodBrowser-inputMarginDense",
                                    "inputMultiline": "PodBrowser-inputMultiline",
                                    "marginDense": "PodBrowser-marginDense",
                                    "multiline": "PodBrowser-multiline",
                                    "notchedOutline": null,
                                    "root": "PodBrowser-root",
                                  }
                                }
                                endAdornment={
                                  <div
                                    className="PodBrowser-endAdornment"
                                  >
                                    <WithStyles(ForwardRef(IconButton))
                                      aria-label="Clear"
                                      className="PodBrowser-clearIndicator"
                                      onClick={[Function]}
                                      tabIndex={-1}
                                      title="Clear"
                                    >
                                      <Memo
                                        fontSize="small"
                                      />
                                    </WithStyles(ForwardRef(IconButton))>
                                  </div>
                                }
                                fullWidth={true}
                                id="ContactsSearch"
                                inputComponent="input"
                                inputProps={
                                  Object {
                                    "aria-activedescendant": null,
                                    "aria-autocomplete": "list",
                                    "aria-controls": null,
                                    "autoCapitalize": "none",
                                    "autoComplete": "off",
                                    "className": "PodBrowser-input PodBrowser-inputFocused",
                                    "data-testid": "contacts-search",
                                    "disabled": false,
                                    "id": "ContactsSearch",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onFocus": [Function],
                                    "onMouseDown": [Function],
                                    "ref": Object {
                                      "current": <input
                                        aria-autocomplete="list"
                                        aria-invalid="false"
                                        autocapitalize="none"
                                        autocomplete="off"
                                        class="PodBrowser-input PodBrowser-input PodBrowser-input PodBrowser-inputFocused PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd PodBrowser-inputMarginDense PodBrowser-inputMarginDense"
                                        data-testid="contacts-search"
                                        id="ContactsSearch"
                                        spellcheck="false"
                                        type="text"
                                        value=""
                                      />,
                                    },
                                    "spellCheck": "false",
                                    "value": "",
                                  }
                                }
                                multiline={false}
                                renderSuffix={[Function]}
                                type="text"
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  className="PodBrowser-inputRoot PodBrowser-searchInput"
                                  classes={
                                    Object {
                                      "adornedEnd": "PodBrowser-adornedEnd PodBrowser-adornedEnd",
                                      "adornedStart": "PodBrowser-adornedStart PodBrowser-adornedStart",
                                      "colorSecondary": "PodBrowser-colorSecondary PodBrowser-colorSecondary",
                                      "disabled": "PodBrowser-disabled PodBrowser-disabled",
                                      "error": "PodBrowser-error PodBrowser-error",
                                      "focused": "PodBrowser-focused PodBrowser-focused",
                                      "formControl": "PodBrowser-formControl",
                                      "fullWidth": "PodBrowser-fullWidth",
                                      "input": "PodBrowser-input PodBrowser-input",
                                      "inputAdornedEnd": "PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd",
                                      "inputAdornedStart": "PodBrowser-inputAdornedStart PodBrowser-inputAdornedStart",
                                      "inputHiddenLabel": "PodBrowser-inputHiddenLabel",
                                      "inputMarginDense": "PodBrowser-inputMarginDense PodBrowser-inputMarginDense",
                                      "inputMultiline": "PodBrowser-inputMultiline PodBrowser-inputMultiline",
                                      "inputTypeSearch": "PodBrowser-inputTypeSearch",
                                      "marginDense": "PodBrowser-marginDense PodBrowser-marginDense",
                                      "multiline": "PodBrowser-multiline PodBrowser-multiline",
                                      "root": "PodBrowser-root PodBrowser-root",
                                    }
                                  }
                                  endAdornment={
                                    <div
                                      className="PodBrowser-endAdornment"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        aria-label="Clear"
                                        className="PodBrowser-clearIndicator"
                                        onClick={[Function]}
                                        tabIndex={-1}
                                        title="Clear"
                                      >
                                        <Memo
                                          fontSize="small"
                                        />
                                      </WithStyles(ForwardRef(IconButton))>
                                    </div>
                                  }
                                  fullWidth={true}
                                  id="ContactsSearch"
                                  inputComponent="input"
                                  inputProps={
                                    Object {
                                      "aria-activedescendant": null,
                                      "aria-autocomplete": "list",
                                      "aria-controls": null,
                                      "autoCapitalize": "none",
                                      "autoComplete": "off",
                                      "className": "PodBrowser-input PodBrowser-inputFocused",
                                      "data-testid": "contacts-search",
                                      "disabled": false,
                                      "id": "ContactsSearch",
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onFocus": [Function],
                                      "onMouseDown": [Function],
                                      "ref": Object {
                                        "current": <input
                                          aria-autocomplete="list"
                                          aria-invalid="false"
                                          autocapitalize="none"
                                          autocomplete="off"
                                          class="PodBrowser-input PodBrowser-input PodBrowser-input PodBrowser-inputFocused PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd PodBrowser-inputMarginDense PodBrowser-inputMarginDense"
                                          data-testid="contacts-search"
                                          id="ContactsSearch"
                                          spellcheck="false"
                                          type="text"
                                          value=""
                                        />,
                                      },
                                      "spellCheck": "false",
                                      "value": "",
                                    }
                                  }
                                  multiline={false}
                                  renderSuffix={[Function]}
                                  type="text"
                                >
                                  <div
                                    className="PodBrowser-root PodBrowser-root PodBrowser-inputRoot PodBrowser-searchInput PodBrowser-fullWidth PodBrowser-formControl PodBrowser-adornedEnd PodBrowser-adornedEnd PodBrowser-marginDense PodBrowser-marginDense"
                                    onClick={[Function]}
                                  >
                                    <input
                                      aria-activedescendant={null}
                                      aria-autocomplete="list"
                                      aria-controls={null}
                                      aria-invalid={false}
                                      autoCapitalize="none"
                                      autoComplete="off"
                                      autoFocus={false}
                                      className="PodBrowser-input PodBrowser-input PodBrowser-input PodBrowser-inputFocused PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd PodBrowser-inputMarginDense PodBrowser-inputMarginDense"
                                      data-testid="contacts-search"
                                      disabled={false}
                                      id="ContactsSearch"
                                      onAnimationStart={[Function]}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      required={false}
                                      spellCheck="false"
                                      type="text"
                                      value=""
                                    />
                                    <div
                                      className="PodBrowser-endAdornment"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        aria-label="Clear"
                                        className="PodBrowser-clearIndicator"
                                        onClick={[Function]}
                                        tabIndex={-1}
                                        title="Clear"
                                      >
                                        <ForwardRef(IconButton)
                                          aria-label="Clear"
                                          className="PodBrowser-clearIndicator"
                                          classes={
                                            Object {
                                              "colorInherit": "PodBrowser-colorInherit",
                                              "colorPrimary": "PodBrowser-colorPrimary",
                                              "colorSecondary": "PodBrowser-colorSecondary",
                                              "disabled": "PodBrowser-disabled",
                                              "edgeEnd": "PodBrowser-edgeEnd",
                                              "edgeStart": "PodBrowser-edgeStart",
                                              "label": "PodBrowser-label",
                                              "root": "PodBrowser-root",
                                              "sizeSmall": "PodBrowser-sizeSmall",
                                            }
                                          }
                                          onClick={[Function]}
                                          tabIndex={-1}
                                          title="Clear"
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            aria-label="Clear"
                                            centerRipple={true}
                                            className="PodBrowser-root PodBrowser-clearIndicator"
                                            disabled={false}
                                            focusRipple={true}
                                            onClick={[Function]}
                                            tabIndex={-1}
                                            title="Clear"
                                          >
                                            <ForwardRef(ButtonBase)
                                              aria-label="Clear"
                                              centerRipple={true}
                                              className="PodBrowser-root PodBrowser-clearIndicator"
                                              classes={
                                                Object {
                                                  "disabled": "PodBrowser-disabled",
                                                  "focusVisible": "PodBrowser-focusVisible",
                                                  "root": "PodBrowser-root",
                                                }
                                              }
                                              disabled={false}
                                              focusRipple={true}
                                              onClick={[Function]}
                                              tabIndex={-1}
                                              title="Clear"
                                            >
                                              <button
                                                aria-label="Clear"
                                                className="PodBrowser-root PodBrowser-root PodBrowser-clearIndicator"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={-1}
                                                title="Clear"
                                                type="button"
                                              >
                                                <span
                                                  className="PodBrowser-label"
                                                >
                                                  <ForwardRef(CloseIcon)
                                                    fontSize="small"
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      fontSize="small"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        classes={
                                                          Object {
                                                            "colorAction": "PodBrowser-colorAction",
                                                            "colorDisabled": "PodBrowser-colorDisabled",
                                                            "colorError": "PodBrowser-colorError",
                                                            "colorPrimary": "PodBrowser-colorPrimary",
                                                            "colorSecondary": "PodBrowser-colorSecondary",
                                                            "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                            "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                            "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                            "root": "PodBrowser-root",
                                                          }
                                                        }
                                                        fontSize="small"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="PodBrowser-root PodBrowser-fontSizeSmall"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(CloseIcon)>
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "PodBrowser-child",
                                                        "childLeaving": "PodBrowser-childLeaving",
                                                        "childPulsate": "PodBrowser-childPulsate",
                                                        "ripple": "PodBrowser-ripple",
                                                        "ripplePulsate": "PodBrowser-ripplePulsate",
                                                        "rippleVisible": "PodBrowser-rippleVisible",
                                                        "root": "PodBrowser-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="PodBrowser-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </div>
                                    <WithStyles(ForwardRef(NotchedOutline))
                                      className="PodBrowser-notchedOutline"
                                      labelWidth={0}
                                      notched={false}
                                    >
                                      <ForwardRef(NotchedOutline)
                                        className="PodBrowser-notchedOutline"
                                        classes={
                                          Object {
                                            "legend": "PodBrowser-legend",
                                            "legendLabelled": "PodBrowser-legendLabelled",
                                            "legendNotched": "PodBrowser-legendNotched",
                                            "root": "PodBrowser-root",
                                          }
                                        }
                                        labelWidth={0}
                                        notched={false}
                                      >
                                        <fieldset
                                          aria-hidden={true}
                                          className="PodBrowser-root PodBrowser-notchedOutline"
                                          style={
                                            Object {
                                              "paddingLeft": 8,
                                            }
                                          }
                                        >
                                          <legend
                                            className="PodBrowser-legend"
                                            style={
                                              Object {
                                                "width": 0.01,
                                              }
                                            }
                                          >
                                            <span
                                              dangerouslySetInnerHTML={
                                                Object {
                                                  "__html": "&#8203;",
                                                }
                                              }
                                            />
                                          </legend>
                                        </fieldset>
                                      </ForwardRef(NotchedOutline)>
                                    </WithStyles(ForwardRef(NotchedOutline))>
                                  </div>
                                </ForwardRef(InputBase)>
                              </WithStyles(ForwardRef(InputBase))>
                            </ForwardRef(OutlinedInput)>
                          </WithStyles(ForwardRef(OutlinedInput))>
                        </div>
                      </ForwardRef(FormControl)>
                    </WithStyles(ForwardRef(FormControl))>
                  </ForwardRef(TextField)>
                </WithStyles(ForwardRef(TextField))>
              </div>
            </ForwardRef(Autocomplete)>
          </WithStyles(ForwardRef(Autocomplete))>
        </ContactsListSearch>
      </SearchProvider>
    </ThemeProvider>
  </StylesProvider>
</Component>
`;

exports[`ContactsListSearch renders form if people are still loading 1`] = `
<Component
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-ExtraBold": [Function],
        "fonts/Raleway/Raleway-Medium": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#4E4E4E",
          "secondary": "#4E4E4E",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 800,
        "fontWeightLight": 500,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.375rem",
          "fontWeight": 800,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.45,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.125rem",
          "fontWeight": 800,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.27,
        },
        "h3": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.05rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1.2,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.1,
        },
        "h5": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h6": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "0.625rem",
          "fontWeight": 800,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <StylesProvider
    generateClassName={[Function]}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1280,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "iconSet": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "icons": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "label": "SDK Default",
          "licenses": Array [
            "fonts/Raleway/OFL.txt",
          ],
          "localFonts": Object {
            "fonts/Raleway/Raleway-ExtraBold": [Function],
            "fonts/Raleway/Raleway-Medium": [Function],
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "name": "sdk-default",
          "overrides": Object {},
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "adjustAlpha": [Function],
            "augmentColor": [Function],
            "background": Object {
              "default": "#FFFFFF",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#f44336",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(86, 53, 178)",
              "light": "rgb(150, 112, 255)",
              "main": "#7C4DFF",
            },
            "secondary": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#083575",
              "light": "#01C9EA",
              "main": "#18A9E6",
            },
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#4E4E4E",
              "secondary": "#4E4E4E",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {},
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "stylesheets": Array [
            "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
          ],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "body1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 800,
            "fontWeightLight": 500,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.375rem",
              "fontWeight": 800,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.45,
            },
            "h2": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.125rem",
              "fontWeight": 800,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.27,
            },
            "h3": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.05rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1.2,
            },
            "h4": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.1,
            },
            "h5": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1,
            },
            "h6": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "0.625rem",
              "fontWeight": 800,
              "letterSpacing": "0.0075em",
              "lineHeight": 1,
            },
            "heading": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <SearchProvider
        search=""
        setSearch={[Function]}
      >
        <ContactsListSearch
          people={Array []}
        >
          <WithStyles(ForwardRef(Autocomplete))
            classes={
              Object {
                "inputRoot": "PodBrowser-searchInput",
                "root": "PodBrowser-search",
              }
            }
            freeSolo={true}
            id="ContactsSearch"
            onChange={[Function]}
            options={Array []}
            renderInput={[Function]}
          >
            <ForwardRef(Autocomplete)
              classes={
                Object {
                  "clearIndicator": "PodBrowser-clearIndicator",
                  "clearIndicatorDirty": "PodBrowser-clearIndicatorDirty",
                  "endAdornment": "PodBrowser-endAdornment",
                  "focused": "PodBrowser-focused",
                  "fullWidth": "PodBrowser-fullWidth",
                  "groupLabel": "PodBrowser-groupLabel",
                  "groupUl": "PodBrowser-groupUl",
                  "hasClearIcon": "PodBrowser-hasClearIcon",
                  "hasPopupIcon": "PodBrowser-hasPopupIcon",
                  "input": "PodBrowser-input",
                  "inputFocused": "PodBrowser-inputFocused",
                  "inputRoot": "PodBrowser-inputRoot PodBrowser-searchInput",
                  "listbox": "PodBrowser-listbox",
                  "loading": "PodBrowser-loading",
                  "noOptions": "PodBrowser-noOptions",
                  "option": "PodBrowser-option",
                  "paper": "PodBrowser-paper",
                  "popper": "PodBrowser-popper",
                  "popperDisablePortal": "PodBrowser-popperDisablePortal",
                  "popupIndicator": "PodBrowser-popupIndicator",
                  "popupIndicatorOpen": "PodBrowser-popupIndicatorOpen",
                  "root": "PodBrowser-root PodBrowser-search",
                  "tag": "PodBrowser-tag",
                  "tagSizeSmall": "PodBrowser-tagSizeSmall",
                }
              }
              freeSolo={true}
              id="ContactsSearch"
              onChange={[Function]}
              options={Array []}
              renderInput={[Function]}
            >
              <div
                aria-expanded={false}
                aria-owns={null}
                className="PodBrowser-root PodBrowser-search PodBrowser-hasClearIcon"
                onClick={[Function]}
                onKeyDown={[Function]}
                onMouseDown={[Function]}
                role="combobox"
              >
                <WithStyles(ForwardRef(TextField))
                  InputLabelProps={
                    Object {
                      "htmlFor": "ContactsSearch",
                      "id": "ContactsSearch-label",
                    }
                  }
                  InputProps={
                    Object {
                      "className": "PodBrowser-inputRoot PodBrowser-searchInput",
                      "endAdornment": <div
                        className="PodBrowser-endAdornment"
                      >
                        <WithStyles(ForwardRef(IconButton))
                          aria-label="Clear"
                          className="PodBrowser-clearIndicator"
                          onClick={[Function]}
                          tabIndex={-1}
                          title="Clear"
                        >
                          <Memo
                            fontSize="small"
                          />
                        </WithStyles(ForwardRef(IconButton))>
                      </div>,
                      "ref": [Function],
                      "startAdornment": undefined,
                    }
                  }
                  disabled={false}
                  fullWidth={true}
                  id="ContactsSearch"
                  inputProps={
                    Object {
                      "aria-activedescendant": null,
                      "aria-autocomplete": "list",
                      "aria-controls": null,
                      "autoCapitalize": "none",
                      "autoComplete": "off",
                      "className": "PodBrowser-input PodBrowser-inputFocused",
                      "data-testid": "contacts-search",
                      "disabled": false,
                      "id": "ContactsSearch",
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "onMouseDown": [Function],
                      "ref": Object {
                        "current": <input
                          aria-autocomplete="list"
                          aria-invalid="false"
                          autocapitalize="none"
                          autocomplete="off"
                          class="PodBrowser-input PodBrowser-input PodBrowser-input PodBrowser-inputFocused PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd PodBrowser-inputMarginDense PodBrowser-inputMarginDense"
                          data-testid="contacts-search"
                          id="ContactsSearch"
                          spellcheck="false"
                          type="text"
                          value=""
                        />,
                      },
                      "spellCheck": "false",
                      "value": "",
                    }
                  }
                  margin="dense"
                  variant="outlined"
                >
                  <ForwardRef(TextField)
                    InputLabelProps={
                      Object {
                        "htmlFor": "ContactsSearch",
                        "id": "ContactsSearch-label",
                      }
                    }
                    InputProps={
                      Object {
                        "className": "PodBrowser-inputRoot PodBrowser-searchInput",
                        "endAdornment": <div
                          className="PodBrowser-endAdornment"
                        >
                          <WithStyles(ForwardRef(IconButton))
                            aria-label="Clear"
                            className="PodBrowser-clearIndicator"
                            onClick={[Function]}
                            tabIndex={-1}
                            title="Clear"
                          >
                            <Memo
                              fontSize="small"
                            />
                          </WithStyles(ForwardRef(IconButton))>
                        </div>,
                        "ref": [Function],
                        "startAdornment": undefined,
                      }
                    }
                    classes={
                      Object {
                        "root": "PodBrowser-root",
                      }
                    }
                    disabled={false}
                    fullWidth={true}
                    id="ContactsSearch"
                    inputProps={
                      Object {
                        "aria-activedescendant": null,
                        "aria-autocomplete": "list",
                        "aria-controls": null,
                        "autoCapitalize": "none",
                        "autoComplete": "off",
                        "className": "PodBrowser-input PodBrowser-inputFocused",
                        "data-testid": "contacts-search",
                        "disabled": false,
                        "id": "ContactsSearch",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "onMouseDown": [Function],
                        "ref": Object {
                          "current": <input
                            aria-autocomplete="list"
                            aria-invalid="false"
                            autocapitalize="none"
                            autocomplete="off"
                            class="PodBrowser-input PodBrowser-input PodBrowser-input PodBrowser-inputFocused PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd PodBrowser-inputMarginDense PodBrowser-inputMarginDense"
                            data-testid="contacts-search"
                            id="ContactsSearch"
                            spellcheck="false"
                            type="text"
                            value=""
                          />,
                        },
                        "spellCheck": "false",
                        "value": "",
                      }
                    }
                    margin="dense"
                    variant="outlined"
                  >
                    <WithStyles(ForwardRef(FormControl))
                      className="PodBrowser-root"
                      color="primary"
                      disabled={false}
                      error={false}
                      fullWidth={true}
                      margin="dense"
                      required={false}
                      variant="outlined"
                    >
                      <ForwardRef(FormControl)
                        className="PodBrowser-root"
                        classes={
                          Object {
                            "fullWidth": "PodBrowser-fullWidth",
                            "marginDense": "PodBrowser-marginDense",
                            "marginNormal": "PodBrowser-marginNormal",
                            "root": "PodBrowser-root",
                          }
                        }
                        color="primary"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        margin="dense"
                        required={false}
                        variant="outlined"
                      >
                        <div
                          className="PodBrowser-root PodBrowser-root PodBrowser-marginDense PodBrowser-fullWidth"
                        >
                          <WithStyles(ForwardRef(OutlinedInput))
                            autoFocus={false}
                            className="PodBrowser-inputRoot PodBrowser-searchInput"
                            endAdornment={
                              <div
                                className="PodBrowser-endAdornment"
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="Clear"
                                  className="PodBrowser-clearIndicator"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                  title="Clear"
                                >
                                  <Memo
                                    fontSize="small"
                                  />
                                </WithStyles(ForwardRef(IconButton))>
                              </div>
                            }
                            fullWidth={true}
                            id="ContactsSearch"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": null,
                                "autoCapitalize": "none",
                                "autoComplete": "off",
                                "className": "PodBrowser-input PodBrowser-inputFocused",
                                "data-testid": "contacts-search",
                                "disabled": false,
                                "id": "ContactsSearch",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onFocus": [Function],
                                "onMouseDown": [Function],
                                "ref": Object {
                                  "current": <input
                                    aria-autocomplete="list"
                                    aria-invalid="false"
                                    autocapitalize="none"
                                    autocomplete="off"
                                    class="PodBrowser-input PodBrowser-input PodBrowser-input PodBrowser-inputFocused PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd PodBrowser-inputMarginDense PodBrowser-inputMarginDense"
                                    data-testid="contacts-search"
                                    id="ContactsSearch"
                                    spellcheck="false"
                                    type="text"
                                    value=""
                                  />,
                                },
                                "spellCheck": "false",
                                "value": "",
                              }
                            }
                            multiline={false}
                          >
                            <ForwardRef(OutlinedInput)
                              autoFocus={false}
                              className="PodBrowser-inputRoot PodBrowser-searchInput"
                              classes={
                                Object {
                                  "adornedEnd": "PodBrowser-adornedEnd",
                                  "adornedStart": "PodBrowser-adornedStart",
                                  "colorSecondary": "PodBrowser-colorSecondary",
                                  "disabled": "PodBrowser-disabled",
                                  "error": "PodBrowser-error",
                                  "focused": "PodBrowser-focused",
                                  "input": "PodBrowser-input",
                                  "inputAdornedEnd": "PodBrowser-inputAdornedEnd",
                                  "inputAdornedStart": "PodBrowser-inputAdornedStart",
                                  "inputMarginDense": "PodBrowser-inputMarginDense",
                                  "inputMultiline": "PodBrowser-inputMultiline",
                                  "marginDense": "PodBrowser-marginDense",
                                  "multiline": "PodBrowser-multiline",
                                  "notchedOutline": "PodBrowser-notchedOutline",
                                  "root": "PodBrowser-root",
                                }
                              }
                              endAdornment={
                                <div
                                  className="PodBrowser-endAdornment"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    aria-label="Clear"
                                    className="PodBrowser-clearIndicator"
                                    onClick={[Function]}
                                    tabIndex={-1}
                                    title="Clear"
                                  >
                                    <Memo
                                      fontSize="small"
                                    />
                                  </WithStyles(ForwardRef(IconButton))>
                                </div>
                              }
                              fullWidth={true}
                              id="ContactsSearch"
                              inputProps={
                                Object {
                                  "aria-activedescendant": null,
                                  "aria-autocomplete": "list",
                                  "aria-controls": null,
                                  "autoCapitalize": "none",
                                  "autoComplete": "off",
                                  "className": "PodBrowser-input PodBrowser-inputFocused",
                                  "data-testid": "contacts-search",
                                  "disabled": false,
                                  "id": "ContactsSearch",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "onMouseDown": [Function],
                                  "ref": Object {
                                    "current": <input
                                      aria-autocomplete="list"
                                      aria-invalid="false"
                                      autocapitalize="none"
                                      autocomplete="off"
                                      class="PodBrowser-input PodBrowser-input PodBrowser-input PodBrowser-inputFocused PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd PodBrowser-inputMarginDense PodBrowser-inputMarginDense"
                                      data-testid="contacts-search"
                                      id="ContactsSearch"
                                      spellcheck="false"
                                      type="text"
                                      value=""
                                    />,
                                  },
                                  "spellCheck": "false",
                                  "value": "",
                                }
                              }
                              multiline={false}
                            >
                              <WithStyles(ForwardRef(InputBase))
                                autoFocus={false}
                                className="PodBrowser-inputRoot PodBrowser-searchInput"
                                classes={
                                  Object {
                                    "adornedEnd": "PodBrowser-adornedEnd",
                                    "adornedStart": "PodBrowser-adornedStart",
                                    "colorSecondary": "PodBrowser-colorSecondary",
                                    "disabled": "PodBrowser-disabled",
                                    "error": "PodBrowser-error",
                                    "focused": "PodBrowser-focused",
                                    "input": "PodBrowser-input",
                                    "inputAdornedEnd": "PodBrowser-inputAdornedEnd",
                                    "inputAdornedStart": "PodBrowser-inputAdornedStart",
                                    "inputMarginDense": "PodBrowser-inputMarginDense",
                                    "inputMultiline": "PodBrowser-inputMultiline",
                                    "marginDense": "PodBrowser-marginDense",
                                    "multiline": "PodBrowser-multiline",
                                    "notchedOutline": null,
                                    "root": "PodBrowser-root",
                                  }
                                }
                                endAdornment={
                                  <div
                                    className="PodBrowser-endAdornment"
                                  >
                                    <WithStyles(ForwardRef(IconButton))
                                      aria-label="Clear"
                                      className="PodBrowser-clearIndicator"
                                      onClick={[Function]}
                                      tabIndex={-1}
                                      title="Clear"
                                    >
                                      <Memo
                                        fontSize="small"
                                      />
                                    </WithStyles(ForwardRef(IconButton))>
                                  </div>
                                }
                                fullWidth={true}
                                id="ContactsSearch"
                                inputComponent="input"
                                inputProps={
                                  Object {
                                    "aria-activedescendant": null,
                                    "aria-autocomplete": "list",
                                    "aria-controls": null,
                                    "autoCapitalize": "none",
                                    "autoComplete": "off",
                                    "className": "PodBrowser-input PodBrowser-inputFocused",
                                    "data-testid": "contacts-search",
                                    "disabled": false,
                                    "id": "ContactsSearch",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onFocus": [Function],
                                    "onMouseDown": [Function],
                                    "ref": Object {
                                      "current": <input
                                        aria-autocomplete="list"
                                        aria-invalid="false"
                                        autocapitalize="none"
                                        autocomplete="off"
                                        class="PodBrowser-input PodBrowser-input PodBrowser-input PodBrowser-inputFocused PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd PodBrowser-inputMarginDense PodBrowser-inputMarginDense"
                                        data-testid="contacts-search"
                                        id="ContactsSearch"
                                        spellcheck="false"
                                        type="text"
                                        value=""
                                      />,
                                    },
                                    "spellCheck": "false",
                                    "value": "",
                                  }
                                }
                                multiline={false}
                                renderSuffix={[Function]}
                                type="text"
                              >
                                <ForwardRef(InputBase)
                                  autoFocus={false}
                                  className="PodBrowser-inputRoot PodBrowser-searchInput"
                                  classes={
                                    Object {
                                      "adornedEnd": "PodBrowser-adornedEnd PodBrowser-adornedEnd",
                                      "adornedStart": "PodBrowser-adornedStart PodBrowser-adornedStart",
                                      "colorSecondary": "PodBrowser-colorSecondary PodBrowser-colorSecondary",
                                      "disabled": "PodBrowser-disabled PodBrowser-disabled",
                                      "error": "PodBrowser-error PodBrowser-error",
                                      "focused": "PodBrowser-focused PodBrowser-focused",
                                      "formControl": "PodBrowser-formControl",
                                      "fullWidth": "PodBrowser-fullWidth",
                                      "input": "PodBrowser-input PodBrowser-input",
                                      "inputAdornedEnd": "PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd",
                                      "inputAdornedStart": "PodBrowser-inputAdornedStart PodBrowser-inputAdornedStart",
                                      "inputHiddenLabel": "PodBrowser-inputHiddenLabel",
                                      "inputMarginDense": "PodBrowser-inputMarginDense PodBrowser-inputMarginDense",
                                      "inputMultiline": "PodBrowser-inputMultiline PodBrowser-inputMultiline",
                                      "inputTypeSearch": "PodBrowser-inputTypeSearch",
                                      "marginDense": "PodBrowser-marginDense PodBrowser-marginDense",
                                      "multiline": "PodBrowser-multiline PodBrowser-multiline",
                                      "root": "PodBrowser-root PodBrowser-root",
                                    }
                                  }
                                  endAdornment={
                                    <div
                                      className="PodBrowser-endAdornment"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        aria-label="Clear"
                                        className="PodBrowser-clearIndicator"
                                        onClick={[Function]}
                                        tabIndex={-1}
                                        title="Clear"
                                      >
                                        <Memo
                                          fontSize="small"
                                        />
                                      </WithStyles(ForwardRef(IconButton))>
                                    </div>
                                  }
                                  fullWidth={true}
                                  id="ContactsSearch"
                                  inputComponent="input"
                                  inputProps={
                                    Object {
                                      "aria-activedescendant": null,
                                      "aria-autocomplete": "list",
                                      "aria-controls": null,
                                      "autoCapitalize": "none",
                                      "autoComplete": "off",
                                      "className": "PodBrowser-input PodBrowser-inputFocused",
                                      "data-testid": "contacts-search",
                                      "disabled": false,
                                      "id": "ContactsSearch",
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onFocus": [Function],
                                      "onMouseDown": [Function],
                                      "ref": Object {
                                        "current": <input
                                          aria-autocomplete="list"
                                          aria-invalid="false"
                                          autocapitalize="none"
                                          autocomplete="off"
                                          class="PodBrowser-input PodBrowser-input PodBrowser-input PodBrowser-inputFocused PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd PodBrowser-inputMarginDense PodBrowser-inputMarginDense"
                                          data-testid="contacts-search"
                                          id="ContactsSearch"
                                          spellcheck="false"
                                          type="text"
                                          value=""
                                        />,
                                      },
                                      "spellCheck": "false",
                                      "value": "",
                                    }
                                  }
                                  multiline={false}
                                  renderSuffix={[Function]}
                                  type="text"
                                >
                                  <div
                                    className="PodBrowser-root PodBrowser-root PodBrowser-inputRoot PodBrowser-searchInput PodBrowser-fullWidth PodBrowser-formControl PodBrowser-adornedEnd PodBrowser-adornedEnd PodBrowser-marginDense PodBrowser-marginDense"
                                    onClick={[Function]}
                                  >
                                    <input
                                      aria-activedescendant={null}
                                      aria-autocomplete="list"
                                      aria-controls={null}
                                      aria-invalid={false}
                                      autoCapitalize="none"
                                      autoComplete="off"
                                      autoFocus={false}
                                      className="PodBrowser-input PodBrowser-input PodBrowser-input PodBrowser-inputFocused PodBrowser-inputAdornedEnd PodBrowser-inputAdornedEnd PodBrowser-inputMarginDense PodBrowser-inputMarginDense"
                                      data-testid="contacts-search"
                                      disabled={false}
                                      id="ContactsSearch"
                                      onAnimationStart={[Function]}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      required={false}
                                      spellCheck="false"
                                      type="text"
                                      value=""
                                    />
                                    <div
                                      className="PodBrowser-endAdornment"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        aria-label="Clear"
                                        className="PodBrowser-clearIndicator"
                                        onClick={[Function]}
                                        tabIndex={-1}
                                        title="Clear"
                                      >
                                        <ForwardRef(IconButton)
                                          aria-label="Clear"
                                          className="PodBrowser-clearIndicator"
                                          classes={
                                            Object {
                                              "colorInherit": "PodBrowser-colorInherit",
                                              "colorPrimary": "PodBrowser-colorPrimary",
                                              "colorSecondary": "PodBrowser-colorSecondary",
                                              "disabled": "PodBrowser-disabled",
                                              "edgeEnd": "PodBrowser-edgeEnd",
                                              "edgeStart": "PodBrowser-edgeStart",
                                              "label": "PodBrowser-label",
                                              "root": "PodBrowser-root",
                                              "sizeSmall": "PodBrowser-sizeSmall",
                                            }
                                          }
                                          onClick={[Function]}
                                          tabIndex={-1}
                                          title="Clear"
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            aria-label="Clear"
                                            centerRipple={true}
                                            className="PodBrowser-root PodBrowser-clearIndicator"
                                            disabled={false}
                                            focusRipple={true}
                                            onClick={[Function]}
                                            tabIndex={-1}
                                            title="Clear"
                                          >
                                            <ForwardRef(ButtonBase)
                                              aria-label="Clear"
                                              centerRipple={true}
                                              className="PodBrowser-root PodBrowser-clearIndicator"
                                              classes={
                                                Object {
                                                  "disabled": "PodBrowser-disabled",
                                                  "focusVisible": "PodBrowser-focusVisible",
                                                  "root": "PodBrowser-root",
                                                }
                                              }
                                              disabled={false}
                                              focusRipple={true}
                                              onClick={[Function]}
                                              tabIndex={-1}
                                              title="Clear"
                                            >
                                              <button
                                                aria-label="Clear"
                                                className="PodBrowser-root PodBrowser-root PodBrowser-clearIndicator"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={-1}
                                                title="Clear"
                                                type="button"
                                              >
                                                <span
                                                  className="PodBrowser-label"
                                                >
                                                  <ForwardRef(CloseIcon)
                                                    fontSize="small"
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      fontSize="small"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        classes={
                                                          Object {
                                                            "colorAction": "PodBrowser-colorAction",
                                                            "colorDisabled": "PodBrowser-colorDisabled",
                                                            "colorError": "PodBrowser-colorError",
                                                            "colorPrimary": "PodBrowser-colorPrimary",
                                                            "colorSecondary": "PodBrowser-colorSecondary",
                                                            "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                            "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                            "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                            "root": "PodBrowser-root",
                                                          }
                                                        }
                                                        fontSize="small"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="PodBrowser-root PodBrowser-fontSizeSmall"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(CloseIcon)>
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "PodBrowser-child",
                                                        "childLeaving": "PodBrowser-childLeaving",
                                                        "childPulsate": "PodBrowser-childPulsate",
                                                        "ripple": "PodBrowser-ripple",
                                                        "ripplePulsate": "PodBrowser-ripplePulsate",
                                                        "rippleVisible": "PodBrowser-rippleVisible",
                                                        "root": "PodBrowser-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="PodBrowser-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </div>
                                    <WithStyles(ForwardRef(NotchedOutline))
                                      className="PodBrowser-notchedOutline"
                                      labelWidth={0}
                                      notched={false}
                                    >
                                      <ForwardRef(NotchedOutline)
                                        className="PodBrowser-notchedOutline"
                                        classes={
                                          Object {
                                            "legend": "PodBrowser-legend",
                                            "legendLabelled": "PodBrowser-legendLabelled",
                                            "legendNotched": "PodBrowser-legendNotched",
                                            "root": "PodBrowser-root",
                                          }
                                        }
                                        labelWidth={0}
                                        notched={false}
                                      >
                                        <fieldset
                                          aria-hidden={true}
                                          className="PodBrowser-root PodBrowser-notchedOutline"
                                          style={
                                            Object {
                                              "paddingLeft": 8,
                                            }
                                          }
                                        >
                                          <legend
                                            className="PodBrowser-legend"
                                            style={
                                              Object {
                                                "width": 0.01,
                                              }
                                            }
                                          >
                                            <span
                                              dangerouslySetInnerHTML={
                                                Object {
                                                  "__html": "&#8203;",
                                                }
                                              }
                                            />
                                          </legend>
                                        </fieldset>
                                      </ForwardRef(NotchedOutline)>
                                    </WithStyles(ForwardRef(NotchedOutline))>
                                  </div>
                                </ForwardRef(InputBase)>
                              </WithStyles(ForwardRef(InputBase))>
                            </ForwardRef(OutlinedInput)>
                          </WithStyles(ForwardRef(OutlinedInput))>
                        </div>
                      </ForwardRef(FormControl)>
                    </WithStyles(ForwardRef(FormControl))>
                  </ForwardRef(TextField)>
                </WithStyles(ForwardRef(TextField))>
              </div>
            </ForwardRef(Autocomplete)>
          </WithStyles(ForwardRef(Autocomplete))>
        </ContactsListSearch>
      </SearchProvider>
    </ThemeProvider>
  </StylesProvider>
</Component>
`;
