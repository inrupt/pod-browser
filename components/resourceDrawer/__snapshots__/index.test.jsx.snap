// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResourceDrawer view it renders a Contents view when the router query has an iri 1`] = `
<Component
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-ExtraBold": [Function],
        "fonts/Raleway/Raleway-Medium": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#C44539",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#4E4E4E",
          "secondary": "#4E4E4E",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 800,
        "fontWeightLight": 500,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.375rem",
          "fontWeight": 800,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.45,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.125rem",
          "fontWeight": 800,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.27,
        },
        "h3": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.05rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1.2,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.1,
        },
        "h5": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h6": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "0.625rem",
          "fontWeight": 800,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <StylesProvider
    generateClassName={[Function]}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1280,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "iconSet": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "icons": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "label": "SDK Default",
          "licenses": Array [
            "fonts/Raleway/OFL.txt",
          ],
          "localFonts": Object {
            "fonts/Raleway/Raleway-ExtraBold": [Function],
            "fonts/Raleway/Raleway-Medium": [Function],
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "name": "sdk-default",
          "overrides": Object {},
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "adjustAlpha": [Function],
            "augmentColor": [Function],
            "background": Object {
              "default": "#FFFFFF",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#C44539",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(86, 53, 178)",
              "light": "rgb(150, 112, 255)",
              "main": "#7C4DFF",
            },
            "secondary": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#083575",
              "light": "#01C9EA",
              "main": "#18A9E6",
            },
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#4E4E4E",
              "secondary": "#4E4E4E",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {},
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "stylesheets": Array [
            "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
          ],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "body1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 800,
            "fontWeightLight": 500,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.375rem",
              "fontWeight": 800,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.45,
            },
            "h2": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.125rem",
              "fontWeight": 800,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.27,
            },
            "h3": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.05rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1.2,
            },
            "h4": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.1,
            },
            "h5": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1,
            },
            "h6": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "0.625rem",
              "fontWeight": 800,
              "letterSpacing": "0.0075em",
              "lineHeight": 1,
            },
            "heading": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <MockedSessionContextProvider>
        <y
          session={
            Object {
              "fetch": [MockFunction] {
                "calls": Array [
                  Array [
                    "http://example.com/webId#me",
                    Object {
                      "headers": Object {
                        "Accept": "text/turtle",
                      },
                    },
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              "handleIncomingRedirect": [MockFunction] {
                "calls": Array [
                  Array [
                    "http://localhost/",
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": Promise {},
                  },
                ],
              },
              "info": Object {
                "isLoggedIn": true,
                "sessionId": "some-session-id",
                "webId": "http://example.com/webId#me",
              },
              "on": [MockFunction] {
                "calls": Array [
                  Array [
                    "logout",
                    [Function],
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
            }
          }
          sessionId="test-session"
          sessionRequestInProgress={false}
        >
          <DetailsContextMenuProvider>
            <ResourceDrawer
              onUpdate={[Function]}
            >
              <Drawer
                close={[Function]}
                open={true}
              >
                <section
                  className="PodBrowser-drawer PodBrowser-drawer--open"
                >
                  <div
                    className="PodBrowser-drawer__content"
                  >
                    <div
                      className="PodBrowser-drawer__content-wrapper"
                    >
                      <div
                        className="PodBrowser-drawer__article"
                      >
                        <ForwardRef
                          onClick={[Function]}
                          variant="text"
                        >
                          <button
                            className="PodBrowser-button PodBrowser-button--text"
                            onClick={[Function]}
                          >
                            <Icon
                              name="cancel"
                            >
                              <span
                                className="PodBrowser-icon-cancel"
                              />
                            </Icon>
                             Close
                          </button>
                        </ForwardRef>
                      </div>
                      <AccessControlProvider
                        accessControl={
                          Object {
                            "deleteFile": [MockFunction],
                            "getPermissions": [MockFunction] {
                              "calls": Array [
                                Array [],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "savePermissionsForAgent": [MockFunction],
                          }
                        }
                      >
                        <E
                          dataset={
                            DatasetCore {
                              "internal_resourceInfo": Object {
                                "contentType": "text/turtle",
                                "isRawData": false,
                                "linkedResources": Object {},
                                "sourceIri": "/iri/",
                              },
                              "quads": Set {},
                            }
                          }
                        >
                          <ResourceDetails
                            onDelete={[Function]}
                          >
                            <section
                              className="PodBrowser-headerSection"
                            >
                              <h3
                                className="PodBrowser-content-h3"
                                data-testid="resource-title"
                                title="/iri/"
                              >
                                iri
                              </h3>
                            </section>
                            <WithStyles(ForwardRef(Divider))>
                              <ForwardRef(Divider)
                                classes={
                                  Object {
                                    "absolute": "PodBrowser-absolute",
                                    "flexItem": "PodBrowser-flexItem",
                                    "inset": "PodBrowser-inset",
                                    "light": "PodBrowser-light",
                                    "middle": "PodBrowser-middle",
                                    "root": "PodBrowser-root",
                                    "vertical": "PodBrowser-vertical",
                                  }
                                }
                              >
                                <hr
                                  className="PodBrowser-root"
                                />
                              </ForwardRef(Divider)>
                            </WithStyles(ForwardRef(Divider))>
                            <WithStyles(ForwardRef(Accordion))
                              defaultExpanded={true}
                            >
                              <ForwardRef(Accordion)
                                classes={
                                  Object {
                                    "disabled": "PodBrowser-disabled",
                                    "expanded": "PodBrowser-expanded",
                                    "root": "PodBrowser-root",
                                    "rounded": "PodBrowser-rounded",
                                  }
                                }
                                defaultExpanded={true}
                              >
                                <WithStyles(ForwardRef(Paper))
                                  className="PodBrowser-root PodBrowser-expanded PodBrowser-rounded"
                                  square={false}
                                >
                                  <ForwardRef(Paper)
                                    className="PodBrowser-root PodBrowser-expanded PodBrowser-rounded"
                                    classes={
                                      Object {
                                        "elevation0": "PodBrowser-elevation0",
                                        "elevation1": "PodBrowser-elevation1",
                                        "elevation10": "PodBrowser-elevation10",
                                        "elevation11": "PodBrowser-elevation11",
                                        "elevation12": "PodBrowser-elevation12",
                                        "elevation13": "PodBrowser-elevation13",
                                        "elevation14": "PodBrowser-elevation14",
                                        "elevation15": "PodBrowser-elevation15",
                                        "elevation16": "PodBrowser-elevation16",
                                        "elevation17": "PodBrowser-elevation17",
                                        "elevation18": "PodBrowser-elevation18",
                                        "elevation19": "PodBrowser-elevation19",
                                        "elevation2": "PodBrowser-elevation2",
                                        "elevation20": "PodBrowser-elevation20",
                                        "elevation21": "PodBrowser-elevation21",
                                        "elevation22": "PodBrowser-elevation22",
                                        "elevation23": "PodBrowser-elevation23",
                                        "elevation24": "PodBrowser-elevation24",
                                        "elevation3": "PodBrowser-elevation3",
                                        "elevation4": "PodBrowser-elevation4",
                                        "elevation5": "PodBrowser-elevation5",
                                        "elevation6": "PodBrowser-elevation6",
                                        "elevation7": "PodBrowser-elevation7",
                                        "elevation8": "PodBrowser-elevation8",
                                        "elevation9": "PodBrowser-elevation9",
                                        "outlined": "PodBrowser-outlined",
                                        "root": "PodBrowser-root",
                                        "rounded": "PodBrowser-rounded",
                                      }
                                    }
                                    square={false}
                                  >
                                    <div
                                      className="PodBrowser-root PodBrowser-root PodBrowser-expanded PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                                    >
                                      <WithStyles(ForwardRef(AccordionSummary))
                                        data-testid="accordion-resource-actions-trigger"
                                        expandIcon={<Memo(ExpandMoreIcon) />}
                                        key=".0"
                                      >
                                        <ForwardRef(AccordionSummary)
                                          classes={
                                            Object {
                                              "content": "PodBrowser-content",
                                              "disabled": "PodBrowser-disabled",
                                              "expandIcon": "PodBrowser-expandIcon",
                                              "expanded": "PodBrowser-expanded",
                                              "focused": "PodBrowser-focused",
                                              "root": "PodBrowser-root",
                                            }
                                          }
                                          data-testid="accordion-resource-actions-trigger"
                                          expandIcon={<Memo(ExpandMoreIcon) />}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            aria-expanded={true}
                                            className="PodBrowser-root PodBrowser-expanded"
                                            component="div"
                                            data-testid="accordion-resource-actions-trigger"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocusVisible={[Function]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              aria-expanded={true}
                                              className="PodBrowser-root PodBrowser-expanded"
                                              classes={
                                                Object {
                                                  "disabled": "PodBrowser-disabled",
                                                  "focusVisible": "PodBrowser-focusVisible",
                                                  "root": "PodBrowser-root",
                                                }
                                              }
                                              component="div"
                                              data-testid="accordion-resource-actions-trigger"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocusVisible={[Function]}
                                            >
                                              <div
                                                aria-disabled={false}
                                                aria-expanded={true}
                                                className="PodBrowser-root PodBrowser-root PodBrowser-expanded"
                                                data-testid="accordion-resource-actions-trigger"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                role="button"
                                                tabIndex={0}
                                              >
                                                <div
                                                  className="PodBrowser-content PodBrowser-expanded"
                                                >
                                                  Actions
                                                </div>
                                                <WithStyles(ForwardRef(IconButton))
                                                  aria-hidden={true}
                                                  className="PodBrowser-expandIcon PodBrowser-expanded"
                                                  component="div"
                                                  edge="end"
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <ForwardRef(IconButton)
                                                    aria-hidden={true}
                                                    className="PodBrowser-expandIcon PodBrowser-expanded"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "PodBrowser-colorInherit",
                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                        "disabled": "PodBrowser-disabled",
                                                        "edgeEnd": "PodBrowser-edgeEnd",
                                                        "edgeStart": "PodBrowser-edgeStart",
                                                        "label": "PodBrowser-label",
                                                        "root": "PodBrowser-root",
                                                        "sizeSmall": "PodBrowser-sizeSmall",
                                                      }
                                                    }
                                                    component="div"
                                                    edge="end"
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      aria-hidden={true}
                                                      centerRipple={true}
                                                      className="PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                      component="div"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        aria-hidden={true}
                                                        centerRipple={true}
                                                        className="PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                        classes={
                                                          Object {
                                                            "disabled": "PodBrowser-disabled",
                                                            "focusVisible": "PodBrowser-focusVisible",
                                                            "root": "PodBrowser-root",
                                                          }
                                                        }
                                                        component="div"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <div
                                                          aria-disabled={false}
                                                          aria-hidden={true}
                                                          className="PodBrowser-root PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          role={null}
                                                          tabIndex={null}
                                                        >
                                                          <span
                                                            className="PodBrowser-label"
                                                          >
                                                            <ExpandMoreIcon>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "PodBrowser-colorAction",
                                                                      "colorDisabled": "PodBrowser-colorDisabled",
                                                                      "colorError": "PodBrowser-colorError",
                                                                      "colorPrimary": "PodBrowser-colorPrimary",
                                                                      "colorSecondary": "PodBrowser-colorSecondary",
                                                                      "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                      "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                      "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                      "root": "PodBrowser-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="PodBrowser-root"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ExpandMoreIcon>
                                                          </span>
                                                          <WithStyles(memo)
                                                            center={true}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={true}
                                                              classes={
                                                                Object {
                                                                  "child": "PodBrowser-child",
                                                                  "childLeaving": "PodBrowser-childLeaving",
                                                                  "childPulsate": "PodBrowser-childPulsate",
                                                                  "ripple": "PodBrowser-ripple",
                                                                  "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                  "rippleVisible": "PodBrowser-rippleVisible",
                                                                  "root": "PodBrowser-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="PodBrowser-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </div>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </div>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(AccordionSummary)>
                                      </WithStyles(ForwardRef(AccordionSummary))>
                                      <WithStyles(ForwardRef(Collapse))
                                        in={true}
                                        timeout="auto"
                                      >
                                        <ForwardRef(Collapse)
                                          classes={
                                            Object {
                                              "container": "PodBrowser-container",
                                              "entered": "PodBrowser-entered",
                                              "hidden": "PodBrowser-hidden",
                                              "wrapper": "PodBrowser-wrapper",
                                              "wrapperInner": "PodBrowser-wrapperInner",
                                            }
                                          }
                                          in={true}
                                          timeout="auto"
                                        >
                                          <Transition
                                            addEndListener={[Function]}
                                            appear={false}
                                            enter={true}
                                            exit={true}
                                            in={true}
                                            mountOnEnter={false}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            timeout={null}
                                            unmountOnExit={false}
                                          >
                                            <div
                                              className="PodBrowser-container PodBrowser-entered"
                                              style={
                                                Object {
                                                  "minHeight": "0px",
                                                }
                                              }
                                            >
                                              <div
                                                className="PodBrowser-wrapper"
                                              >
                                                <div
                                                  className="PodBrowser-wrapperInner"
                                                >
                                                  <div
                                                    role="region"
                                                  >
                                                    <WithStyles(ForwardRef(AccordionDetails))
                                                      className="PodBrowser-accordionDetails"
                                                      key=".1"
                                                    >
                                                      <ForwardRef(AccordionDetails)
                                                        className="PodBrowser-accordionDetails"
                                                        classes={
                                                          Object {
                                                            "root": "PodBrowser-root",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="PodBrowser-root PodBrowser-accordionDetails"
                                                        >
                                                          <ActionMenu>
                                                            <ul
                                                              className="PodBrowser-action-menu"
                                                            >
                                                              <ActionMenuItem>
                                                                <li
                                                                  className="PodBrowser-action-menu__item"
                                                                >
                                                                  <DownloadLink
                                                                    className="PodBrowser-action-menu__trigger"
                                                                    data-testid="download-resource-button"
                                                                    iri="/iri/"
                                                                  />
                                                                </li>
                                                              </ActionMenuItem>
                                                              <ActionMenuItem>
                                                                <li
                                                                  className="PodBrowser-action-menu__item"
                                                                >
                                                                  <DeleteResourceButton
                                                                    className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--danger"
                                                                    data-testid="delete-resource-button"
                                                                    name="iri"
                                                                    onDelete={[Function]}
                                                                    resourceIri="/iri/"
                                                                  >
                                                                    <DeleteButton
                                                                      className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--danger"
                                                                      confirmationContent="Are you sure you wish to delete iri?"
                                                                      confirmationTitle="Confirm Delete"
                                                                      data-testid="delete-resource-button"
                                                                      dialogId="delete-resource-/iri/"
                                                                      onDelete={[Function]}
                                                                      successMessage="iri was successfully deleted."
                                                                    >
                                                                      <button
                                                                        className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--danger"
                                                                        data-testid="delete-resource-button"
                                                                        onClick={[Function]}
                                                                        type="button"
                                                                      >
                                                                        Delete
                                                                      </button>
                                                                    </DeleteButton>
                                                                  </DeleteResourceButton>
                                                                </li>
                                                              </ActionMenuItem>
                                                            </ul>
                                                          </ActionMenu>
                                                        </div>
                                                      </ForwardRef(AccordionDetails)>
                                                    </WithStyles(ForwardRef(AccordionDetails))>
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </Transition>
                                        </ForwardRef(Collapse)>
                                      </WithStyles(ForwardRef(Collapse))>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </ForwardRef(Accordion)>
                            </WithStyles(ForwardRef(Accordion))>
                            <WithStyles(ForwardRef(Accordion))>
                              <ForwardRef(Accordion)
                                classes={
                                  Object {
                                    "disabled": "PodBrowser-disabled",
                                    "expanded": "PodBrowser-expanded",
                                    "root": "PodBrowser-root",
                                    "rounded": "PodBrowser-rounded",
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Paper))
                                  className="PodBrowser-root PodBrowser-rounded"
                                  square={false}
                                >
                                  <ForwardRef(Paper)
                                    className="PodBrowser-root PodBrowser-rounded"
                                    classes={
                                      Object {
                                        "elevation0": "PodBrowser-elevation0",
                                        "elevation1": "PodBrowser-elevation1",
                                        "elevation10": "PodBrowser-elevation10",
                                        "elevation11": "PodBrowser-elevation11",
                                        "elevation12": "PodBrowser-elevation12",
                                        "elevation13": "PodBrowser-elevation13",
                                        "elevation14": "PodBrowser-elevation14",
                                        "elevation15": "PodBrowser-elevation15",
                                        "elevation16": "PodBrowser-elevation16",
                                        "elevation17": "PodBrowser-elevation17",
                                        "elevation18": "PodBrowser-elevation18",
                                        "elevation19": "PodBrowser-elevation19",
                                        "elevation2": "PodBrowser-elevation2",
                                        "elevation20": "PodBrowser-elevation20",
                                        "elevation21": "PodBrowser-elevation21",
                                        "elevation22": "PodBrowser-elevation22",
                                        "elevation23": "PodBrowser-elevation23",
                                        "elevation24": "PodBrowser-elevation24",
                                        "elevation3": "PodBrowser-elevation3",
                                        "elevation4": "PodBrowser-elevation4",
                                        "elevation5": "PodBrowser-elevation5",
                                        "elevation6": "PodBrowser-elevation6",
                                        "elevation7": "PodBrowser-elevation7",
                                        "elevation8": "PodBrowser-elevation8",
                                        "elevation9": "PodBrowser-elevation9",
                                        "outlined": "PodBrowser-outlined",
                                        "root": "PodBrowser-root",
                                        "rounded": "PodBrowser-rounded",
                                      }
                                    }
                                    square={false}
                                  >
                                    <div
                                      className="PodBrowser-root PodBrowser-root PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                                    >
                                      <WithStyles(ForwardRef(AccordionSummary))
                                        data-testid="accordion-resource-details-trigger"
                                        expandIcon={<Memo(ExpandMoreIcon) />}
                                        key=".0"
                                      >
                                        <ForwardRef(AccordionSummary)
                                          classes={
                                            Object {
                                              "content": "PodBrowser-content",
                                              "disabled": "PodBrowser-disabled",
                                              "expandIcon": "PodBrowser-expandIcon",
                                              "expanded": "PodBrowser-expanded",
                                              "focused": "PodBrowser-focused",
                                              "root": "PodBrowser-root",
                                            }
                                          }
                                          data-testid="accordion-resource-details-trigger"
                                          expandIcon={<Memo(ExpandMoreIcon) />}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            aria-expanded={false}
                                            className="PodBrowser-root"
                                            component="div"
                                            data-testid="accordion-resource-details-trigger"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocusVisible={[Function]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              aria-expanded={false}
                                              className="PodBrowser-root"
                                              classes={
                                                Object {
                                                  "disabled": "PodBrowser-disabled",
                                                  "focusVisible": "PodBrowser-focusVisible",
                                                  "root": "PodBrowser-root",
                                                }
                                              }
                                              component="div"
                                              data-testid="accordion-resource-details-trigger"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocusVisible={[Function]}
                                            >
                                              <div
                                                aria-disabled={false}
                                                aria-expanded={false}
                                                className="PodBrowser-root PodBrowser-root"
                                                data-testid="accordion-resource-details-trigger"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                role="button"
                                                tabIndex={0}
                                              >
                                                <div
                                                  className="PodBrowser-content"
                                                >
                                                  Details
                                                </div>
                                                <WithStyles(ForwardRef(IconButton))
                                                  aria-hidden={true}
                                                  className="PodBrowser-expandIcon"
                                                  component="div"
                                                  edge="end"
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <ForwardRef(IconButton)
                                                    aria-hidden={true}
                                                    className="PodBrowser-expandIcon"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "PodBrowser-colorInherit",
                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                        "disabled": "PodBrowser-disabled",
                                                        "edgeEnd": "PodBrowser-edgeEnd",
                                                        "edgeStart": "PodBrowser-edgeStart",
                                                        "label": "PodBrowser-label",
                                                        "root": "PodBrowser-root",
                                                        "sizeSmall": "PodBrowser-sizeSmall",
                                                      }
                                                    }
                                                    component="div"
                                                    edge="end"
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      aria-hidden={true}
                                                      centerRipple={true}
                                                      className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                      component="div"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        aria-hidden={true}
                                                        centerRipple={true}
                                                        className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                        classes={
                                                          Object {
                                                            "disabled": "PodBrowser-disabled",
                                                            "focusVisible": "PodBrowser-focusVisible",
                                                            "root": "PodBrowser-root",
                                                          }
                                                        }
                                                        component="div"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <div
                                                          aria-disabled={false}
                                                          aria-hidden={true}
                                                          className="PodBrowser-root PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          role={null}
                                                          tabIndex={null}
                                                        >
                                                          <span
                                                            className="PodBrowser-label"
                                                          >
                                                            <ExpandMoreIcon>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "PodBrowser-colorAction",
                                                                      "colorDisabled": "PodBrowser-colorDisabled",
                                                                      "colorError": "PodBrowser-colorError",
                                                                      "colorPrimary": "PodBrowser-colorPrimary",
                                                                      "colorSecondary": "PodBrowser-colorSecondary",
                                                                      "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                      "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                      "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                      "root": "PodBrowser-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="PodBrowser-root"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ExpandMoreIcon>
                                                          </span>
                                                          <WithStyles(memo)
                                                            center={true}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={true}
                                                              classes={
                                                                Object {
                                                                  "child": "PodBrowser-child",
                                                                  "childLeaving": "PodBrowser-childLeaving",
                                                                  "childPulsate": "PodBrowser-childPulsate",
                                                                  "ripple": "PodBrowser-ripple",
                                                                  "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                  "rippleVisible": "PodBrowser-rippleVisible",
                                                                  "root": "PodBrowser-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="PodBrowser-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </div>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </div>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(AccordionSummary)>
                                      </WithStyles(ForwardRef(AccordionSummary))>
                                      <WithStyles(ForwardRef(Collapse))
                                        in={false}
                                        timeout="auto"
                                      >
                                        <ForwardRef(Collapse)
                                          classes={
                                            Object {
                                              "container": "PodBrowser-container",
                                              "entered": "PodBrowser-entered",
                                              "hidden": "PodBrowser-hidden",
                                              "wrapper": "PodBrowser-wrapper",
                                              "wrapperInner": "PodBrowser-wrapperInner",
                                            }
                                          }
                                          in={false}
                                          timeout="auto"
                                        >
                                          <Transition
                                            addEndListener={[Function]}
                                            appear={false}
                                            enter={true}
                                            exit={true}
                                            in={false}
                                            mountOnEnter={false}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            timeout={null}
                                            unmountOnExit={false}
                                          >
                                            <div
                                              className="PodBrowser-container PodBrowser-hidden"
                                              style={
                                                Object {
                                                  "minHeight": "0px",
                                                }
                                              }
                                            >
                                              <div
                                                className="PodBrowser-wrapper"
                                              >
                                                <div
                                                  className="PodBrowser-wrapperInner"
                                                >
                                                  <div
                                                    role="region"
                                                  >
                                                    <WithStyles(ForwardRef(AccordionDetails))
                                                      className="PodBrowser-accordionDetails"
                                                      key=".1"
                                                    >
                                                      <ForwardRef(AccordionDetails)
                                                        className="PodBrowser-accordionDetails"
                                                        classes={
                                                          Object {
                                                            "root": "PodBrowser-root",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="PodBrowser-root PodBrowser-accordionDetails"
                                                        >
                                                          <section
                                                            className="PodBrowser-centeredSection"
                                                          >
                                                            <WithStyles(ForwardRef(List))>
                                                              <ForwardRef(List)
                                                                classes={
                                                                  Object {
                                                                    "dense": "PodBrowser-dense",
                                                                    "padding": "PodBrowser-padding",
                                                                    "root": "PodBrowser-root",
                                                                    "subheader": "PodBrowser-subheader",
                                                                  }
                                                                }
                                                              >
                                                                <ul
                                                                  className="PodBrowser-root PodBrowser-padding"
                                                                >
                                                                  <WithStyles(ForwardRef(ListItem))>
                                                                    <ForwardRef(ListItem)
                                                                      classes={
                                                                        Object {
                                                                          "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                          "button": "PodBrowser-button",
                                                                          "container": "PodBrowser-container",
                                                                          "dense": "PodBrowser-dense",
                                                                          "disabled": "PodBrowser-disabled",
                                                                          "divider": "PodBrowser-divider",
                                                                          "focusVisible": "PodBrowser-focusVisible",
                                                                          "gutters": "PodBrowser-gutters",
                                                                          "root": "PodBrowser-root",
                                                                          "secondaryAction": "PodBrowser-secondaryAction",
                                                                          "selected": "PodBrowser-selected",
                                                                        }
                                                                      }
                                                                    >
                                                                      <li
                                                                        className="PodBrowser-root PodBrowser-gutters"
                                                                        disabled={false}
                                                                      >
                                                                        <WithStyles(ForwardRef(Typography))
                                                                          className="PodBrowser-detailText"
                                                                          key=".0"
                                                                        >
                                                                          <ForwardRef(Typography)
                                                                            className="PodBrowser-detailText"
                                                                            classes={
                                                                              Object {
                                                                                "alignCenter": "PodBrowser-alignCenter",
                                                                                "alignJustify": "PodBrowser-alignJustify",
                                                                                "alignLeft": "PodBrowser-alignLeft",
                                                                                "alignRight": "PodBrowser-alignRight",
                                                                                "body1": "PodBrowser-body1",
                                                                                "body2": "PodBrowser-body2",
                                                                                "button": "PodBrowser-button",
                                                                                "caption": "PodBrowser-caption",
                                                                                "colorError": "PodBrowser-colorError",
                                                                                "colorInherit": "PodBrowser-colorInherit",
                                                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                                "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                                "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                                "displayBlock": "PodBrowser-displayBlock",
                                                                                "displayInline": "PodBrowser-displayInline",
                                                                                "gutterBottom": "PodBrowser-gutterBottom",
                                                                                "h1": "PodBrowser-h1",
                                                                                "h2": "PodBrowser-h2",
                                                                                "h3": "PodBrowser-h3",
                                                                                "h4": "PodBrowser-h4",
                                                                                "h5": "PodBrowser-h5",
                                                                                "h6": "PodBrowser-h6",
                                                                                "noWrap": "PodBrowser-noWrap",
                                                                                "overline": "PodBrowser-overline",
                                                                                "paragraph": "PodBrowser-paragraph",
                                                                                "root": "PodBrowser-root",
                                                                                "srOnly": "PodBrowser-srOnly",
                                                                                "subtitle1": "PodBrowser-subtitle1",
                                                                                "subtitle2": "PodBrowser-subtitle2",
                                                                              }
                                                                            }
                                                                          >
                                                                            <p
                                                                              className="PodBrowser-root PodBrowser-detailText PodBrowser-body1"
                                                                            >
                                                                              Thing Type:
                                                                            </p>
                                                                          </ForwardRef(Typography)>
                                                                        </WithStyles(ForwardRef(Typography))>
                                                                        <WithStyles(ForwardRef(Typography))
                                                                          className="PodBrowser-typeValue PodBrowser-detailText"
                                                                          key=".1"
                                                                        >
                                                                          <ForwardRef(Typography)
                                                                            className="PodBrowser-typeValue PodBrowser-detailText"
                                                                            classes={
                                                                              Object {
                                                                                "alignCenter": "PodBrowser-alignCenter",
                                                                                "alignJustify": "PodBrowser-alignJustify",
                                                                                "alignLeft": "PodBrowser-alignLeft",
                                                                                "alignRight": "PodBrowser-alignRight",
                                                                                "body1": "PodBrowser-body1",
                                                                                "body2": "PodBrowser-body2",
                                                                                "button": "PodBrowser-button",
                                                                                "caption": "PodBrowser-caption",
                                                                                "colorError": "PodBrowser-colorError",
                                                                                "colorInherit": "PodBrowser-colorInherit",
                                                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                                "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                                "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                                "displayBlock": "PodBrowser-displayBlock",
                                                                                "displayInline": "PodBrowser-displayInline",
                                                                                "gutterBottom": "PodBrowser-gutterBottom",
                                                                                "h1": "PodBrowser-h1",
                                                                                "h2": "PodBrowser-h2",
                                                                                "h3": "PodBrowser-h3",
                                                                                "h4": "PodBrowser-h4",
                                                                                "h5": "PodBrowser-h5",
                                                                                "h6": "PodBrowser-h6",
                                                                                "noWrap": "PodBrowser-noWrap",
                                                                                "overline": "PodBrowser-overline",
                                                                                "paragraph": "PodBrowser-paragraph",
                                                                                "root": "PodBrowser-root",
                                                                                "srOnly": "PodBrowser-srOnly",
                                                                                "subtitle1": "PodBrowser-subtitle1",
                                                                                "subtitle2": "PodBrowser-subtitle2",
                                                                              }
                                                                            }
                                                                          >
                                                                            <p
                                                                              className="PodBrowser-root PodBrowser-typeValue PodBrowser-detailText PodBrowser-body1"
                                                                            >
                                                                              text/turtle
                                                                            </p>
                                                                          </ForwardRef(Typography)>
                                                                        </WithStyles(ForwardRef(Typography))>
                                                                      </li>
                                                                    </ForwardRef(ListItem)>
                                                                  </WithStyles(ForwardRef(ListItem))>
                                                                </ul>
                                                              </ForwardRef(List)>
                                                            </WithStyles(ForwardRef(List))>
                                                          </section>
                                                        </div>
                                                      </ForwardRef(AccordionDetails)>
                                                    </WithStyles(ForwardRef(AccordionDetails))>
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </Transition>
                                        </ForwardRef(Collapse)>
                                      </WithStyles(ForwardRef(Collapse))>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </ForwardRef(Accordion)>
                            </WithStyles(ForwardRef(Accordion))>
                            <WithStyles(ForwardRef(Accordion))>
                              <ForwardRef(Accordion)
                                classes={
                                  Object {
                                    "disabled": "PodBrowser-disabled",
                                    "expanded": "PodBrowser-expanded",
                                    "root": "PodBrowser-root",
                                    "rounded": "PodBrowser-rounded",
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Paper))
                                  className="PodBrowser-root PodBrowser-rounded"
                                  square={false}
                                >
                                  <ForwardRef(Paper)
                                    className="PodBrowser-root PodBrowser-rounded"
                                    classes={
                                      Object {
                                        "elevation0": "PodBrowser-elevation0",
                                        "elevation1": "PodBrowser-elevation1",
                                        "elevation10": "PodBrowser-elevation10",
                                        "elevation11": "PodBrowser-elevation11",
                                        "elevation12": "PodBrowser-elevation12",
                                        "elevation13": "PodBrowser-elevation13",
                                        "elevation14": "PodBrowser-elevation14",
                                        "elevation15": "PodBrowser-elevation15",
                                        "elevation16": "PodBrowser-elevation16",
                                        "elevation17": "PodBrowser-elevation17",
                                        "elevation18": "PodBrowser-elevation18",
                                        "elevation19": "PodBrowser-elevation19",
                                        "elevation2": "PodBrowser-elevation2",
                                        "elevation20": "PodBrowser-elevation20",
                                        "elevation21": "PodBrowser-elevation21",
                                        "elevation22": "PodBrowser-elevation22",
                                        "elevation23": "PodBrowser-elevation23",
                                        "elevation24": "PodBrowser-elevation24",
                                        "elevation3": "PodBrowser-elevation3",
                                        "elevation4": "PodBrowser-elevation4",
                                        "elevation5": "PodBrowser-elevation5",
                                        "elevation6": "PodBrowser-elevation6",
                                        "elevation7": "PodBrowser-elevation7",
                                        "elevation8": "PodBrowser-elevation8",
                                        "elevation9": "PodBrowser-elevation9",
                                        "outlined": "PodBrowser-outlined",
                                        "root": "PodBrowser-root",
                                        "rounded": "PodBrowser-rounded",
                                      }
                                    }
                                    square={false}
                                  >
                                    <div
                                      className="PodBrowser-root PodBrowser-root PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                                    >
                                      <WithStyles(ForwardRef(AccordionSummary))
                                        data-testid="accordion-resource-permissions-trigger"
                                        expandIcon={<Memo(ExpandMoreIcon) />}
                                        key=".0"
                                      >
                                        <ForwardRef(AccordionSummary)
                                          classes={
                                            Object {
                                              "content": "PodBrowser-content",
                                              "disabled": "PodBrowser-disabled",
                                              "expandIcon": "PodBrowser-expandIcon",
                                              "expanded": "PodBrowser-expanded",
                                              "focused": "PodBrowser-focused",
                                              "root": "PodBrowser-root",
                                            }
                                          }
                                          data-testid="accordion-resource-permissions-trigger"
                                          expandIcon={<Memo(ExpandMoreIcon) />}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            aria-expanded={false}
                                            className="PodBrowser-root"
                                            component="div"
                                            data-testid="accordion-resource-permissions-trigger"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocusVisible={[Function]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              aria-expanded={false}
                                              className="PodBrowser-root"
                                              classes={
                                                Object {
                                                  "disabled": "PodBrowser-disabled",
                                                  "focusVisible": "PodBrowser-focusVisible",
                                                  "root": "PodBrowser-root",
                                                }
                                              }
                                              component="div"
                                              data-testid="accordion-resource-permissions-trigger"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocusVisible={[Function]}
                                            >
                                              <div
                                                aria-disabled={false}
                                                aria-expanded={false}
                                                className="PodBrowser-root PodBrowser-root"
                                                data-testid="accordion-resource-permissions-trigger"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                role="button"
                                                tabIndex={0}
                                              >
                                                <div
                                                  className="PodBrowser-content"
                                                >
                                                  Permissions
                                                </div>
                                                <WithStyles(ForwardRef(IconButton))
                                                  aria-hidden={true}
                                                  className="PodBrowser-expandIcon"
                                                  component="div"
                                                  edge="end"
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <ForwardRef(IconButton)
                                                    aria-hidden={true}
                                                    className="PodBrowser-expandIcon"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "PodBrowser-colorInherit",
                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                        "disabled": "PodBrowser-disabled",
                                                        "edgeEnd": "PodBrowser-edgeEnd",
                                                        "edgeStart": "PodBrowser-edgeStart",
                                                        "label": "PodBrowser-label",
                                                        "root": "PodBrowser-root",
                                                        "sizeSmall": "PodBrowser-sizeSmall",
                                                      }
                                                    }
                                                    component="div"
                                                    edge="end"
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      aria-hidden={true}
                                                      centerRipple={true}
                                                      className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                      component="div"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        aria-hidden={true}
                                                        centerRipple={true}
                                                        className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                        classes={
                                                          Object {
                                                            "disabled": "PodBrowser-disabled",
                                                            "focusVisible": "PodBrowser-focusVisible",
                                                            "root": "PodBrowser-root",
                                                          }
                                                        }
                                                        component="div"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <div
                                                          aria-disabled={false}
                                                          aria-hidden={true}
                                                          className="PodBrowser-root PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          role={null}
                                                          tabIndex={null}
                                                        >
                                                          <span
                                                            className="PodBrowser-label"
                                                          >
                                                            <ExpandMoreIcon>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "PodBrowser-colorAction",
                                                                      "colorDisabled": "PodBrowser-colorDisabled",
                                                                      "colorError": "PodBrowser-colorError",
                                                                      "colorPrimary": "PodBrowser-colorPrimary",
                                                                      "colorSecondary": "PodBrowser-colorSecondary",
                                                                      "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                      "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                      "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                      "root": "PodBrowser-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="PodBrowser-root"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ExpandMoreIcon>
                                                          </span>
                                                          <WithStyles(memo)
                                                            center={true}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={true}
                                                              classes={
                                                                Object {
                                                                  "child": "PodBrowser-child",
                                                                  "childLeaving": "PodBrowser-childLeaving",
                                                                  "childPulsate": "PodBrowser-childPulsate",
                                                                  "ripple": "PodBrowser-ripple",
                                                                  "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                  "rippleVisible": "PodBrowser-rippleVisible",
                                                                  "root": "PodBrowser-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="PodBrowser-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </div>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </div>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(AccordionSummary)>
                                      </WithStyles(ForwardRef(AccordionSummary))>
                                      <WithStyles(ForwardRef(Collapse))
                                        in={false}
                                        timeout="auto"
                                      >
                                        <ForwardRef(Collapse)
                                          classes={
                                            Object {
                                              "container": "PodBrowser-container",
                                              "entered": "PodBrowser-entered",
                                              "hidden": "PodBrowser-hidden",
                                              "wrapper": "PodBrowser-wrapper",
                                              "wrapperInner": "PodBrowser-wrapperInner",
                                            }
                                          }
                                          in={false}
                                          timeout="auto"
                                        >
                                          <Transition
                                            addEndListener={[Function]}
                                            appear={false}
                                            enter={true}
                                            exit={true}
                                            in={false}
                                            mountOnEnter={false}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            timeout={null}
                                            unmountOnExit={false}
                                          >
                                            <div
                                              className="PodBrowser-container PodBrowser-hidden"
                                              style={
                                                Object {
                                                  "minHeight": "0px",
                                                }
                                              }
                                            >
                                              <div
                                                className="PodBrowser-wrapper"
                                              >
                                                <div
                                                  className="PodBrowser-wrapperInner"
                                                >
                                                  <div
                                                    role="region"
                                                  >
                                                    <WithStyles(ForwardRef(AccordionDetails))
                                                      className="PodBrowser-accordionDetails"
                                                      key=".1"
                                                    >
                                                      <ForwardRef(AccordionDetails)
                                                        className="PodBrowser-accordionDetails"
                                                        classes={
                                                          Object {
                                                            "root": "PodBrowser-root",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="PodBrowser-root PodBrowser-accordionDetails"
                                                        >
                                                          <ResourceSharing
                                                            startLoading={false}
                                                          >
                                                            <ActionMenu>
                                                              <ul
                                                                className="PodBrowser-action-menu"
                                                              >
                                                                <ActionMenuItem>
                                                                  <li
                                                                    className="PodBrowser-action-menu__item"
                                                                  >
                                                                    <AddPermissionUsingWebIdButton
                                                                      className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--prompt"
                                                                      onLoading={[Function]}
                                                                    >
                                                                      <button
                                                                        className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--prompt"
                                                                        data-testid="permissions-add-user-with-webid-button"
                                                                        onClick={[Function]}
                                                                        type="button"
                                                                      >
                                                                        Add with WebId
                                                                      </button>
                                                                      <WithStyles(ForwardRef(Popover))
                                                                        anchorEl={null}
                                                                        anchorOrigin={
                                                                          Object {
                                                                            "horizontal": "center",
                                                                            "vertical": "bottom",
                                                                          }
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "paper": "PodBrowser-paper",
                                                                          }
                                                                        }
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                        transformOrigin={
                                                                          Object {
                                                                            "horizontal": "center",
                                                                            "vertical": "top",
                                                                          }
                                                                        }
                                                                      >
                                                                        <ForwardRef(Popover)
                                                                          anchorEl={null}
                                                                          anchorOrigin={
                                                                            Object {
                                                                              "horizontal": "center",
                                                                              "vertical": "bottom",
                                                                            }
                                                                          }
                                                                          classes={
                                                                            Object {
                                                                              "paper": "PodBrowser-paper PodBrowser-paper",
                                                                              "root": "PodBrowser-root",
                                                                            }
                                                                          }
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                          transformOrigin={
                                                                            Object {
                                                                              "horizontal": "center",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                        >
                                                                          <ForwardRef(Modal)
                                                                            BackdropProps={
                                                                              Object {
                                                                                "invisible": true,
                                                                              }
                                                                            }
                                                                            className="PodBrowser-root"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                          />
                                                                        </ForwardRef(Popover)>
                                                                      </WithStyles(ForwardRef(Popover))>
                                                                    </AddPermissionUsingWebIdButton>
                                                                  </li>
                                                                </ActionMenuItem>
                                                              </ul>
                                                            </ActionMenu>
                                                            <WithStyles(ForwardRef(Accordion))
                                                              defaultExpanded={true}
                                                            >
                                                              <ForwardRef(Accordion)
                                                                classes={
                                                                  Object {
                                                                    "disabled": "PodBrowser-disabled",
                                                                    "expanded": "PodBrowser-expanded",
                                                                    "root": "PodBrowser-root",
                                                                    "rounded": "PodBrowser-rounded",
                                                                  }
                                                                }
                                                                defaultExpanded={true}
                                                              >
                                                                <WithStyles(ForwardRef(Paper))
                                                                  className="PodBrowser-root PodBrowser-expanded PodBrowser-rounded"
                                                                  square={false}
                                                                >
                                                                  <ForwardRef(Paper)
                                                                    className="PodBrowser-root PodBrowser-expanded PodBrowser-rounded"
                                                                    classes={
                                                                      Object {
                                                                        "elevation0": "PodBrowser-elevation0",
                                                                        "elevation1": "PodBrowser-elevation1",
                                                                        "elevation10": "PodBrowser-elevation10",
                                                                        "elevation11": "PodBrowser-elevation11",
                                                                        "elevation12": "PodBrowser-elevation12",
                                                                        "elevation13": "PodBrowser-elevation13",
                                                                        "elevation14": "PodBrowser-elevation14",
                                                                        "elevation15": "PodBrowser-elevation15",
                                                                        "elevation16": "PodBrowser-elevation16",
                                                                        "elevation17": "PodBrowser-elevation17",
                                                                        "elevation18": "PodBrowser-elevation18",
                                                                        "elevation19": "PodBrowser-elevation19",
                                                                        "elevation2": "PodBrowser-elevation2",
                                                                        "elevation20": "PodBrowser-elevation20",
                                                                        "elevation21": "PodBrowser-elevation21",
                                                                        "elevation22": "PodBrowser-elevation22",
                                                                        "elevation23": "PodBrowser-elevation23",
                                                                        "elevation24": "PodBrowser-elevation24",
                                                                        "elevation3": "PodBrowser-elevation3",
                                                                        "elevation4": "PodBrowser-elevation4",
                                                                        "elevation5": "PodBrowser-elevation5",
                                                                        "elevation6": "PodBrowser-elevation6",
                                                                        "elevation7": "PodBrowser-elevation7",
                                                                        "elevation8": "PodBrowser-elevation8",
                                                                        "elevation9": "PodBrowser-elevation9",
                                                                        "outlined": "PodBrowser-outlined",
                                                                        "root": "PodBrowser-root",
                                                                        "rounded": "PodBrowser-rounded",
                                                                      }
                                                                    }
                                                                    square={false}
                                                                  >
                                                                    <div
                                                                      className="PodBrowser-root PodBrowser-root PodBrowser-expanded PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                                                                    >
                                                                      <WithStyles(ForwardRef(AccordionSummary))
                                                                        expandIcon={<Memo(ExpandMoreIcon) />}
                                                                        key=".0"
                                                                      >
                                                                        <ForwardRef(AccordionSummary)
                                                                          classes={
                                                                            Object {
                                                                              "content": "PodBrowser-content",
                                                                              "disabled": "PodBrowser-disabled",
                                                                              "expandIcon": "PodBrowser-expandIcon",
                                                                              "expanded": "PodBrowser-expanded",
                                                                              "focused": "PodBrowser-focused",
                                                                              "root": "PodBrowser-root",
                                                                            }
                                                                          }
                                                                          expandIcon={<Memo(ExpandMoreIcon) />}
                                                                        >
                                                                          <WithStyles(ForwardRef(ButtonBase))
                                                                            aria-expanded={true}
                                                                            className="PodBrowser-root PodBrowser-expanded"
                                                                            component="div"
                                                                            disableRipple={true}
                                                                            disabled={false}
                                                                            focusRipple={false}
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onFocusVisible={[Function]}
                                                                          >
                                                                            <ForwardRef(ButtonBase)
                                                                              aria-expanded={true}
                                                                              className="PodBrowser-root PodBrowser-expanded"
                                                                              classes={
                                                                                Object {
                                                                                  "disabled": "PodBrowser-disabled",
                                                                                  "focusVisible": "PodBrowser-focusVisible",
                                                                                  "root": "PodBrowser-root",
                                                                                }
                                                                              }
                                                                              component="div"
                                                                              disableRipple={true}
                                                                              disabled={false}
                                                                              focusRipple={false}
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onFocusVisible={[Function]}
                                                                            >
                                                                              <div
                                                                                aria-disabled={false}
                                                                                aria-expanded={true}
                                                                                className="PodBrowser-root PodBrowser-root PodBrowser-expanded"
                                                                                onBlur={[Function]}
                                                                                onClick={[Function]}
                                                                                onDragLeave={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                onMouseLeave={[Function]}
                                                                                onMouseUp={[Function]}
                                                                                onTouchEnd={[Function]}
                                                                                onTouchMove={[Function]}
                                                                                onTouchStart={[Function]}
                                                                                role="button"
                                                                                tabIndex={0}
                                                                              >
                                                                                <div
                                                                                  className="PodBrowser-content PodBrowser-expanded"
                                                                                >
                                                                                  Individual permissions
                                                                                </div>
                                                                                <WithStyles(ForwardRef(IconButton))
                                                                                  aria-hidden={true}
                                                                                  className="PodBrowser-expandIcon PodBrowser-expanded"
                                                                                  component="div"
                                                                                  edge="end"
                                                                                  role={null}
                                                                                  tabIndex={null}
                                                                                >
                                                                                  <ForwardRef(IconButton)
                                                                                    aria-hidden={true}
                                                                                    className="PodBrowser-expandIcon PodBrowser-expanded"
                                                                                    classes={
                                                                                      Object {
                                                                                        "colorInherit": "PodBrowser-colorInherit",
                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                        "disabled": "PodBrowser-disabled",
                                                                                        "edgeEnd": "PodBrowser-edgeEnd",
                                                                                        "edgeStart": "PodBrowser-edgeStart",
                                                                                        "label": "PodBrowser-label",
                                                                                        "root": "PodBrowser-root",
                                                                                        "sizeSmall": "PodBrowser-sizeSmall",
                                                                                      }
                                                                                    }
                                                                                    component="div"
                                                                                    edge="end"
                                                                                    role={null}
                                                                                    tabIndex={null}
                                                                                  >
                                                                                    <WithStyles(ForwardRef(ButtonBase))
                                                                                      aria-hidden={true}
                                                                                      centerRipple={true}
                                                                                      className="PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                                                      component="div"
                                                                                      disabled={false}
                                                                                      focusRipple={true}
                                                                                      role={null}
                                                                                      tabIndex={null}
                                                                                    >
                                                                                      <ForwardRef(ButtonBase)
                                                                                        aria-hidden={true}
                                                                                        centerRipple={true}
                                                                                        className="PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                                                        classes={
                                                                                          Object {
                                                                                            "disabled": "PodBrowser-disabled",
                                                                                            "focusVisible": "PodBrowser-focusVisible",
                                                                                            "root": "PodBrowser-root",
                                                                                          }
                                                                                        }
                                                                                        component="div"
                                                                                        disabled={false}
                                                                                        focusRipple={true}
                                                                                        role={null}
                                                                                        tabIndex={null}
                                                                                      >
                                                                                        <div
                                                                                          aria-disabled={false}
                                                                                          aria-hidden={true}
                                                                                          className="PodBrowser-root PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                                                          onBlur={[Function]}
                                                                                          onDragLeave={[Function]}
                                                                                          onFocus={[Function]}
                                                                                          onKeyDown={[Function]}
                                                                                          onKeyUp={[Function]}
                                                                                          onMouseDown={[Function]}
                                                                                          onMouseLeave={[Function]}
                                                                                          onMouseUp={[Function]}
                                                                                          onTouchEnd={[Function]}
                                                                                          onTouchMove={[Function]}
                                                                                          onTouchStart={[Function]}
                                                                                          role={null}
                                                                                          tabIndex={null}
                                                                                        >
                                                                                          <span
                                                                                            className="PodBrowser-label"
                                                                                          >
                                                                                            <ExpandMoreIcon>
                                                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                                                <ForwardRef(SvgIcon)
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "colorAction": "PodBrowser-colorAction",
                                                                                                      "colorDisabled": "PodBrowser-colorDisabled",
                                                                                                      "colorError": "PodBrowser-colorError",
                                                                                                      "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                      "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                      "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                                                      "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                                                      "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                                                      "root": "PodBrowser-root",
                                                                                                    }
                                                                                                  }
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden={true}
                                                                                                    className="PodBrowser-root"
                                                                                                    focusable="false"
                                                                                                    viewBox="0 0 24 24"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </ForwardRef(SvgIcon)>
                                                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                                                            </ExpandMoreIcon>
                                                                                          </span>
                                                                                          <WithStyles(memo)
                                                                                            center={true}
                                                                                          >
                                                                                            <ForwardRef(TouchRipple)
                                                                                              center={true}
                                                                                              classes={
                                                                                                Object {
                                                                                                  "child": "PodBrowser-child",
                                                                                                  "childLeaving": "PodBrowser-childLeaving",
                                                                                                  "childPulsate": "PodBrowser-childPulsate",
                                                                                                  "ripple": "PodBrowser-ripple",
                                                                                                  "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                                                  "rippleVisible": "PodBrowser-rippleVisible",
                                                                                                  "root": "PodBrowser-root",
                                                                                                }
                                                                                              }
                                                                                            >
                                                                                              <span
                                                                                                className="PodBrowser-root"
                                                                                              >
                                                                                                <TransitionGroup
                                                                                                  childFactory={[Function]}
                                                                                                  component={null}
                                                                                                  exit={true}
                                                                                                />
                                                                                              </span>
                                                                                            </ForwardRef(TouchRipple)>
                                                                                          </WithStyles(memo)>
                                                                                        </div>
                                                                                      </ForwardRef(ButtonBase)>
                                                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                                                  </ForwardRef(IconButton)>
                                                                                </WithStyles(ForwardRef(IconButton))>
                                                                              </div>
                                                                            </ForwardRef(ButtonBase)>
                                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                                        </ForwardRef(AccordionSummary)>
                                                                      </WithStyles(ForwardRef(AccordionSummary))>
                                                                      <WithStyles(ForwardRef(Collapse))
                                                                        in={true}
                                                                        timeout="auto"
                                                                      >
                                                                        <ForwardRef(Collapse)
                                                                          classes={
                                                                            Object {
                                                                              "container": "PodBrowser-container",
                                                                              "entered": "PodBrowser-entered",
                                                                              "hidden": "PodBrowser-hidden",
                                                                              "wrapper": "PodBrowser-wrapper",
                                                                              "wrapperInner": "PodBrowser-wrapperInner",
                                                                            }
                                                                          }
                                                                          in={true}
                                                                          timeout="auto"
                                                                        >
                                                                          <Transition
                                                                            addEndListener={[Function]}
                                                                            appear={false}
                                                                            enter={true}
                                                                            exit={true}
                                                                            in={true}
                                                                            mountOnEnter={false}
                                                                            onEnter={[Function]}
                                                                            onEntered={[Function]}
                                                                            onEntering={[Function]}
                                                                            onExit={[Function]}
                                                                            onExited={[Function]}
                                                                            onExiting={[Function]}
                                                                            timeout={null}
                                                                            unmountOnExit={false}
                                                                          >
                                                                            <div
                                                                              className="PodBrowser-container PodBrowser-entered"
                                                                              style={
                                                                                Object {
                                                                                  "minHeight": "0px",
                                                                                }
                                                                              }
                                                                            >
                                                                              <div
                                                                                className="PodBrowser-wrapper"
                                                                              >
                                                                                <div
                                                                                  className="PodBrowser-wrapperInner"
                                                                                >
                                                                                  <div
                                                                                    role="region"
                                                                                  >
                                                                                    <WithStyles(ForwardRef(AccordionDetails))
                                                                                      className="PodBrowser-details"
                                                                                      key=".1"
                                                                                    >
                                                                                      <ForwardRef(AccordionDetails)
                                                                                        className="PodBrowser-details"
                                                                                        classes={
                                                                                          Object {
                                                                                            "root": "PodBrowser-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <div
                                                                                          className="PodBrowser-root PodBrowser-details"
                                                                                        >
                                                                                          <AgentAccessList
                                                                                            onLoading={[Function]}
                                                                                          >
                                                                                            <WithStyles(ForwardRef(CircularProgress))
                                                                                              color="primary"
                                                                                            >
                                                                                              <ForwardRef(CircularProgress)
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "circle": "PodBrowser-circle",
                                                                                                    "circleDisableShrink": "PodBrowser-circleDisableShrink",
                                                                                                    "circleIndeterminate": "PodBrowser-circleIndeterminate",
                                                                                                    "circleStatic": "PodBrowser-circleStatic",
                                                                                                    "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                    "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                    "indeterminate": "PodBrowser-indeterminate",
                                                                                                    "root": "PodBrowser-root",
                                                                                                    "static": "PodBrowser-static",
                                                                                                    "svg": "PodBrowser-svg",
                                                                                                  }
                                                                                                }
                                                                                                color="primary"
                                                                                              >
                                                                                                <div
                                                                                                  className="PodBrowser-root PodBrowser-colorPrimary PodBrowser-indeterminate"
                                                                                                  role="progressbar"
                                                                                                  style={
                                                                                                    Object {
                                                                                                      "height": 40,
                                                                                                      "width": 40,
                                                                                                    }
                                                                                                  }
                                                                                                >
                                                                                                  <svg
                                                                                                    className="PodBrowser-svg"
                                                                                                    viewBox="22 22 44 44"
                                                                                                  >
                                                                                                    <circle
                                                                                                      className="PodBrowser-circle PodBrowser-circleIndeterminate"
                                                                                                      cx={44}
                                                                                                      cy={44}
                                                                                                      fill="none"
                                                                                                      r={20.2}
                                                                                                      strokeWidth={3.6}
                                                                                                      style={Object {}}
                                                                                                    />
                                                                                                  </svg>
                                                                                                </div>
                                                                                              </ForwardRef(CircularProgress)>
                                                                                            </WithStyles(ForwardRef(CircularProgress))>
                                                                                          </AgentAccessList>
                                                                                        </div>
                                                                                      </ForwardRef(AccordionDetails)>
                                                                                    </WithStyles(ForwardRef(AccordionDetails))>
                                                                                  </div>
                                                                                </div>
                                                                              </div>
                                                                            </div>
                                                                          </Transition>
                                                                        </ForwardRef(Collapse)>
                                                                      </WithStyles(ForwardRef(Collapse))>
                                                                    </div>
                                                                  </ForwardRef(Paper)>
                                                                </WithStyles(ForwardRef(Paper))>
                                                              </ForwardRef(Accordion)>
                                                            </WithStyles(ForwardRef(Accordion))>
                                                          </ResourceSharing>
                                                        </div>
                                                      </ForwardRef(AccordionDetails)>
                                                    </WithStyles(ForwardRef(AccordionDetails))>
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </Transition>
                                        </ForwardRef(Collapse)>
                                      </WithStyles(ForwardRef(Collapse))>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </ForwardRef(Accordion)>
                            </WithStyles(ForwardRef(Accordion))>
                          </ResourceDetails>
                        </E>
                      </AccessControlProvider>
                    </div>
                  </div>
                </section>
              </Drawer>
            </ResourceDrawer>
          </DetailsContextMenuProvider>
        </y>
      </MockedSessionContextProvider>
    </ThemeProvider>
  </StylesProvider>
</Component>
`;

exports[`ResourceDrawer view it renders a loading view when context has no iri 1`] = `
<Component
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-ExtraBold": [Function],
        "fonts/Raleway/Raleway-Medium": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#C44539",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#4E4E4E",
          "secondary": "#4E4E4E",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 800,
        "fontWeightLight": 500,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.375rem",
          "fontWeight": 800,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.45,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.125rem",
          "fontWeight": 800,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.27,
        },
        "h3": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.05rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1.2,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.1,
        },
        "h5": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h6": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "0.625rem",
          "fontWeight": 800,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <StylesProvider
    generateClassName={[Function]}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1280,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "iconSet": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "icons": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "label": "SDK Default",
          "licenses": Array [
            "fonts/Raleway/OFL.txt",
          ],
          "localFonts": Object {
            "fonts/Raleway/Raleway-ExtraBold": [Function],
            "fonts/Raleway/Raleway-Medium": [Function],
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "name": "sdk-default",
          "overrides": Object {},
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "adjustAlpha": [Function],
            "augmentColor": [Function],
            "background": Object {
              "default": "#FFFFFF",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#C44539",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(86, 53, 178)",
              "light": "rgb(150, 112, 255)",
              "main": "#7C4DFF",
            },
            "secondary": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#083575",
              "light": "#01C9EA",
              "main": "#18A9E6",
            },
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#4E4E4E",
              "secondary": "#4E4E4E",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {},
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "stylesheets": Array [
            "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
          ],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "body1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 800,
            "fontWeightLight": 500,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.375rem",
              "fontWeight": 800,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.45,
            },
            "h2": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.125rem",
              "fontWeight": 800,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.27,
            },
            "h3": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.05rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1.2,
            },
            "h4": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.1,
            },
            "h5": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1,
            },
            "h6": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "0.625rem",
              "fontWeight": 800,
              "letterSpacing": "0.0075em",
              "lineHeight": 1,
            },
            "heading": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <DetailsContextMenuProvider>
        <ResourceDrawer
          onUpdate={[Function]}
        >
          <Drawer
            close={[Function]}
            open={true}
          >
            <section
              className="PodBrowser-drawer PodBrowser-drawer--open"
            >
              <div
                className="PodBrowser-drawer__content"
              >
                <div
                  className="PodBrowser-drawer__content-wrapper"
                >
                  <div
                    className="PodBrowser-drawer__article"
                  >
                    <ForwardRef
                      onClick={[Function]}
                      variant="text"
                    >
                      <button
                        className="PodBrowser-button PodBrowser-button--text"
                        onClick={[Function]}
                      >
                        <Icon
                          name="cancel"
                        >
                          <span
                            className="PodBrowser-icon-cancel"
                          />
                        </Icon>
                         Close
                      </button>
                    </ForwardRef>
                  </div>
                  <AccessControlProvider
                    accessControl={
                      Object {
                        "deleteFile": [MockFunction],
                        "getPermissions": [MockFunction] {
                          "calls": Array [
                            Array [],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Promise {},
                            },
                          ],
                        },
                        "savePermissionsForAgent": [MockFunction],
                      }
                    }
                  >
                    <E
                      dataset={
                        DatasetCore {
                          "internal_resourceInfo": Object {
                            "contentType": "text/turtle",
                            "isRawData": false,
                            "linkedResources": Object {},
                            "sourceIri": "/iri/",
                          },
                          "quads": Set {},
                        }
                      }
                    >
                      <ResourceDetails
                        onDelete={[Function]}
                      >
                        <section
                          className="PodBrowser-headerSection"
                        >
                          <h3
                            className="PodBrowser-content-h3"
                            data-testid="resource-title"
                            title="/iri/"
                          >
                            iri
                          </h3>
                        </section>
                        <WithStyles(ForwardRef(Divider))>
                          <ForwardRef(Divider)
                            classes={
                              Object {
                                "absolute": "PodBrowser-absolute",
                                "flexItem": "PodBrowser-flexItem",
                                "inset": "PodBrowser-inset",
                                "light": "PodBrowser-light",
                                "middle": "PodBrowser-middle",
                                "root": "PodBrowser-root",
                                "vertical": "PodBrowser-vertical",
                              }
                            }
                          >
                            <hr
                              className="PodBrowser-root"
                            />
                          </ForwardRef(Divider)>
                        </WithStyles(ForwardRef(Divider))>
                        <WithStyles(ForwardRef(Accordion))
                          defaultExpanded={true}
                        >
                          <ForwardRef(Accordion)
                            classes={
                              Object {
                                "disabled": "PodBrowser-disabled",
                                "expanded": "PodBrowser-expanded",
                                "root": "PodBrowser-root",
                                "rounded": "PodBrowser-rounded",
                              }
                            }
                            defaultExpanded={true}
                          >
                            <WithStyles(ForwardRef(Paper))
                              className="PodBrowser-root PodBrowser-expanded PodBrowser-rounded"
                              square={false}
                            >
                              <ForwardRef(Paper)
                                className="PodBrowser-root PodBrowser-expanded PodBrowser-rounded"
                                classes={
                                  Object {
                                    "elevation0": "PodBrowser-elevation0",
                                    "elevation1": "PodBrowser-elevation1",
                                    "elevation10": "PodBrowser-elevation10",
                                    "elevation11": "PodBrowser-elevation11",
                                    "elevation12": "PodBrowser-elevation12",
                                    "elevation13": "PodBrowser-elevation13",
                                    "elevation14": "PodBrowser-elevation14",
                                    "elevation15": "PodBrowser-elevation15",
                                    "elevation16": "PodBrowser-elevation16",
                                    "elevation17": "PodBrowser-elevation17",
                                    "elevation18": "PodBrowser-elevation18",
                                    "elevation19": "PodBrowser-elevation19",
                                    "elevation2": "PodBrowser-elevation2",
                                    "elevation20": "PodBrowser-elevation20",
                                    "elevation21": "PodBrowser-elevation21",
                                    "elevation22": "PodBrowser-elevation22",
                                    "elevation23": "PodBrowser-elevation23",
                                    "elevation24": "PodBrowser-elevation24",
                                    "elevation3": "PodBrowser-elevation3",
                                    "elevation4": "PodBrowser-elevation4",
                                    "elevation5": "PodBrowser-elevation5",
                                    "elevation6": "PodBrowser-elevation6",
                                    "elevation7": "PodBrowser-elevation7",
                                    "elevation8": "PodBrowser-elevation8",
                                    "elevation9": "PodBrowser-elevation9",
                                    "outlined": "PodBrowser-outlined",
                                    "root": "PodBrowser-root",
                                    "rounded": "PodBrowser-rounded",
                                  }
                                }
                                square={false}
                              >
                                <div
                                  className="PodBrowser-root PodBrowser-root PodBrowser-expanded PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                                >
                                  <WithStyles(ForwardRef(AccordionSummary))
                                    data-testid="accordion-resource-actions-trigger"
                                    expandIcon={<Memo(ExpandMoreIcon) />}
                                    key=".0"
                                  >
                                    <ForwardRef(AccordionSummary)
                                      classes={
                                        Object {
                                          "content": "PodBrowser-content",
                                          "disabled": "PodBrowser-disabled",
                                          "expandIcon": "PodBrowser-expandIcon",
                                          "expanded": "PodBrowser-expanded",
                                          "focused": "PodBrowser-focused",
                                          "root": "PodBrowser-root",
                                        }
                                      }
                                      data-testid="accordion-resource-actions-trigger"
                                      expandIcon={<Memo(ExpandMoreIcon) />}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        aria-expanded={true}
                                        className="PodBrowser-root PodBrowser-expanded"
                                        component="div"
                                        data-testid="accordion-resource-actions-trigger"
                                        disableRipple={true}
                                        disabled={false}
                                        focusRipple={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocusVisible={[Function]}
                                      >
                                        <ForwardRef(ButtonBase)
                                          aria-expanded={true}
                                          className="PodBrowser-root PodBrowser-expanded"
                                          classes={
                                            Object {
                                              "disabled": "PodBrowser-disabled",
                                              "focusVisible": "PodBrowser-focusVisible",
                                              "root": "PodBrowser-root",
                                            }
                                          }
                                          component="div"
                                          data-testid="accordion-resource-actions-trigger"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocusVisible={[Function]}
                                        >
                                          <div
                                            aria-disabled={false}
                                            aria-expanded={true}
                                            className="PodBrowser-root PodBrowser-root PodBrowser-expanded"
                                            data-testid="accordion-resource-actions-trigger"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="button"
                                            tabIndex={0}
                                          >
                                            <div
                                              className="PodBrowser-content PodBrowser-expanded"
                                            >
                                              Actions
                                            </div>
                                            <WithStyles(ForwardRef(IconButton))
                                              aria-hidden={true}
                                              className="PodBrowser-expandIcon PodBrowser-expanded"
                                              component="div"
                                              edge="end"
                                              role={null}
                                              tabIndex={null}
                                            >
                                              <ForwardRef(IconButton)
                                                aria-hidden={true}
                                                className="PodBrowser-expandIcon PodBrowser-expanded"
                                                classes={
                                                  Object {
                                                    "colorInherit": "PodBrowser-colorInherit",
                                                    "colorPrimary": "PodBrowser-colorPrimary",
                                                    "colorSecondary": "PodBrowser-colorSecondary",
                                                    "disabled": "PodBrowser-disabled",
                                                    "edgeEnd": "PodBrowser-edgeEnd",
                                                    "edgeStart": "PodBrowser-edgeStart",
                                                    "label": "PodBrowser-label",
                                                    "root": "PodBrowser-root",
                                                    "sizeSmall": "PodBrowser-sizeSmall",
                                                  }
                                                }
                                                component="div"
                                                edge="end"
                                                role={null}
                                                tabIndex={null}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  aria-hidden={true}
                                                  centerRipple={true}
                                                  className="PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                  component="div"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    aria-hidden={true}
                                                    centerRipple={true}
                                                    className="PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                    classes={
                                                      Object {
                                                        "disabled": "PodBrowser-disabled",
                                                        "focusVisible": "PodBrowser-focusVisible",
                                                        "root": "PodBrowser-root",
                                                      }
                                                    }
                                                    component="div"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <div
                                                      aria-disabled={false}
                                                      aria-hidden={true}
                                                      className="PodBrowser-root PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                      onBlur={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <span
                                                        className="PodBrowser-label"
                                                      >
                                                        <ExpandMoreIcon>
                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "PodBrowser-colorAction",
                                                                  "colorDisabled": "PodBrowser-colorDisabled",
                                                                  "colorError": "PodBrowser-colorError",
                                                                  "colorPrimary": "PodBrowser-colorPrimary",
                                                                  "colorSecondary": "PodBrowser-colorSecondary",
                                                                  "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                  "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                  "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                  "root": "PodBrowser-root",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="PodBrowser-root"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ExpandMoreIcon>
                                                      </span>
                                                      <WithStyles(memo)
                                                        center={true}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={true}
                                                          classes={
                                                            Object {
                                                              "child": "PodBrowser-child",
                                                              "childLeaving": "PodBrowser-childLeaving",
                                                              "childPulsate": "PodBrowser-childPulsate",
                                                              "ripple": "PodBrowser-ripple",
                                                              "ripplePulsate": "PodBrowser-ripplePulsate",
                                                              "rippleVisible": "PodBrowser-rippleVisible",
                                                              "root": "PodBrowser-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="PodBrowser-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </div>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(IconButton)>
                                            </WithStyles(ForwardRef(IconButton))>
                                          </div>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(AccordionSummary)>
                                  </WithStyles(ForwardRef(AccordionSummary))>
                                  <WithStyles(ForwardRef(Collapse))
                                    in={true}
                                    timeout="auto"
                                  >
                                    <ForwardRef(Collapse)
                                      classes={
                                        Object {
                                          "container": "PodBrowser-container",
                                          "entered": "PodBrowser-entered",
                                          "hidden": "PodBrowser-hidden",
                                          "wrapper": "PodBrowser-wrapper",
                                          "wrapperInner": "PodBrowser-wrapperInner",
                                        }
                                      }
                                      in={true}
                                      timeout="auto"
                                    >
                                      <Transition
                                        addEndListener={[Function]}
                                        appear={false}
                                        enter={true}
                                        exit={true}
                                        in={true}
                                        mountOnEnter={false}
                                        onEnter={[Function]}
                                        onEntered={[Function]}
                                        onEntering={[Function]}
                                        onExit={[Function]}
                                        onExited={[Function]}
                                        onExiting={[Function]}
                                        timeout={null}
                                        unmountOnExit={false}
                                      >
                                        <div
                                          className="PodBrowser-container PodBrowser-entered"
                                          style={
                                            Object {
                                              "minHeight": "0px",
                                            }
                                          }
                                        >
                                          <div
                                            className="PodBrowser-wrapper"
                                          >
                                            <div
                                              className="PodBrowser-wrapperInner"
                                            >
                                              <div
                                                role="region"
                                              >
                                                <WithStyles(ForwardRef(AccordionDetails))
                                                  className="PodBrowser-accordionDetails"
                                                  key=".1"
                                                >
                                                  <ForwardRef(AccordionDetails)
                                                    className="PodBrowser-accordionDetails"
                                                    classes={
                                                      Object {
                                                        "root": "PodBrowser-root",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="PodBrowser-root PodBrowser-accordionDetails"
                                                    >
                                                      <ActionMenu>
                                                        <ul
                                                          className="PodBrowser-action-menu"
                                                        >
                                                          <ActionMenuItem>
                                                            <li
                                                              className="PodBrowser-action-menu__item"
                                                            >
                                                              <DownloadLink
                                                                className="PodBrowser-action-menu__trigger"
                                                                data-testid="download-resource-button"
                                                                iri="/iri/"
                                                              />
                                                            </li>
                                                          </ActionMenuItem>
                                                          <ActionMenuItem>
                                                            <li
                                                              className="PodBrowser-action-menu__item"
                                                            >
                                                              <DeleteResourceButton
                                                                className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--danger"
                                                                data-testid="delete-resource-button"
                                                                name="iri"
                                                                onDelete={[Function]}
                                                                resourceIri="/iri/"
                                                              >
                                                                <DeleteButton
                                                                  className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--danger"
                                                                  confirmationContent="Are you sure you wish to delete iri?"
                                                                  confirmationTitle="Confirm Delete"
                                                                  data-testid="delete-resource-button"
                                                                  dialogId="delete-resource-/iri/"
                                                                  onDelete={[Function]}
                                                                  successMessage="iri was successfully deleted."
                                                                >
                                                                  <button
                                                                    className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--danger"
                                                                    data-testid="delete-resource-button"
                                                                    onClick={[Function]}
                                                                    type="button"
                                                                  >
                                                                    Delete
                                                                  </button>
                                                                </DeleteButton>
                                                              </DeleteResourceButton>
                                                            </li>
                                                          </ActionMenuItem>
                                                        </ul>
                                                      </ActionMenu>
                                                    </div>
                                                  </ForwardRef(AccordionDetails)>
                                                </WithStyles(ForwardRef(AccordionDetails))>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </Transition>
                                    </ForwardRef(Collapse)>
                                  </WithStyles(ForwardRef(Collapse))>
                                </div>
                              </ForwardRef(Paper)>
                            </WithStyles(ForwardRef(Paper))>
                          </ForwardRef(Accordion)>
                        </WithStyles(ForwardRef(Accordion))>
                        <WithStyles(ForwardRef(Accordion))>
                          <ForwardRef(Accordion)
                            classes={
                              Object {
                                "disabled": "PodBrowser-disabled",
                                "expanded": "PodBrowser-expanded",
                                "root": "PodBrowser-root",
                                "rounded": "PodBrowser-rounded",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(Paper))
                              className="PodBrowser-root PodBrowser-rounded"
                              square={false}
                            >
                              <ForwardRef(Paper)
                                className="PodBrowser-root PodBrowser-rounded"
                                classes={
                                  Object {
                                    "elevation0": "PodBrowser-elevation0",
                                    "elevation1": "PodBrowser-elevation1",
                                    "elevation10": "PodBrowser-elevation10",
                                    "elevation11": "PodBrowser-elevation11",
                                    "elevation12": "PodBrowser-elevation12",
                                    "elevation13": "PodBrowser-elevation13",
                                    "elevation14": "PodBrowser-elevation14",
                                    "elevation15": "PodBrowser-elevation15",
                                    "elevation16": "PodBrowser-elevation16",
                                    "elevation17": "PodBrowser-elevation17",
                                    "elevation18": "PodBrowser-elevation18",
                                    "elevation19": "PodBrowser-elevation19",
                                    "elevation2": "PodBrowser-elevation2",
                                    "elevation20": "PodBrowser-elevation20",
                                    "elevation21": "PodBrowser-elevation21",
                                    "elevation22": "PodBrowser-elevation22",
                                    "elevation23": "PodBrowser-elevation23",
                                    "elevation24": "PodBrowser-elevation24",
                                    "elevation3": "PodBrowser-elevation3",
                                    "elevation4": "PodBrowser-elevation4",
                                    "elevation5": "PodBrowser-elevation5",
                                    "elevation6": "PodBrowser-elevation6",
                                    "elevation7": "PodBrowser-elevation7",
                                    "elevation8": "PodBrowser-elevation8",
                                    "elevation9": "PodBrowser-elevation9",
                                    "outlined": "PodBrowser-outlined",
                                    "root": "PodBrowser-root",
                                    "rounded": "PodBrowser-rounded",
                                  }
                                }
                                square={false}
                              >
                                <div
                                  className="PodBrowser-root PodBrowser-root PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                                >
                                  <WithStyles(ForwardRef(AccordionSummary))
                                    data-testid="accordion-resource-details-trigger"
                                    expandIcon={<Memo(ExpandMoreIcon) />}
                                    key=".0"
                                  >
                                    <ForwardRef(AccordionSummary)
                                      classes={
                                        Object {
                                          "content": "PodBrowser-content",
                                          "disabled": "PodBrowser-disabled",
                                          "expandIcon": "PodBrowser-expandIcon",
                                          "expanded": "PodBrowser-expanded",
                                          "focused": "PodBrowser-focused",
                                          "root": "PodBrowser-root",
                                        }
                                      }
                                      data-testid="accordion-resource-details-trigger"
                                      expandIcon={<Memo(ExpandMoreIcon) />}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        aria-expanded={false}
                                        className="PodBrowser-root"
                                        component="div"
                                        data-testid="accordion-resource-details-trigger"
                                        disableRipple={true}
                                        disabled={false}
                                        focusRipple={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocusVisible={[Function]}
                                      >
                                        <ForwardRef(ButtonBase)
                                          aria-expanded={false}
                                          className="PodBrowser-root"
                                          classes={
                                            Object {
                                              "disabled": "PodBrowser-disabled",
                                              "focusVisible": "PodBrowser-focusVisible",
                                              "root": "PodBrowser-root",
                                            }
                                          }
                                          component="div"
                                          data-testid="accordion-resource-details-trigger"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocusVisible={[Function]}
                                        >
                                          <div
                                            aria-disabled={false}
                                            aria-expanded={false}
                                            className="PodBrowser-root PodBrowser-root"
                                            data-testid="accordion-resource-details-trigger"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="button"
                                            tabIndex={0}
                                          >
                                            <div
                                              className="PodBrowser-content"
                                            >
                                              Details
                                            </div>
                                            <WithStyles(ForwardRef(IconButton))
                                              aria-hidden={true}
                                              className="PodBrowser-expandIcon"
                                              component="div"
                                              edge="end"
                                              role={null}
                                              tabIndex={null}
                                            >
                                              <ForwardRef(IconButton)
                                                aria-hidden={true}
                                                className="PodBrowser-expandIcon"
                                                classes={
                                                  Object {
                                                    "colorInherit": "PodBrowser-colorInherit",
                                                    "colorPrimary": "PodBrowser-colorPrimary",
                                                    "colorSecondary": "PodBrowser-colorSecondary",
                                                    "disabled": "PodBrowser-disabled",
                                                    "edgeEnd": "PodBrowser-edgeEnd",
                                                    "edgeStart": "PodBrowser-edgeStart",
                                                    "label": "PodBrowser-label",
                                                    "root": "PodBrowser-root",
                                                    "sizeSmall": "PodBrowser-sizeSmall",
                                                  }
                                                }
                                                component="div"
                                                edge="end"
                                                role={null}
                                                tabIndex={null}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  aria-hidden={true}
                                                  centerRipple={true}
                                                  className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                  component="div"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    aria-hidden={true}
                                                    centerRipple={true}
                                                    className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                    classes={
                                                      Object {
                                                        "disabled": "PodBrowser-disabled",
                                                        "focusVisible": "PodBrowser-focusVisible",
                                                        "root": "PodBrowser-root",
                                                      }
                                                    }
                                                    component="div"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <div
                                                      aria-disabled={false}
                                                      aria-hidden={true}
                                                      className="PodBrowser-root PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                      onBlur={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <span
                                                        className="PodBrowser-label"
                                                      >
                                                        <ExpandMoreIcon>
                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "PodBrowser-colorAction",
                                                                  "colorDisabled": "PodBrowser-colorDisabled",
                                                                  "colorError": "PodBrowser-colorError",
                                                                  "colorPrimary": "PodBrowser-colorPrimary",
                                                                  "colorSecondary": "PodBrowser-colorSecondary",
                                                                  "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                  "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                  "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                  "root": "PodBrowser-root",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="PodBrowser-root"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ExpandMoreIcon>
                                                      </span>
                                                      <WithStyles(memo)
                                                        center={true}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={true}
                                                          classes={
                                                            Object {
                                                              "child": "PodBrowser-child",
                                                              "childLeaving": "PodBrowser-childLeaving",
                                                              "childPulsate": "PodBrowser-childPulsate",
                                                              "ripple": "PodBrowser-ripple",
                                                              "ripplePulsate": "PodBrowser-ripplePulsate",
                                                              "rippleVisible": "PodBrowser-rippleVisible",
                                                              "root": "PodBrowser-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="PodBrowser-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </div>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(IconButton)>
                                            </WithStyles(ForwardRef(IconButton))>
                                          </div>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(AccordionSummary)>
                                  </WithStyles(ForwardRef(AccordionSummary))>
                                  <WithStyles(ForwardRef(Collapse))
                                    in={false}
                                    timeout="auto"
                                  >
                                    <ForwardRef(Collapse)
                                      classes={
                                        Object {
                                          "container": "PodBrowser-container",
                                          "entered": "PodBrowser-entered",
                                          "hidden": "PodBrowser-hidden",
                                          "wrapper": "PodBrowser-wrapper",
                                          "wrapperInner": "PodBrowser-wrapperInner",
                                        }
                                      }
                                      in={false}
                                      timeout="auto"
                                    >
                                      <Transition
                                        addEndListener={[Function]}
                                        appear={false}
                                        enter={true}
                                        exit={true}
                                        in={false}
                                        mountOnEnter={false}
                                        onEnter={[Function]}
                                        onEntered={[Function]}
                                        onEntering={[Function]}
                                        onExit={[Function]}
                                        onExited={[Function]}
                                        onExiting={[Function]}
                                        timeout={null}
                                        unmountOnExit={false}
                                      >
                                        <div
                                          className="PodBrowser-container PodBrowser-hidden"
                                          style={
                                            Object {
                                              "minHeight": "0px",
                                            }
                                          }
                                        >
                                          <div
                                            className="PodBrowser-wrapper"
                                          >
                                            <div
                                              className="PodBrowser-wrapperInner"
                                            >
                                              <div
                                                role="region"
                                              >
                                                <WithStyles(ForwardRef(AccordionDetails))
                                                  className="PodBrowser-accordionDetails"
                                                  key=".1"
                                                >
                                                  <ForwardRef(AccordionDetails)
                                                    className="PodBrowser-accordionDetails"
                                                    classes={
                                                      Object {
                                                        "root": "PodBrowser-root",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="PodBrowser-root PodBrowser-accordionDetails"
                                                    >
                                                      <section
                                                        className="PodBrowser-centeredSection"
                                                      >
                                                        <WithStyles(ForwardRef(List))>
                                                          <ForwardRef(List)
                                                            classes={
                                                              Object {
                                                                "dense": "PodBrowser-dense",
                                                                "padding": "PodBrowser-padding",
                                                                "root": "PodBrowser-root",
                                                                "subheader": "PodBrowser-subheader",
                                                              }
                                                            }
                                                          >
                                                            <ul
                                                              className="PodBrowser-root PodBrowser-padding"
                                                            >
                                                              <WithStyles(ForwardRef(ListItem))>
                                                                <ForwardRef(ListItem)
                                                                  classes={
                                                                    Object {
                                                                      "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                      "button": "PodBrowser-button",
                                                                      "container": "PodBrowser-container",
                                                                      "dense": "PodBrowser-dense",
                                                                      "disabled": "PodBrowser-disabled",
                                                                      "divider": "PodBrowser-divider",
                                                                      "focusVisible": "PodBrowser-focusVisible",
                                                                      "gutters": "PodBrowser-gutters",
                                                                      "root": "PodBrowser-root",
                                                                      "secondaryAction": "PodBrowser-secondaryAction",
                                                                      "selected": "PodBrowser-selected",
                                                                    }
                                                                  }
                                                                >
                                                                  <li
                                                                    className="PodBrowser-root PodBrowser-gutters"
                                                                    disabled={false}
                                                                  >
                                                                    <WithStyles(ForwardRef(Typography))
                                                                      className="PodBrowser-detailText"
                                                                      key=".0"
                                                                    >
                                                                      <ForwardRef(Typography)
                                                                        className="PodBrowser-detailText"
                                                                        classes={
                                                                          Object {
                                                                            "alignCenter": "PodBrowser-alignCenter",
                                                                            "alignJustify": "PodBrowser-alignJustify",
                                                                            "alignLeft": "PodBrowser-alignLeft",
                                                                            "alignRight": "PodBrowser-alignRight",
                                                                            "body1": "PodBrowser-body1",
                                                                            "body2": "PodBrowser-body2",
                                                                            "button": "PodBrowser-button",
                                                                            "caption": "PodBrowser-caption",
                                                                            "colorError": "PodBrowser-colorError",
                                                                            "colorInherit": "PodBrowser-colorInherit",
                                                                            "colorPrimary": "PodBrowser-colorPrimary",
                                                                            "colorSecondary": "PodBrowser-colorSecondary",
                                                                            "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                            "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                            "displayBlock": "PodBrowser-displayBlock",
                                                                            "displayInline": "PodBrowser-displayInline",
                                                                            "gutterBottom": "PodBrowser-gutterBottom",
                                                                            "h1": "PodBrowser-h1",
                                                                            "h2": "PodBrowser-h2",
                                                                            "h3": "PodBrowser-h3",
                                                                            "h4": "PodBrowser-h4",
                                                                            "h5": "PodBrowser-h5",
                                                                            "h6": "PodBrowser-h6",
                                                                            "noWrap": "PodBrowser-noWrap",
                                                                            "overline": "PodBrowser-overline",
                                                                            "paragraph": "PodBrowser-paragraph",
                                                                            "root": "PodBrowser-root",
                                                                            "srOnly": "PodBrowser-srOnly",
                                                                            "subtitle1": "PodBrowser-subtitle1",
                                                                            "subtitle2": "PodBrowser-subtitle2",
                                                                          }
                                                                        }
                                                                      >
                                                                        <p
                                                                          className="PodBrowser-root PodBrowser-detailText PodBrowser-body1"
                                                                        >
                                                                          Thing Type:
                                                                        </p>
                                                                      </ForwardRef(Typography)>
                                                                    </WithStyles(ForwardRef(Typography))>
                                                                    <WithStyles(ForwardRef(Typography))
                                                                      className="PodBrowser-typeValue PodBrowser-detailText"
                                                                      key=".1"
                                                                    >
                                                                      <ForwardRef(Typography)
                                                                        className="PodBrowser-typeValue PodBrowser-detailText"
                                                                        classes={
                                                                          Object {
                                                                            "alignCenter": "PodBrowser-alignCenter",
                                                                            "alignJustify": "PodBrowser-alignJustify",
                                                                            "alignLeft": "PodBrowser-alignLeft",
                                                                            "alignRight": "PodBrowser-alignRight",
                                                                            "body1": "PodBrowser-body1",
                                                                            "body2": "PodBrowser-body2",
                                                                            "button": "PodBrowser-button",
                                                                            "caption": "PodBrowser-caption",
                                                                            "colorError": "PodBrowser-colorError",
                                                                            "colorInherit": "PodBrowser-colorInherit",
                                                                            "colorPrimary": "PodBrowser-colorPrimary",
                                                                            "colorSecondary": "PodBrowser-colorSecondary",
                                                                            "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                            "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                            "displayBlock": "PodBrowser-displayBlock",
                                                                            "displayInline": "PodBrowser-displayInline",
                                                                            "gutterBottom": "PodBrowser-gutterBottom",
                                                                            "h1": "PodBrowser-h1",
                                                                            "h2": "PodBrowser-h2",
                                                                            "h3": "PodBrowser-h3",
                                                                            "h4": "PodBrowser-h4",
                                                                            "h5": "PodBrowser-h5",
                                                                            "h6": "PodBrowser-h6",
                                                                            "noWrap": "PodBrowser-noWrap",
                                                                            "overline": "PodBrowser-overline",
                                                                            "paragraph": "PodBrowser-paragraph",
                                                                            "root": "PodBrowser-root",
                                                                            "srOnly": "PodBrowser-srOnly",
                                                                            "subtitle1": "PodBrowser-subtitle1",
                                                                            "subtitle2": "PodBrowser-subtitle2",
                                                                          }
                                                                        }
                                                                      >
                                                                        <p
                                                                          className="PodBrowser-root PodBrowser-typeValue PodBrowser-detailText PodBrowser-body1"
                                                                        >
                                                                          text/turtle
                                                                        </p>
                                                                      </ForwardRef(Typography)>
                                                                    </WithStyles(ForwardRef(Typography))>
                                                                  </li>
                                                                </ForwardRef(ListItem)>
                                                              </WithStyles(ForwardRef(ListItem))>
                                                            </ul>
                                                          </ForwardRef(List)>
                                                        </WithStyles(ForwardRef(List))>
                                                      </section>
                                                    </div>
                                                  </ForwardRef(AccordionDetails)>
                                                </WithStyles(ForwardRef(AccordionDetails))>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </Transition>
                                    </ForwardRef(Collapse)>
                                  </WithStyles(ForwardRef(Collapse))>
                                </div>
                              </ForwardRef(Paper)>
                            </WithStyles(ForwardRef(Paper))>
                          </ForwardRef(Accordion)>
                        </WithStyles(ForwardRef(Accordion))>
                        <WithStyles(ForwardRef(Accordion))>
                          <ForwardRef(Accordion)
                            classes={
                              Object {
                                "disabled": "PodBrowser-disabled",
                                "expanded": "PodBrowser-expanded",
                                "root": "PodBrowser-root",
                                "rounded": "PodBrowser-rounded",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(Paper))
                              className="PodBrowser-root PodBrowser-rounded"
                              square={false}
                            >
                              <ForwardRef(Paper)
                                className="PodBrowser-root PodBrowser-rounded"
                                classes={
                                  Object {
                                    "elevation0": "PodBrowser-elevation0",
                                    "elevation1": "PodBrowser-elevation1",
                                    "elevation10": "PodBrowser-elevation10",
                                    "elevation11": "PodBrowser-elevation11",
                                    "elevation12": "PodBrowser-elevation12",
                                    "elevation13": "PodBrowser-elevation13",
                                    "elevation14": "PodBrowser-elevation14",
                                    "elevation15": "PodBrowser-elevation15",
                                    "elevation16": "PodBrowser-elevation16",
                                    "elevation17": "PodBrowser-elevation17",
                                    "elevation18": "PodBrowser-elevation18",
                                    "elevation19": "PodBrowser-elevation19",
                                    "elevation2": "PodBrowser-elevation2",
                                    "elevation20": "PodBrowser-elevation20",
                                    "elevation21": "PodBrowser-elevation21",
                                    "elevation22": "PodBrowser-elevation22",
                                    "elevation23": "PodBrowser-elevation23",
                                    "elevation24": "PodBrowser-elevation24",
                                    "elevation3": "PodBrowser-elevation3",
                                    "elevation4": "PodBrowser-elevation4",
                                    "elevation5": "PodBrowser-elevation5",
                                    "elevation6": "PodBrowser-elevation6",
                                    "elevation7": "PodBrowser-elevation7",
                                    "elevation8": "PodBrowser-elevation8",
                                    "elevation9": "PodBrowser-elevation9",
                                    "outlined": "PodBrowser-outlined",
                                    "root": "PodBrowser-root",
                                    "rounded": "PodBrowser-rounded",
                                  }
                                }
                                square={false}
                              >
                                <div
                                  className="PodBrowser-root PodBrowser-root PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                                >
                                  <WithStyles(ForwardRef(AccordionSummary))
                                    data-testid="accordion-resource-permissions-trigger"
                                    expandIcon={<Memo(ExpandMoreIcon) />}
                                    key=".0"
                                  >
                                    <ForwardRef(AccordionSummary)
                                      classes={
                                        Object {
                                          "content": "PodBrowser-content",
                                          "disabled": "PodBrowser-disabled",
                                          "expandIcon": "PodBrowser-expandIcon",
                                          "expanded": "PodBrowser-expanded",
                                          "focused": "PodBrowser-focused",
                                          "root": "PodBrowser-root",
                                        }
                                      }
                                      data-testid="accordion-resource-permissions-trigger"
                                      expandIcon={<Memo(ExpandMoreIcon) />}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        aria-expanded={false}
                                        className="PodBrowser-root"
                                        component="div"
                                        data-testid="accordion-resource-permissions-trigger"
                                        disableRipple={true}
                                        disabled={false}
                                        focusRipple={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocusVisible={[Function]}
                                      >
                                        <ForwardRef(ButtonBase)
                                          aria-expanded={false}
                                          className="PodBrowser-root"
                                          classes={
                                            Object {
                                              "disabled": "PodBrowser-disabled",
                                              "focusVisible": "PodBrowser-focusVisible",
                                              "root": "PodBrowser-root",
                                            }
                                          }
                                          component="div"
                                          data-testid="accordion-resource-permissions-trigger"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocusVisible={[Function]}
                                        >
                                          <div
                                            aria-disabled={false}
                                            aria-expanded={false}
                                            className="PodBrowser-root PodBrowser-root"
                                            data-testid="accordion-resource-permissions-trigger"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="button"
                                            tabIndex={0}
                                          >
                                            <div
                                              className="PodBrowser-content"
                                            >
                                              Permissions
                                            </div>
                                            <WithStyles(ForwardRef(IconButton))
                                              aria-hidden={true}
                                              className="PodBrowser-expandIcon"
                                              component="div"
                                              edge="end"
                                              role={null}
                                              tabIndex={null}
                                            >
                                              <ForwardRef(IconButton)
                                                aria-hidden={true}
                                                className="PodBrowser-expandIcon"
                                                classes={
                                                  Object {
                                                    "colorInherit": "PodBrowser-colorInherit",
                                                    "colorPrimary": "PodBrowser-colorPrimary",
                                                    "colorSecondary": "PodBrowser-colorSecondary",
                                                    "disabled": "PodBrowser-disabled",
                                                    "edgeEnd": "PodBrowser-edgeEnd",
                                                    "edgeStart": "PodBrowser-edgeStart",
                                                    "label": "PodBrowser-label",
                                                    "root": "PodBrowser-root",
                                                    "sizeSmall": "PodBrowser-sizeSmall",
                                                  }
                                                }
                                                component="div"
                                                edge="end"
                                                role={null}
                                                tabIndex={null}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  aria-hidden={true}
                                                  centerRipple={true}
                                                  className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                  component="div"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    aria-hidden={true}
                                                    centerRipple={true}
                                                    className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                    classes={
                                                      Object {
                                                        "disabled": "PodBrowser-disabled",
                                                        "focusVisible": "PodBrowser-focusVisible",
                                                        "root": "PodBrowser-root",
                                                      }
                                                    }
                                                    component="div"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <div
                                                      aria-disabled={false}
                                                      aria-hidden={true}
                                                      className="PodBrowser-root PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                      onBlur={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <span
                                                        className="PodBrowser-label"
                                                      >
                                                        <ExpandMoreIcon>
                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "PodBrowser-colorAction",
                                                                  "colorDisabled": "PodBrowser-colorDisabled",
                                                                  "colorError": "PodBrowser-colorError",
                                                                  "colorPrimary": "PodBrowser-colorPrimary",
                                                                  "colorSecondary": "PodBrowser-colorSecondary",
                                                                  "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                  "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                  "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                  "root": "PodBrowser-root",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="PodBrowser-root"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ExpandMoreIcon>
                                                      </span>
                                                      <WithStyles(memo)
                                                        center={true}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={true}
                                                          classes={
                                                            Object {
                                                              "child": "PodBrowser-child",
                                                              "childLeaving": "PodBrowser-childLeaving",
                                                              "childPulsate": "PodBrowser-childPulsate",
                                                              "ripple": "PodBrowser-ripple",
                                                              "ripplePulsate": "PodBrowser-ripplePulsate",
                                                              "rippleVisible": "PodBrowser-rippleVisible",
                                                              "root": "PodBrowser-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="PodBrowser-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </div>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(IconButton)>
                                            </WithStyles(ForwardRef(IconButton))>
                                          </div>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(AccordionSummary)>
                                  </WithStyles(ForwardRef(AccordionSummary))>
                                  <WithStyles(ForwardRef(Collapse))
                                    in={false}
                                    timeout="auto"
                                  >
                                    <ForwardRef(Collapse)
                                      classes={
                                        Object {
                                          "container": "PodBrowser-container",
                                          "entered": "PodBrowser-entered",
                                          "hidden": "PodBrowser-hidden",
                                          "wrapper": "PodBrowser-wrapper",
                                          "wrapperInner": "PodBrowser-wrapperInner",
                                        }
                                      }
                                      in={false}
                                      timeout="auto"
                                    >
                                      <Transition
                                        addEndListener={[Function]}
                                        appear={false}
                                        enter={true}
                                        exit={true}
                                        in={false}
                                        mountOnEnter={false}
                                        onEnter={[Function]}
                                        onEntered={[Function]}
                                        onEntering={[Function]}
                                        onExit={[Function]}
                                        onExited={[Function]}
                                        onExiting={[Function]}
                                        timeout={null}
                                        unmountOnExit={false}
                                      >
                                        <div
                                          className="PodBrowser-container PodBrowser-hidden"
                                          style={
                                            Object {
                                              "minHeight": "0px",
                                            }
                                          }
                                        >
                                          <div
                                            className="PodBrowser-wrapper"
                                          >
                                            <div
                                              className="PodBrowser-wrapperInner"
                                            >
                                              <div
                                                role="region"
                                              >
                                                <WithStyles(ForwardRef(AccordionDetails))
                                                  className="PodBrowser-accordionDetails"
                                                  key=".1"
                                                >
                                                  <ForwardRef(AccordionDetails)
                                                    className="PodBrowser-accordionDetails"
                                                    classes={
                                                      Object {
                                                        "root": "PodBrowser-root",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="PodBrowser-root PodBrowser-accordionDetails"
                                                    >
                                                      <ResourceSharing
                                                        startLoading={false}
                                                      >
                                                        <ActionMenu>
                                                          <ul
                                                            className="PodBrowser-action-menu"
                                                          >
                                                            <ActionMenuItem>
                                                              <li
                                                                className="PodBrowser-action-menu__item"
                                                              >
                                                                <AddPermissionUsingWebIdButton
                                                                  className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--prompt"
                                                                  onLoading={[Function]}
                                                                >
                                                                  <button
                                                                    className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--prompt"
                                                                    data-testid="permissions-add-user-with-webid-button"
                                                                    onClick={[Function]}
                                                                    type="button"
                                                                  >
                                                                    Add with WebId
                                                                  </button>
                                                                  <WithStyles(ForwardRef(Popover))
                                                                    anchorEl={null}
                                                                    anchorOrigin={
                                                                      Object {
                                                                        "horizontal": "center",
                                                                        "vertical": "bottom",
                                                                      }
                                                                    }
                                                                    classes={
                                                                      Object {
                                                                        "paper": "PodBrowser-paper",
                                                                      }
                                                                    }
                                                                    onClose={[Function]}
                                                                    open={false}
                                                                    transformOrigin={
                                                                      Object {
                                                                        "horizontal": "center",
                                                                        "vertical": "top",
                                                                      }
                                                                    }
                                                                  >
                                                                    <ForwardRef(Popover)
                                                                      anchorEl={null}
                                                                      anchorOrigin={
                                                                        Object {
                                                                          "horizontal": "center",
                                                                          "vertical": "bottom",
                                                                        }
                                                                      }
                                                                      classes={
                                                                        Object {
                                                                          "paper": "PodBrowser-paper PodBrowser-paper",
                                                                          "root": "PodBrowser-root",
                                                                        }
                                                                      }
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                      transformOrigin={
                                                                        Object {
                                                                          "horizontal": "center",
                                                                          "vertical": "top",
                                                                        }
                                                                      }
                                                                    >
                                                                      <ForwardRef(Modal)
                                                                        BackdropProps={
                                                                          Object {
                                                                            "invisible": true,
                                                                          }
                                                                        }
                                                                        className="PodBrowser-root"
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                      />
                                                                    </ForwardRef(Popover)>
                                                                  </WithStyles(ForwardRef(Popover))>
                                                                </AddPermissionUsingWebIdButton>
                                                              </li>
                                                            </ActionMenuItem>
                                                          </ul>
                                                        </ActionMenu>
                                                        <WithStyles(ForwardRef(Accordion))
                                                          defaultExpanded={true}
                                                        >
                                                          <ForwardRef(Accordion)
                                                            classes={
                                                              Object {
                                                                "disabled": "PodBrowser-disabled",
                                                                "expanded": "PodBrowser-expanded",
                                                                "root": "PodBrowser-root",
                                                                "rounded": "PodBrowser-rounded",
                                                              }
                                                            }
                                                            defaultExpanded={true}
                                                          >
                                                            <WithStyles(ForwardRef(Paper))
                                                              className="PodBrowser-root PodBrowser-expanded PodBrowser-rounded"
                                                              square={false}
                                                            >
                                                              <ForwardRef(Paper)
                                                                className="PodBrowser-root PodBrowser-expanded PodBrowser-rounded"
                                                                classes={
                                                                  Object {
                                                                    "elevation0": "PodBrowser-elevation0",
                                                                    "elevation1": "PodBrowser-elevation1",
                                                                    "elevation10": "PodBrowser-elevation10",
                                                                    "elevation11": "PodBrowser-elevation11",
                                                                    "elevation12": "PodBrowser-elevation12",
                                                                    "elevation13": "PodBrowser-elevation13",
                                                                    "elevation14": "PodBrowser-elevation14",
                                                                    "elevation15": "PodBrowser-elevation15",
                                                                    "elevation16": "PodBrowser-elevation16",
                                                                    "elevation17": "PodBrowser-elevation17",
                                                                    "elevation18": "PodBrowser-elevation18",
                                                                    "elevation19": "PodBrowser-elevation19",
                                                                    "elevation2": "PodBrowser-elevation2",
                                                                    "elevation20": "PodBrowser-elevation20",
                                                                    "elevation21": "PodBrowser-elevation21",
                                                                    "elevation22": "PodBrowser-elevation22",
                                                                    "elevation23": "PodBrowser-elevation23",
                                                                    "elevation24": "PodBrowser-elevation24",
                                                                    "elevation3": "PodBrowser-elevation3",
                                                                    "elevation4": "PodBrowser-elevation4",
                                                                    "elevation5": "PodBrowser-elevation5",
                                                                    "elevation6": "PodBrowser-elevation6",
                                                                    "elevation7": "PodBrowser-elevation7",
                                                                    "elevation8": "PodBrowser-elevation8",
                                                                    "elevation9": "PodBrowser-elevation9",
                                                                    "outlined": "PodBrowser-outlined",
                                                                    "root": "PodBrowser-root",
                                                                    "rounded": "PodBrowser-rounded",
                                                                  }
                                                                }
                                                                square={false}
                                                              >
                                                                <div
                                                                  className="PodBrowser-root PodBrowser-root PodBrowser-expanded PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                                                                >
                                                                  <WithStyles(ForwardRef(AccordionSummary))
                                                                    expandIcon={<Memo(ExpandMoreIcon) />}
                                                                    key=".0"
                                                                  >
                                                                    <ForwardRef(AccordionSummary)
                                                                      classes={
                                                                        Object {
                                                                          "content": "PodBrowser-content",
                                                                          "disabled": "PodBrowser-disabled",
                                                                          "expandIcon": "PodBrowser-expandIcon",
                                                                          "expanded": "PodBrowser-expanded",
                                                                          "focused": "PodBrowser-focused",
                                                                          "root": "PodBrowser-root",
                                                                        }
                                                                      }
                                                                      expandIcon={<Memo(ExpandMoreIcon) />}
                                                                    >
                                                                      <WithStyles(ForwardRef(ButtonBase))
                                                                        aria-expanded={true}
                                                                        className="PodBrowser-root PodBrowser-expanded"
                                                                        component="div"
                                                                        disableRipple={true}
                                                                        disabled={false}
                                                                        focusRipple={false}
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onFocusVisible={[Function]}
                                                                      >
                                                                        <ForwardRef(ButtonBase)
                                                                          aria-expanded={true}
                                                                          className="PodBrowser-root PodBrowser-expanded"
                                                                          classes={
                                                                            Object {
                                                                              "disabled": "PodBrowser-disabled",
                                                                              "focusVisible": "PodBrowser-focusVisible",
                                                                              "root": "PodBrowser-root",
                                                                            }
                                                                          }
                                                                          component="div"
                                                                          disableRipple={true}
                                                                          disabled={false}
                                                                          focusRipple={false}
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onFocusVisible={[Function]}
                                                                        >
                                                                          <div
                                                                            aria-disabled={false}
                                                                            aria-expanded={true}
                                                                            className="PodBrowser-root PodBrowser-root PodBrowser-expanded"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onDragLeave={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onKeyUp={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onMouseLeave={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                            onTouchMove={[Function]}
                                                                            onTouchStart={[Function]}
                                                                            role="button"
                                                                            tabIndex={0}
                                                                          >
                                                                            <div
                                                                              className="PodBrowser-content PodBrowser-expanded"
                                                                            >
                                                                              Individual permissions
                                                                            </div>
                                                                            <WithStyles(ForwardRef(IconButton))
                                                                              aria-hidden={true}
                                                                              className="PodBrowser-expandIcon PodBrowser-expanded"
                                                                              component="div"
                                                                              edge="end"
                                                                              role={null}
                                                                              tabIndex={null}
                                                                            >
                                                                              <ForwardRef(IconButton)
                                                                                aria-hidden={true}
                                                                                className="PodBrowser-expandIcon PodBrowser-expanded"
                                                                                classes={
                                                                                  Object {
                                                                                    "colorInherit": "PodBrowser-colorInherit",
                                                                                    "colorPrimary": "PodBrowser-colorPrimary",
                                                                                    "colorSecondary": "PodBrowser-colorSecondary",
                                                                                    "disabled": "PodBrowser-disabled",
                                                                                    "edgeEnd": "PodBrowser-edgeEnd",
                                                                                    "edgeStart": "PodBrowser-edgeStart",
                                                                                    "label": "PodBrowser-label",
                                                                                    "root": "PodBrowser-root",
                                                                                    "sizeSmall": "PodBrowser-sizeSmall",
                                                                                  }
                                                                                }
                                                                                component="div"
                                                                                edge="end"
                                                                                role={null}
                                                                                tabIndex={null}
                                                                              >
                                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                                  aria-hidden={true}
                                                                                  centerRipple={true}
                                                                                  className="PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                                                  component="div"
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  role={null}
                                                                                  tabIndex={null}
                                                                                >
                                                                                  <ForwardRef(ButtonBase)
                                                                                    aria-hidden={true}
                                                                                    centerRipple={true}
                                                                                    className="PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                                                    classes={
                                                                                      Object {
                                                                                        "disabled": "PodBrowser-disabled",
                                                                                        "focusVisible": "PodBrowser-focusVisible",
                                                                                        "root": "PodBrowser-root",
                                                                                      }
                                                                                    }
                                                                                    component="div"
                                                                                    disabled={false}
                                                                                    focusRipple={true}
                                                                                    role={null}
                                                                                    tabIndex={null}
                                                                                  >
                                                                                    <div
                                                                                      aria-disabled={false}
                                                                                      aria-hidden={true}
                                                                                      className="PodBrowser-root PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                                                      onBlur={[Function]}
                                                                                      onDragLeave={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      onKeyDown={[Function]}
                                                                                      onKeyUp={[Function]}
                                                                                      onMouseDown={[Function]}
                                                                                      onMouseLeave={[Function]}
                                                                                      onMouseUp={[Function]}
                                                                                      onTouchEnd={[Function]}
                                                                                      onTouchMove={[Function]}
                                                                                      onTouchStart={[Function]}
                                                                                      role={null}
                                                                                      tabIndex={null}
                                                                                    >
                                                                                      <span
                                                                                        className="PodBrowser-label"
                                                                                      >
                                                                                        <ExpandMoreIcon>
                                                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                                                            <ForwardRef(SvgIcon)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorAction": "PodBrowser-colorAction",
                                                                                                  "colorDisabled": "PodBrowser-colorDisabled",
                                                                                                  "colorError": "PodBrowser-colorError",
                                                                                                  "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                  "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                  "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                                                  "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                                                  "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                                                  "root": "PodBrowser-root",
                                                                                                }
                                                                                              }
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden={true}
                                                                                                className="PodBrowser-root"
                                                                                                focusable="false"
                                                                                                viewBox="0 0 24 24"
                                                                                              >
                                                                                                <path
                                                                                                  d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                                                                />
                                                                                              </svg>
                                                                                            </ForwardRef(SvgIcon)>
                                                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                                                        </ExpandMoreIcon>
                                                                                      </span>
                                                                                      <WithStyles(memo)
                                                                                        center={true}
                                                                                      >
                                                                                        <ForwardRef(TouchRipple)
                                                                                          center={true}
                                                                                          classes={
                                                                                            Object {
                                                                                              "child": "PodBrowser-child",
                                                                                              "childLeaving": "PodBrowser-childLeaving",
                                                                                              "childPulsate": "PodBrowser-childPulsate",
                                                                                              "ripple": "PodBrowser-ripple",
                                                                                              "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                                              "rippleVisible": "PodBrowser-rippleVisible",
                                                                                              "root": "PodBrowser-root",
                                                                                            }
                                                                                          }
                                                                                        >
                                                                                          <span
                                                                                            className="PodBrowser-root"
                                                                                          >
                                                                                            <TransitionGroup
                                                                                              childFactory={[Function]}
                                                                                              component={null}
                                                                                              exit={true}
                                                                                            />
                                                                                          </span>
                                                                                        </ForwardRef(TouchRipple)>
                                                                                      </WithStyles(memo)>
                                                                                    </div>
                                                                                  </ForwardRef(ButtonBase)>
                                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                                              </ForwardRef(IconButton)>
                                                                            </WithStyles(ForwardRef(IconButton))>
                                                                          </div>
                                                                        </ForwardRef(ButtonBase)>
                                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                                    </ForwardRef(AccordionSummary)>
                                                                  </WithStyles(ForwardRef(AccordionSummary))>
                                                                  <WithStyles(ForwardRef(Collapse))
                                                                    in={true}
                                                                    timeout="auto"
                                                                  >
                                                                    <ForwardRef(Collapse)
                                                                      classes={
                                                                        Object {
                                                                          "container": "PodBrowser-container",
                                                                          "entered": "PodBrowser-entered",
                                                                          "hidden": "PodBrowser-hidden",
                                                                          "wrapper": "PodBrowser-wrapper",
                                                                          "wrapperInner": "PodBrowser-wrapperInner",
                                                                        }
                                                                      }
                                                                      in={true}
                                                                      timeout="auto"
                                                                    >
                                                                      <Transition
                                                                        addEndListener={[Function]}
                                                                        appear={false}
                                                                        enter={true}
                                                                        exit={true}
                                                                        in={true}
                                                                        mountOnEnter={false}
                                                                        onEnter={[Function]}
                                                                        onEntered={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExit={[Function]}
                                                                        onExited={[Function]}
                                                                        onExiting={[Function]}
                                                                        timeout={null}
                                                                        unmountOnExit={false}
                                                                      >
                                                                        <div
                                                                          className="PodBrowser-container PodBrowser-entered"
                                                                          style={
                                                                            Object {
                                                                              "minHeight": "0px",
                                                                            }
                                                                          }
                                                                        >
                                                                          <div
                                                                            className="PodBrowser-wrapper"
                                                                          >
                                                                            <div
                                                                              className="PodBrowser-wrapperInner"
                                                                            >
                                                                              <div
                                                                                role="region"
                                                                              >
                                                                                <WithStyles(ForwardRef(AccordionDetails))
                                                                                  className="PodBrowser-details"
                                                                                  key=".1"
                                                                                >
                                                                                  <ForwardRef(AccordionDetails)
                                                                                    className="PodBrowser-details"
                                                                                    classes={
                                                                                      Object {
                                                                                        "root": "PodBrowser-root",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <div
                                                                                      className="PodBrowser-root PodBrowser-details"
                                                                                    >
                                                                                      <AgentAccessList
                                                                                        onLoading={[Function]}
                                                                                      >
                                                                                        <WithStyles(ForwardRef(CircularProgress))
                                                                                          color="primary"
                                                                                        >
                                                                                          <ForwardRef(CircularProgress)
                                                                                            classes={
                                                                                              Object {
                                                                                                "circle": "PodBrowser-circle",
                                                                                                "circleDisableShrink": "PodBrowser-circleDisableShrink",
                                                                                                "circleIndeterminate": "PodBrowser-circleIndeterminate",
                                                                                                "circleStatic": "PodBrowser-circleStatic",
                                                                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                "indeterminate": "PodBrowser-indeterminate",
                                                                                                "root": "PodBrowser-root",
                                                                                                "static": "PodBrowser-static",
                                                                                                "svg": "PodBrowser-svg",
                                                                                              }
                                                                                            }
                                                                                            color="primary"
                                                                                          >
                                                                                            <div
                                                                                              className="PodBrowser-root PodBrowser-colorPrimary PodBrowser-indeterminate"
                                                                                              role="progressbar"
                                                                                              style={
                                                                                                Object {
                                                                                                  "height": 40,
                                                                                                  "width": 40,
                                                                                                }
                                                                                              }
                                                                                            >
                                                                                              <svg
                                                                                                className="PodBrowser-svg"
                                                                                                viewBox="22 22 44 44"
                                                                                              >
                                                                                                <circle
                                                                                                  className="PodBrowser-circle PodBrowser-circleIndeterminate"
                                                                                                  cx={44}
                                                                                                  cy={44}
                                                                                                  fill="none"
                                                                                                  r={20.2}
                                                                                                  strokeWidth={3.6}
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </div>
                                                                                          </ForwardRef(CircularProgress)>
                                                                                        </WithStyles(ForwardRef(CircularProgress))>
                                                                                      </AgentAccessList>
                                                                                    </div>
                                                                                  </ForwardRef(AccordionDetails)>
                                                                                </WithStyles(ForwardRef(AccordionDetails))>
                                                                              </div>
                                                                            </div>
                                                                          </div>
                                                                        </div>
                                                                      </Transition>
                                                                    </ForwardRef(Collapse)>
                                                                  </WithStyles(ForwardRef(Collapse))>
                                                                </div>
                                                              </ForwardRef(Paper)>
                                                            </WithStyles(ForwardRef(Paper))>
                                                          </ForwardRef(Accordion)>
                                                        </WithStyles(ForwardRef(Accordion))>
                                                      </ResourceSharing>
                                                    </div>
                                                  </ForwardRef(AccordionDetails)>
                                                </WithStyles(ForwardRef(AccordionDetails))>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </Transition>
                                    </ForwardRef(Collapse)>
                                  </WithStyles(ForwardRef(Collapse))>
                                </div>
                              </ForwardRef(Paper)>
                            </WithStyles(ForwardRef(Paper))>
                          </ForwardRef(Accordion)>
                        </WithStyles(ForwardRef(Accordion))>
                      </ResourceDetails>
                    </E>
                  </AccessControlProvider>
                </div>
              </div>
            </section>
          </Drawer>
        </ResourceDrawer>
      </DetailsContextMenuProvider>
    </ThemeProvider>
  </StylesProvider>
</Component>
`;

exports[`ResourceDrawer view it renders without errors when iri contains spaces 1`] = `
<Component
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-ExtraBold": [Function],
        "fonts/Raleway/Raleway-Medium": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#C44539",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#4E4E4E",
          "secondary": "#4E4E4E",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 800,
        "fontWeightLight": 500,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.375rem",
          "fontWeight": 800,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.45,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.125rem",
          "fontWeight": 800,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.27,
        },
        "h3": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.05rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1.2,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.1,
        },
        "h5": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h6": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "0.625rem",
          "fontWeight": 800,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <StylesProvider
    generateClassName={[Function]}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1280,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "iconSet": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "icons": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "label": "SDK Default",
          "licenses": Array [
            "fonts/Raleway/OFL.txt",
          ],
          "localFonts": Object {
            "fonts/Raleway/Raleway-ExtraBold": [Function],
            "fonts/Raleway/Raleway-Medium": [Function],
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "name": "sdk-default",
          "overrides": Object {},
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "adjustAlpha": [Function],
            "augmentColor": [Function],
            "background": Object {
              "default": "#FFFFFF",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#C44539",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(86, 53, 178)",
              "light": "rgb(150, 112, 255)",
              "main": "#7C4DFF",
            },
            "secondary": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#083575",
              "light": "#01C9EA",
              "main": "#18A9E6",
            },
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#4E4E4E",
              "secondary": "#4E4E4E",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {},
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "stylesheets": Array [
            "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
          ],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "body1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 800,
            "fontWeightLight": 500,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.375rem",
              "fontWeight": 800,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.45,
            },
            "h2": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.125rem",
              "fontWeight": 800,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.27,
            },
            "h3": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.05rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1.2,
            },
            "h4": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.1,
            },
            "h5": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1,
            },
            "h6": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "0.625rem",
              "fontWeight": 800,
              "letterSpacing": "0.0075em",
              "lineHeight": 1,
            },
            "heading": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <MockedSessionContextProvider>
        <y
          session={
            Object {
              "fetch": [MockFunction] {
                "calls": Array [
                  Array [
                    "http://example.com/webId#me",
                    Object {
                      "headers": Object {
                        "Accept": "text/turtle",
                      },
                    },
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              "handleIncomingRedirect": [MockFunction] {
                "calls": Array [
                  Array [
                    "http://localhost/",
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": Promise {},
                  },
                ],
              },
              "info": Object {
                "isLoggedIn": true,
                "sessionId": "some-session-id",
                "webId": "http://example.com/webId#me",
              },
              "on": [MockFunction] {
                "calls": Array [
                  Array [
                    "logout",
                    [Function],
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
            }
          }
          sessionId="test-session"
          sessionRequestInProgress={false}
        >
          <DetailsContextMenuProvider>
            <ResourceDrawer
              onUpdate={[Function]}
            >
              <Drawer
                close={[Function]}
                open={true}
              >
                <section
                  className="PodBrowser-drawer PodBrowser-drawer--open"
                >
                  <div
                    className="PodBrowser-drawer__content"
                  >
                    <div
                      className="PodBrowser-drawer__content-wrapper"
                    >
                      <div
                        className="PodBrowser-drawer__article"
                      >
                        <ForwardRef
                          onClick={[Function]}
                          variant="text"
                        >
                          <button
                            className="PodBrowser-button PodBrowser-button--text"
                            onClick={[Function]}
                          >
                            <Icon
                              name="cancel"
                            >
                              <span
                                className="PodBrowser-icon-cancel"
                              />
                            </Icon>
                             Close
                          </button>
                        </ForwardRef>
                      </div>
                      <AccessControlProvider
                        accessControl={
                          Object {
                            "deleteFile": [MockFunction],
                            "getPermissions": [MockFunction] {
                              "calls": Array [
                                Array [],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "savePermissionsForAgent": [MockFunction],
                          }
                        }
                      >
                        <E
                          dataset={
                            DatasetCore {
                              "internal_resourceInfo": Object {
                                "contentType": "text/turtle",
                                "isRawData": false,
                                "linkedResources": Object {},
                                "sourceIri": "/iri/",
                              },
                              "quads": Set {},
                            }
                          }
                        >
                          <ResourceDetails
                            onDelete={[Function]}
                          >
                            <section
                              className="PodBrowser-headerSection"
                            >
                              <h3
                                className="PodBrowser-content-h3"
                                data-testid="resource-title"
                                title="/iri/"
                              >
                                iri
                              </h3>
                            </section>
                            <WithStyles(ForwardRef(Divider))>
                              <ForwardRef(Divider)
                                classes={
                                  Object {
                                    "absolute": "PodBrowser-absolute",
                                    "flexItem": "PodBrowser-flexItem",
                                    "inset": "PodBrowser-inset",
                                    "light": "PodBrowser-light",
                                    "middle": "PodBrowser-middle",
                                    "root": "PodBrowser-root",
                                    "vertical": "PodBrowser-vertical",
                                  }
                                }
                              >
                                <hr
                                  className="PodBrowser-root"
                                />
                              </ForwardRef(Divider)>
                            </WithStyles(ForwardRef(Divider))>
                            <WithStyles(ForwardRef(Accordion))
                              defaultExpanded={true}
                            >
                              <ForwardRef(Accordion)
                                classes={
                                  Object {
                                    "disabled": "PodBrowser-disabled",
                                    "expanded": "PodBrowser-expanded",
                                    "root": "PodBrowser-root",
                                    "rounded": "PodBrowser-rounded",
                                  }
                                }
                                defaultExpanded={true}
                              >
                                <WithStyles(ForwardRef(Paper))
                                  className="PodBrowser-root PodBrowser-expanded PodBrowser-rounded"
                                  square={false}
                                >
                                  <ForwardRef(Paper)
                                    className="PodBrowser-root PodBrowser-expanded PodBrowser-rounded"
                                    classes={
                                      Object {
                                        "elevation0": "PodBrowser-elevation0",
                                        "elevation1": "PodBrowser-elevation1",
                                        "elevation10": "PodBrowser-elevation10",
                                        "elevation11": "PodBrowser-elevation11",
                                        "elevation12": "PodBrowser-elevation12",
                                        "elevation13": "PodBrowser-elevation13",
                                        "elevation14": "PodBrowser-elevation14",
                                        "elevation15": "PodBrowser-elevation15",
                                        "elevation16": "PodBrowser-elevation16",
                                        "elevation17": "PodBrowser-elevation17",
                                        "elevation18": "PodBrowser-elevation18",
                                        "elevation19": "PodBrowser-elevation19",
                                        "elevation2": "PodBrowser-elevation2",
                                        "elevation20": "PodBrowser-elevation20",
                                        "elevation21": "PodBrowser-elevation21",
                                        "elevation22": "PodBrowser-elevation22",
                                        "elevation23": "PodBrowser-elevation23",
                                        "elevation24": "PodBrowser-elevation24",
                                        "elevation3": "PodBrowser-elevation3",
                                        "elevation4": "PodBrowser-elevation4",
                                        "elevation5": "PodBrowser-elevation5",
                                        "elevation6": "PodBrowser-elevation6",
                                        "elevation7": "PodBrowser-elevation7",
                                        "elevation8": "PodBrowser-elevation8",
                                        "elevation9": "PodBrowser-elevation9",
                                        "outlined": "PodBrowser-outlined",
                                        "root": "PodBrowser-root",
                                        "rounded": "PodBrowser-rounded",
                                      }
                                    }
                                    square={false}
                                  >
                                    <div
                                      className="PodBrowser-root PodBrowser-root PodBrowser-expanded PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                                    >
                                      <WithStyles(ForwardRef(AccordionSummary))
                                        data-testid="accordion-resource-actions-trigger"
                                        expandIcon={<Memo(ExpandMoreIcon) />}
                                        key=".0"
                                      >
                                        <ForwardRef(AccordionSummary)
                                          classes={
                                            Object {
                                              "content": "PodBrowser-content",
                                              "disabled": "PodBrowser-disabled",
                                              "expandIcon": "PodBrowser-expandIcon",
                                              "expanded": "PodBrowser-expanded",
                                              "focused": "PodBrowser-focused",
                                              "root": "PodBrowser-root",
                                            }
                                          }
                                          data-testid="accordion-resource-actions-trigger"
                                          expandIcon={<Memo(ExpandMoreIcon) />}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            aria-expanded={true}
                                            className="PodBrowser-root PodBrowser-expanded"
                                            component="div"
                                            data-testid="accordion-resource-actions-trigger"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocusVisible={[Function]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              aria-expanded={true}
                                              className="PodBrowser-root PodBrowser-expanded"
                                              classes={
                                                Object {
                                                  "disabled": "PodBrowser-disabled",
                                                  "focusVisible": "PodBrowser-focusVisible",
                                                  "root": "PodBrowser-root",
                                                }
                                              }
                                              component="div"
                                              data-testid="accordion-resource-actions-trigger"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocusVisible={[Function]}
                                            >
                                              <div
                                                aria-disabled={false}
                                                aria-expanded={true}
                                                className="PodBrowser-root PodBrowser-root PodBrowser-expanded"
                                                data-testid="accordion-resource-actions-trigger"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                role="button"
                                                tabIndex={0}
                                              >
                                                <div
                                                  className="PodBrowser-content PodBrowser-expanded"
                                                >
                                                  Actions
                                                </div>
                                                <WithStyles(ForwardRef(IconButton))
                                                  aria-hidden={true}
                                                  className="PodBrowser-expandIcon PodBrowser-expanded"
                                                  component="div"
                                                  edge="end"
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <ForwardRef(IconButton)
                                                    aria-hidden={true}
                                                    className="PodBrowser-expandIcon PodBrowser-expanded"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "PodBrowser-colorInherit",
                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                        "disabled": "PodBrowser-disabled",
                                                        "edgeEnd": "PodBrowser-edgeEnd",
                                                        "edgeStart": "PodBrowser-edgeStart",
                                                        "label": "PodBrowser-label",
                                                        "root": "PodBrowser-root",
                                                        "sizeSmall": "PodBrowser-sizeSmall",
                                                      }
                                                    }
                                                    component="div"
                                                    edge="end"
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      aria-hidden={true}
                                                      centerRipple={true}
                                                      className="PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                      component="div"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        aria-hidden={true}
                                                        centerRipple={true}
                                                        className="PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                        classes={
                                                          Object {
                                                            "disabled": "PodBrowser-disabled",
                                                            "focusVisible": "PodBrowser-focusVisible",
                                                            "root": "PodBrowser-root",
                                                          }
                                                        }
                                                        component="div"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <div
                                                          aria-disabled={false}
                                                          aria-hidden={true}
                                                          className="PodBrowser-root PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          role={null}
                                                          tabIndex={null}
                                                        >
                                                          <span
                                                            className="PodBrowser-label"
                                                          >
                                                            <ExpandMoreIcon>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "PodBrowser-colorAction",
                                                                      "colorDisabled": "PodBrowser-colorDisabled",
                                                                      "colorError": "PodBrowser-colorError",
                                                                      "colorPrimary": "PodBrowser-colorPrimary",
                                                                      "colorSecondary": "PodBrowser-colorSecondary",
                                                                      "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                      "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                      "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                      "root": "PodBrowser-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="PodBrowser-root"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ExpandMoreIcon>
                                                          </span>
                                                          <WithStyles(memo)
                                                            center={true}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={true}
                                                              classes={
                                                                Object {
                                                                  "child": "PodBrowser-child",
                                                                  "childLeaving": "PodBrowser-childLeaving",
                                                                  "childPulsate": "PodBrowser-childPulsate",
                                                                  "ripple": "PodBrowser-ripple",
                                                                  "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                  "rippleVisible": "PodBrowser-rippleVisible",
                                                                  "root": "PodBrowser-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="PodBrowser-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </div>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </div>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(AccordionSummary)>
                                      </WithStyles(ForwardRef(AccordionSummary))>
                                      <WithStyles(ForwardRef(Collapse))
                                        in={true}
                                        timeout="auto"
                                      >
                                        <ForwardRef(Collapse)
                                          classes={
                                            Object {
                                              "container": "PodBrowser-container",
                                              "entered": "PodBrowser-entered",
                                              "hidden": "PodBrowser-hidden",
                                              "wrapper": "PodBrowser-wrapper",
                                              "wrapperInner": "PodBrowser-wrapperInner",
                                            }
                                          }
                                          in={true}
                                          timeout="auto"
                                        >
                                          <Transition
                                            addEndListener={[Function]}
                                            appear={false}
                                            enter={true}
                                            exit={true}
                                            in={true}
                                            mountOnEnter={false}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            timeout={null}
                                            unmountOnExit={false}
                                          >
                                            <div
                                              className="PodBrowser-container PodBrowser-entered"
                                              style={
                                                Object {
                                                  "minHeight": "0px",
                                                }
                                              }
                                            >
                                              <div
                                                className="PodBrowser-wrapper"
                                              >
                                                <div
                                                  className="PodBrowser-wrapperInner"
                                                >
                                                  <div
                                                    role="region"
                                                  >
                                                    <WithStyles(ForwardRef(AccordionDetails))
                                                      className="PodBrowser-accordionDetails"
                                                      key=".1"
                                                    >
                                                      <ForwardRef(AccordionDetails)
                                                        className="PodBrowser-accordionDetails"
                                                        classes={
                                                          Object {
                                                            "root": "PodBrowser-root",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="PodBrowser-root PodBrowser-accordionDetails"
                                                        >
                                                          <ActionMenu>
                                                            <ul
                                                              className="PodBrowser-action-menu"
                                                            >
                                                              <ActionMenuItem>
                                                                <li
                                                                  className="PodBrowser-action-menu__item"
                                                                >
                                                                  <DownloadLink
                                                                    className="PodBrowser-action-menu__trigger"
                                                                    data-testid="download-resource-button"
                                                                    iri="/iri/"
                                                                  />
                                                                </li>
                                                              </ActionMenuItem>
                                                              <ActionMenuItem>
                                                                <li
                                                                  className="PodBrowser-action-menu__item"
                                                                >
                                                                  <DeleteResourceButton
                                                                    className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--danger"
                                                                    data-testid="delete-resource-button"
                                                                    name="iri"
                                                                    onDelete={[Function]}
                                                                    resourceIri="/iri/"
                                                                  >
                                                                    <DeleteButton
                                                                      className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--danger"
                                                                      confirmationContent="Are you sure you wish to delete iri?"
                                                                      confirmationTitle="Confirm Delete"
                                                                      data-testid="delete-resource-button"
                                                                      dialogId="delete-resource-/iri/"
                                                                      onDelete={[Function]}
                                                                      successMessage="iri was successfully deleted."
                                                                    >
                                                                      <button
                                                                        className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--danger"
                                                                        data-testid="delete-resource-button"
                                                                        onClick={[Function]}
                                                                        type="button"
                                                                      >
                                                                        Delete
                                                                      </button>
                                                                    </DeleteButton>
                                                                  </DeleteResourceButton>
                                                                </li>
                                                              </ActionMenuItem>
                                                            </ul>
                                                          </ActionMenu>
                                                        </div>
                                                      </ForwardRef(AccordionDetails)>
                                                    </WithStyles(ForwardRef(AccordionDetails))>
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </Transition>
                                        </ForwardRef(Collapse)>
                                      </WithStyles(ForwardRef(Collapse))>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </ForwardRef(Accordion)>
                            </WithStyles(ForwardRef(Accordion))>
                            <WithStyles(ForwardRef(Accordion))>
                              <ForwardRef(Accordion)
                                classes={
                                  Object {
                                    "disabled": "PodBrowser-disabled",
                                    "expanded": "PodBrowser-expanded",
                                    "root": "PodBrowser-root",
                                    "rounded": "PodBrowser-rounded",
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Paper))
                                  className="PodBrowser-root PodBrowser-rounded"
                                  square={false}
                                >
                                  <ForwardRef(Paper)
                                    className="PodBrowser-root PodBrowser-rounded"
                                    classes={
                                      Object {
                                        "elevation0": "PodBrowser-elevation0",
                                        "elevation1": "PodBrowser-elevation1",
                                        "elevation10": "PodBrowser-elevation10",
                                        "elevation11": "PodBrowser-elevation11",
                                        "elevation12": "PodBrowser-elevation12",
                                        "elevation13": "PodBrowser-elevation13",
                                        "elevation14": "PodBrowser-elevation14",
                                        "elevation15": "PodBrowser-elevation15",
                                        "elevation16": "PodBrowser-elevation16",
                                        "elevation17": "PodBrowser-elevation17",
                                        "elevation18": "PodBrowser-elevation18",
                                        "elevation19": "PodBrowser-elevation19",
                                        "elevation2": "PodBrowser-elevation2",
                                        "elevation20": "PodBrowser-elevation20",
                                        "elevation21": "PodBrowser-elevation21",
                                        "elevation22": "PodBrowser-elevation22",
                                        "elevation23": "PodBrowser-elevation23",
                                        "elevation24": "PodBrowser-elevation24",
                                        "elevation3": "PodBrowser-elevation3",
                                        "elevation4": "PodBrowser-elevation4",
                                        "elevation5": "PodBrowser-elevation5",
                                        "elevation6": "PodBrowser-elevation6",
                                        "elevation7": "PodBrowser-elevation7",
                                        "elevation8": "PodBrowser-elevation8",
                                        "elevation9": "PodBrowser-elevation9",
                                        "outlined": "PodBrowser-outlined",
                                        "root": "PodBrowser-root",
                                        "rounded": "PodBrowser-rounded",
                                      }
                                    }
                                    square={false}
                                  >
                                    <div
                                      className="PodBrowser-root PodBrowser-root PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                                    >
                                      <WithStyles(ForwardRef(AccordionSummary))
                                        data-testid="accordion-resource-details-trigger"
                                        expandIcon={<Memo(ExpandMoreIcon) />}
                                        key=".0"
                                      >
                                        <ForwardRef(AccordionSummary)
                                          classes={
                                            Object {
                                              "content": "PodBrowser-content",
                                              "disabled": "PodBrowser-disabled",
                                              "expandIcon": "PodBrowser-expandIcon",
                                              "expanded": "PodBrowser-expanded",
                                              "focused": "PodBrowser-focused",
                                              "root": "PodBrowser-root",
                                            }
                                          }
                                          data-testid="accordion-resource-details-trigger"
                                          expandIcon={<Memo(ExpandMoreIcon) />}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            aria-expanded={false}
                                            className="PodBrowser-root"
                                            component="div"
                                            data-testid="accordion-resource-details-trigger"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocusVisible={[Function]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              aria-expanded={false}
                                              className="PodBrowser-root"
                                              classes={
                                                Object {
                                                  "disabled": "PodBrowser-disabled",
                                                  "focusVisible": "PodBrowser-focusVisible",
                                                  "root": "PodBrowser-root",
                                                }
                                              }
                                              component="div"
                                              data-testid="accordion-resource-details-trigger"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocusVisible={[Function]}
                                            >
                                              <div
                                                aria-disabled={false}
                                                aria-expanded={false}
                                                className="PodBrowser-root PodBrowser-root"
                                                data-testid="accordion-resource-details-trigger"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                role="button"
                                                tabIndex={0}
                                              >
                                                <div
                                                  className="PodBrowser-content"
                                                >
                                                  Details
                                                </div>
                                                <WithStyles(ForwardRef(IconButton))
                                                  aria-hidden={true}
                                                  className="PodBrowser-expandIcon"
                                                  component="div"
                                                  edge="end"
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <ForwardRef(IconButton)
                                                    aria-hidden={true}
                                                    className="PodBrowser-expandIcon"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "PodBrowser-colorInherit",
                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                        "disabled": "PodBrowser-disabled",
                                                        "edgeEnd": "PodBrowser-edgeEnd",
                                                        "edgeStart": "PodBrowser-edgeStart",
                                                        "label": "PodBrowser-label",
                                                        "root": "PodBrowser-root",
                                                        "sizeSmall": "PodBrowser-sizeSmall",
                                                      }
                                                    }
                                                    component="div"
                                                    edge="end"
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      aria-hidden={true}
                                                      centerRipple={true}
                                                      className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                      component="div"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        aria-hidden={true}
                                                        centerRipple={true}
                                                        className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                        classes={
                                                          Object {
                                                            "disabled": "PodBrowser-disabled",
                                                            "focusVisible": "PodBrowser-focusVisible",
                                                            "root": "PodBrowser-root",
                                                          }
                                                        }
                                                        component="div"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <div
                                                          aria-disabled={false}
                                                          aria-hidden={true}
                                                          className="PodBrowser-root PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          role={null}
                                                          tabIndex={null}
                                                        >
                                                          <span
                                                            className="PodBrowser-label"
                                                          >
                                                            <ExpandMoreIcon>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "PodBrowser-colorAction",
                                                                      "colorDisabled": "PodBrowser-colorDisabled",
                                                                      "colorError": "PodBrowser-colorError",
                                                                      "colorPrimary": "PodBrowser-colorPrimary",
                                                                      "colorSecondary": "PodBrowser-colorSecondary",
                                                                      "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                      "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                      "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                      "root": "PodBrowser-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="PodBrowser-root"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ExpandMoreIcon>
                                                          </span>
                                                          <WithStyles(memo)
                                                            center={true}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={true}
                                                              classes={
                                                                Object {
                                                                  "child": "PodBrowser-child",
                                                                  "childLeaving": "PodBrowser-childLeaving",
                                                                  "childPulsate": "PodBrowser-childPulsate",
                                                                  "ripple": "PodBrowser-ripple",
                                                                  "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                  "rippleVisible": "PodBrowser-rippleVisible",
                                                                  "root": "PodBrowser-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="PodBrowser-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </div>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </div>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(AccordionSummary)>
                                      </WithStyles(ForwardRef(AccordionSummary))>
                                      <WithStyles(ForwardRef(Collapse))
                                        in={false}
                                        timeout="auto"
                                      >
                                        <ForwardRef(Collapse)
                                          classes={
                                            Object {
                                              "container": "PodBrowser-container",
                                              "entered": "PodBrowser-entered",
                                              "hidden": "PodBrowser-hidden",
                                              "wrapper": "PodBrowser-wrapper",
                                              "wrapperInner": "PodBrowser-wrapperInner",
                                            }
                                          }
                                          in={false}
                                          timeout="auto"
                                        >
                                          <Transition
                                            addEndListener={[Function]}
                                            appear={false}
                                            enter={true}
                                            exit={true}
                                            in={false}
                                            mountOnEnter={false}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            timeout={null}
                                            unmountOnExit={false}
                                          >
                                            <div
                                              className="PodBrowser-container PodBrowser-hidden"
                                              style={
                                                Object {
                                                  "minHeight": "0px",
                                                }
                                              }
                                            >
                                              <div
                                                className="PodBrowser-wrapper"
                                              >
                                                <div
                                                  className="PodBrowser-wrapperInner"
                                                >
                                                  <div
                                                    role="region"
                                                  >
                                                    <WithStyles(ForwardRef(AccordionDetails))
                                                      className="PodBrowser-accordionDetails"
                                                      key=".1"
                                                    >
                                                      <ForwardRef(AccordionDetails)
                                                        className="PodBrowser-accordionDetails"
                                                        classes={
                                                          Object {
                                                            "root": "PodBrowser-root",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="PodBrowser-root PodBrowser-accordionDetails"
                                                        >
                                                          <section
                                                            className="PodBrowser-centeredSection"
                                                          >
                                                            <WithStyles(ForwardRef(List))>
                                                              <ForwardRef(List)
                                                                classes={
                                                                  Object {
                                                                    "dense": "PodBrowser-dense",
                                                                    "padding": "PodBrowser-padding",
                                                                    "root": "PodBrowser-root",
                                                                    "subheader": "PodBrowser-subheader",
                                                                  }
                                                                }
                                                              >
                                                                <ul
                                                                  className="PodBrowser-root PodBrowser-padding"
                                                                >
                                                                  <WithStyles(ForwardRef(ListItem))>
                                                                    <ForwardRef(ListItem)
                                                                      classes={
                                                                        Object {
                                                                          "alignItemsFlexStart": "PodBrowser-alignItemsFlexStart",
                                                                          "button": "PodBrowser-button",
                                                                          "container": "PodBrowser-container",
                                                                          "dense": "PodBrowser-dense",
                                                                          "disabled": "PodBrowser-disabled",
                                                                          "divider": "PodBrowser-divider",
                                                                          "focusVisible": "PodBrowser-focusVisible",
                                                                          "gutters": "PodBrowser-gutters",
                                                                          "root": "PodBrowser-root",
                                                                          "secondaryAction": "PodBrowser-secondaryAction",
                                                                          "selected": "PodBrowser-selected",
                                                                        }
                                                                      }
                                                                    >
                                                                      <li
                                                                        className="PodBrowser-root PodBrowser-gutters"
                                                                        disabled={false}
                                                                      >
                                                                        <WithStyles(ForwardRef(Typography))
                                                                          className="PodBrowser-detailText"
                                                                          key=".0"
                                                                        >
                                                                          <ForwardRef(Typography)
                                                                            className="PodBrowser-detailText"
                                                                            classes={
                                                                              Object {
                                                                                "alignCenter": "PodBrowser-alignCenter",
                                                                                "alignJustify": "PodBrowser-alignJustify",
                                                                                "alignLeft": "PodBrowser-alignLeft",
                                                                                "alignRight": "PodBrowser-alignRight",
                                                                                "body1": "PodBrowser-body1",
                                                                                "body2": "PodBrowser-body2",
                                                                                "button": "PodBrowser-button",
                                                                                "caption": "PodBrowser-caption",
                                                                                "colorError": "PodBrowser-colorError",
                                                                                "colorInherit": "PodBrowser-colorInherit",
                                                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                                "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                                "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                                "displayBlock": "PodBrowser-displayBlock",
                                                                                "displayInline": "PodBrowser-displayInline",
                                                                                "gutterBottom": "PodBrowser-gutterBottom",
                                                                                "h1": "PodBrowser-h1",
                                                                                "h2": "PodBrowser-h2",
                                                                                "h3": "PodBrowser-h3",
                                                                                "h4": "PodBrowser-h4",
                                                                                "h5": "PodBrowser-h5",
                                                                                "h6": "PodBrowser-h6",
                                                                                "noWrap": "PodBrowser-noWrap",
                                                                                "overline": "PodBrowser-overline",
                                                                                "paragraph": "PodBrowser-paragraph",
                                                                                "root": "PodBrowser-root",
                                                                                "srOnly": "PodBrowser-srOnly",
                                                                                "subtitle1": "PodBrowser-subtitle1",
                                                                                "subtitle2": "PodBrowser-subtitle2",
                                                                              }
                                                                            }
                                                                          >
                                                                            <p
                                                                              className="PodBrowser-root PodBrowser-detailText PodBrowser-body1"
                                                                            >
                                                                              Thing Type:
                                                                            </p>
                                                                          </ForwardRef(Typography)>
                                                                        </WithStyles(ForwardRef(Typography))>
                                                                        <WithStyles(ForwardRef(Typography))
                                                                          className="PodBrowser-typeValue PodBrowser-detailText"
                                                                          key=".1"
                                                                        >
                                                                          <ForwardRef(Typography)
                                                                            className="PodBrowser-typeValue PodBrowser-detailText"
                                                                            classes={
                                                                              Object {
                                                                                "alignCenter": "PodBrowser-alignCenter",
                                                                                "alignJustify": "PodBrowser-alignJustify",
                                                                                "alignLeft": "PodBrowser-alignLeft",
                                                                                "alignRight": "PodBrowser-alignRight",
                                                                                "body1": "PodBrowser-body1",
                                                                                "body2": "PodBrowser-body2",
                                                                                "button": "PodBrowser-button",
                                                                                "caption": "PodBrowser-caption",
                                                                                "colorError": "PodBrowser-colorError",
                                                                                "colorInherit": "PodBrowser-colorInherit",
                                                                                "colorPrimary": "PodBrowser-colorPrimary",
                                                                                "colorSecondary": "PodBrowser-colorSecondary",
                                                                                "colorTextPrimary": "PodBrowser-colorTextPrimary",
                                                                                "colorTextSecondary": "PodBrowser-colorTextSecondary",
                                                                                "displayBlock": "PodBrowser-displayBlock",
                                                                                "displayInline": "PodBrowser-displayInline",
                                                                                "gutterBottom": "PodBrowser-gutterBottom",
                                                                                "h1": "PodBrowser-h1",
                                                                                "h2": "PodBrowser-h2",
                                                                                "h3": "PodBrowser-h3",
                                                                                "h4": "PodBrowser-h4",
                                                                                "h5": "PodBrowser-h5",
                                                                                "h6": "PodBrowser-h6",
                                                                                "noWrap": "PodBrowser-noWrap",
                                                                                "overline": "PodBrowser-overline",
                                                                                "paragraph": "PodBrowser-paragraph",
                                                                                "root": "PodBrowser-root",
                                                                                "srOnly": "PodBrowser-srOnly",
                                                                                "subtitle1": "PodBrowser-subtitle1",
                                                                                "subtitle2": "PodBrowser-subtitle2",
                                                                              }
                                                                            }
                                                                          >
                                                                            <p
                                                                              className="PodBrowser-root PodBrowser-typeValue PodBrowser-detailText PodBrowser-body1"
                                                                            >
                                                                              text/turtle
                                                                            </p>
                                                                          </ForwardRef(Typography)>
                                                                        </WithStyles(ForwardRef(Typography))>
                                                                      </li>
                                                                    </ForwardRef(ListItem)>
                                                                  </WithStyles(ForwardRef(ListItem))>
                                                                </ul>
                                                              </ForwardRef(List)>
                                                            </WithStyles(ForwardRef(List))>
                                                          </section>
                                                        </div>
                                                      </ForwardRef(AccordionDetails)>
                                                    </WithStyles(ForwardRef(AccordionDetails))>
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </Transition>
                                        </ForwardRef(Collapse)>
                                      </WithStyles(ForwardRef(Collapse))>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </ForwardRef(Accordion)>
                            </WithStyles(ForwardRef(Accordion))>
                            <WithStyles(ForwardRef(Accordion))>
                              <ForwardRef(Accordion)
                                classes={
                                  Object {
                                    "disabled": "PodBrowser-disabled",
                                    "expanded": "PodBrowser-expanded",
                                    "root": "PodBrowser-root",
                                    "rounded": "PodBrowser-rounded",
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Paper))
                                  className="PodBrowser-root PodBrowser-rounded"
                                  square={false}
                                >
                                  <ForwardRef(Paper)
                                    className="PodBrowser-root PodBrowser-rounded"
                                    classes={
                                      Object {
                                        "elevation0": "PodBrowser-elevation0",
                                        "elevation1": "PodBrowser-elevation1",
                                        "elevation10": "PodBrowser-elevation10",
                                        "elevation11": "PodBrowser-elevation11",
                                        "elevation12": "PodBrowser-elevation12",
                                        "elevation13": "PodBrowser-elevation13",
                                        "elevation14": "PodBrowser-elevation14",
                                        "elevation15": "PodBrowser-elevation15",
                                        "elevation16": "PodBrowser-elevation16",
                                        "elevation17": "PodBrowser-elevation17",
                                        "elevation18": "PodBrowser-elevation18",
                                        "elevation19": "PodBrowser-elevation19",
                                        "elevation2": "PodBrowser-elevation2",
                                        "elevation20": "PodBrowser-elevation20",
                                        "elevation21": "PodBrowser-elevation21",
                                        "elevation22": "PodBrowser-elevation22",
                                        "elevation23": "PodBrowser-elevation23",
                                        "elevation24": "PodBrowser-elevation24",
                                        "elevation3": "PodBrowser-elevation3",
                                        "elevation4": "PodBrowser-elevation4",
                                        "elevation5": "PodBrowser-elevation5",
                                        "elevation6": "PodBrowser-elevation6",
                                        "elevation7": "PodBrowser-elevation7",
                                        "elevation8": "PodBrowser-elevation8",
                                        "elevation9": "PodBrowser-elevation9",
                                        "outlined": "PodBrowser-outlined",
                                        "root": "PodBrowser-root",
                                        "rounded": "PodBrowser-rounded",
                                      }
                                    }
                                    square={false}
                                  >
                                    <div
                                      className="PodBrowser-root PodBrowser-root PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                                    >
                                      <WithStyles(ForwardRef(AccordionSummary))
                                        data-testid="accordion-resource-permissions-trigger"
                                        expandIcon={<Memo(ExpandMoreIcon) />}
                                        key=".0"
                                      >
                                        <ForwardRef(AccordionSummary)
                                          classes={
                                            Object {
                                              "content": "PodBrowser-content",
                                              "disabled": "PodBrowser-disabled",
                                              "expandIcon": "PodBrowser-expandIcon",
                                              "expanded": "PodBrowser-expanded",
                                              "focused": "PodBrowser-focused",
                                              "root": "PodBrowser-root",
                                            }
                                          }
                                          data-testid="accordion-resource-permissions-trigger"
                                          expandIcon={<Memo(ExpandMoreIcon) />}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            aria-expanded={false}
                                            className="PodBrowser-root"
                                            component="div"
                                            data-testid="accordion-resource-permissions-trigger"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocusVisible={[Function]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              aria-expanded={false}
                                              className="PodBrowser-root"
                                              classes={
                                                Object {
                                                  "disabled": "PodBrowser-disabled",
                                                  "focusVisible": "PodBrowser-focusVisible",
                                                  "root": "PodBrowser-root",
                                                }
                                              }
                                              component="div"
                                              data-testid="accordion-resource-permissions-trigger"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocusVisible={[Function]}
                                            >
                                              <div
                                                aria-disabled={false}
                                                aria-expanded={false}
                                                className="PodBrowser-root PodBrowser-root"
                                                data-testid="accordion-resource-permissions-trigger"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                role="button"
                                                tabIndex={0}
                                              >
                                                <div
                                                  className="PodBrowser-content"
                                                >
                                                  Permissions
                                                </div>
                                                <WithStyles(ForwardRef(IconButton))
                                                  aria-hidden={true}
                                                  className="PodBrowser-expandIcon"
                                                  component="div"
                                                  edge="end"
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <ForwardRef(IconButton)
                                                    aria-hidden={true}
                                                    className="PodBrowser-expandIcon"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "PodBrowser-colorInherit",
                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                        "disabled": "PodBrowser-disabled",
                                                        "edgeEnd": "PodBrowser-edgeEnd",
                                                        "edgeStart": "PodBrowser-edgeStart",
                                                        "label": "PodBrowser-label",
                                                        "root": "PodBrowser-root",
                                                        "sizeSmall": "PodBrowser-sizeSmall",
                                                      }
                                                    }
                                                    component="div"
                                                    edge="end"
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      aria-hidden={true}
                                                      centerRipple={true}
                                                      className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                      component="div"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        aria-hidden={true}
                                                        centerRipple={true}
                                                        className="PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                        classes={
                                                          Object {
                                                            "disabled": "PodBrowser-disabled",
                                                            "focusVisible": "PodBrowser-focusVisible",
                                                            "root": "PodBrowser-root",
                                                          }
                                                        }
                                                        component="div"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <div
                                                          aria-disabled={false}
                                                          aria-hidden={true}
                                                          className="PodBrowser-root PodBrowser-root PodBrowser-expandIcon PodBrowser-edgeEnd"
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          role={null}
                                                          tabIndex={null}
                                                        >
                                                          <span
                                                            className="PodBrowser-label"
                                                          >
                                                            <ExpandMoreIcon>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "PodBrowser-colorAction",
                                                                      "colorDisabled": "PodBrowser-colorDisabled",
                                                                      "colorError": "PodBrowser-colorError",
                                                                      "colorPrimary": "PodBrowser-colorPrimary",
                                                                      "colorSecondary": "PodBrowser-colorSecondary",
                                                                      "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                      "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                      "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                      "root": "PodBrowser-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="PodBrowser-root"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ExpandMoreIcon>
                                                          </span>
                                                          <WithStyles(memo)
                                                            center={true}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={true}
                                                              classes={
                                                                Object {
                                                                  "child": "PodBrowser-child",
                                                                  "childLeaving": "PodBrowser-childLeaving",
                                                                  "childPulsate": "PodBrowser-childPulsate",
                                                                  "ripple": "PodBrowser-ripple",
                                                                  "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                  "rippleVisible": "PodBrowser-rippleVisible",
                                                                  "root": "PodBrowser-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="PodBrowser-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </div>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(IconButton)>
                                                </WithStyles(ForwardRef(IconButton))>
                                              </div>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(AccordionSummary)>
                                      </WithStyles(ForwardRef(AccordionSummary))>
                                      <WithStyles(ForwardRef(Collapse))
                                        in={false}
                                        timeout="auto"
                                      >
                                        <ForwardRef(Collapse)
                                          classes={
                                            Object {
                                              "container": "PodBrowser-container",
                                              "entered": "PodBrowser-entered",
                                              "hidden": "PodBrowser-hidden",
                                              "wrapper": "PodBrowser-wrapper",
                                              "wrapperInner": "PodBrowser-wrapperInner",
                                            }
                                          }
                                          in={false}
                                          timeout="auto"
                                        >
                                          <Transition
                                            addEndListener={[Function]}
                                            appear={false}
                                            enter={true}
                                            exit={true}
                                            in={false}
                                            mountOnEnter={false}
                                            onEnter={[Function]}
                                            onEntered={[Function]}
                                            onEntering={[Function]}
                                            onExit={[Function]}
                                            onExited={[Function]}
                                            onExiting={[Function]}
                                            timeout={null}
                                            unmountOnExit={false}
                                          >
                                            <div
                                              className="PodBrowser-container PodBrowser-hidden"
                                              style={
                                                Object {
                                                  "minHeight": "0px",
                                                }
                                              }
                                            >
                                              <div
                                                className="PodBrowser-wrapper"
                                              >
                                                <div
                                                  className="PodBrowser-wrapperInner"
                                                >
                                                  <div
                                                    role="region"
                                                  >
                                                    <WithStyles(ForwardRef(AccordionDetails))
                                                      className="PodBrowser-accordionDetails"
                                                      key=".1"
                                                    >
                                                      <ForwardRef(AccordionDetails)
                                                        className="PodBrowser-accordionDetails"
                                                        classes={
                                                          Object {
                                                            "root": "PodBrowser-root",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="PodBrowser-root PodBrowser-accordionDetails"
                                                        >
                                                          <ResourceSharing
                                                            startLoading={false}
                                                          >
                                                            <ActionMenu>
                                                              <ul
                                                                className="PodBrowser-action-menu"
                                                              >
                                                                <ActionMenuItem>
                                                                  <li
                                                                    className="PodBrowser-action-menu__item"
                                                                  >
                                                                    <AddPermissionUsingWebIdButton
                                                                      className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--prompt"
                                                                      onLoading={[Function]}
                                                                    >
                                                                      <button
                                                                        className="PodBrowser-action-menu__trigger PodBrowser-action-menu__trigger--prompt"
                                                                        data-testid="permissions-add-user-with-webid-button"
                                                                        onClick={[Function]}
                                                                        type="button"
                                                                      >
                                                                        Add with WebId
                                                                      </button>
                                                                      <WithStyles(ForwardRef(Popover))
                                                                        anchorEl={null}
                                                                        anchorOrigin={
                                                                          Object {
                                                                            "horizontal": "center",
                                                                            "vertical": "bottom",
                                                                          }
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "paper": "PodBrowser-paper",
                                                                          }
                                                                        }
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                        transformOrigin={
                                                                          Object {
                                                                            "horizontal": "center",
                                                                            "vertical": "top",
                                                                          }
                                                                        }
                                                                      >
                                                                        <ForwardRef(Popover)
                                                                          anchorEl={null}
                                                                          anchorOrigin={
                                                                            Object {
                                                                              "horizontal": "center",
                                                                              "vertical": "bottom",
                                                                            }
                                                                          }
                                                                          classes={
                                                                            Object {
                                                                              "paper": "PodBrowser-paper PodBrowser-paper",
                                                                              "root": "PodBrowser-root",
                                                                            }
                                                                          }
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                          transformOrigin={
                                                                            Object {
                                                                              "horizontal": "center",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                        >
                                                                          <ForwardRef(Modal)
                                                                            BackdropProps={
                                                                              Object {
                                                                                "invisible": true,
                                                                              }
                                                                            }
                                                                            className="PodBrowser-root"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                          />
                                                                        </ForwardRef(Popover)>
                                                                      </WithStyles(ForwardRef(Popover))>
                                                                    </AddPermissionUsingWebIdButton>
                                                                  </li>
                                                                </ActionMenuItem>
                                                              </ul>
                                                            </ActionMenu>
                                                            <WithStyles(ForwardRef(Accordion))
                                                              defaultExpanded={true}
                                                            >
                                                              <ForwardRef(Accordion)
                                                                classes={
                                                                  Object {
                                                                    "disabled": "PodBrowser-disabled",
                                                                    "expanded": "PodBrowser-expanded",
                                                                    "root": "PodBrowser-root",
                                                                    "rounded": "PodBrowser-rounded",
                                                                  }
                                                                }
                                                                defaultExpanded={true}
                                                              >
                                                                <WithStyles(ForwardRef(Paper))
                                                                  className="PodBrowser-root PodBrowser-expanded PodBrowser-rounded"
                                                                  square={false}
                                                                >
                                                                  <ForwardRef(Paper)
                                                                    className="PodBrowser-root PodBrowser-expanded PodBrowser-rounded"
                                                                    classes={
                                                                      Object {
                                                                        "elevation0": "PodBrowser-elevation0",
                                                                        "elevation1": "PodBrowser-elevation1",
                                                                        "elevation10": "PodBrowser-elevation10",
                                                                        "elevation11": "PodBrowser-elevation11",
                                                                        "elevation12": "PodBrowser-elevation12",
                                                                        "elevation13": "PodBrowser-elevation13",
                                                                        "elevation14": "PodBrowser-elevation14",
                                                                        "elevation15": "PodBrowser-elevation15",
                                                                        "elevation16": "PodBrowser-elevation16",
                                                                        "elevation17": "PodBrowser-elevation17",
                                                                        "elevation18": "PodBrowser-elevation18",
                                                                        "elevation19": "PodBrowser-elevation19",
                                                                        "elevation2": "PodBrowser-elevation2",
                                                                        "elevation20": "PodBrowser-elevation20",
                                                                        "elevation21": "PodBrowser-elevation21",
                                                                        "elevation22": "PodBrowser-elevation22",
                                                                        "elevation23": "PodBrowser-elevation23",
                                                                        "elevation24": "PodBrowser-elevation24",
                                                                        "elevation3": "PodBrowser-elevation3",
                                                                        "elevation4": "PodBrowser-elevation4",
                                                                        "elevation5": "PodBrowser-elevation5",
                                                                        "elevation6": "PodBrowser-elevation6",
                                                                        "elevation7": "PodBrowser-elevation7",
                                                                        "elevation8": "PodBrowser-elevation8",
                                                                        "elevation9": "PodBrowser-elevation9",
                                                                        "outlined": "PodBrowser-outlined",
                                                                        "root": "PodBrowser-root",
                                                                        "rounded": "PodBrowser-rounded",
                                                                      }
                                                                    }
                                                                    square={false}
                                                                  >
                                                                    <div
                                                                      className="PodBrowser-root PodBrowser-root PodBrowser-expanded PodBrowser-rounded PodBrowser-elevation1 PodBrowser-rounded"
                                                                    >
                                                                      <WithStyles(ForwardRef(AccordionSummary))
                                                                        expandIcon={<Memo(ExpandMoreIcon) />}
                                                                        key=".0"
                                                                      >
                                                                        <ForwardRef(AccordionSummary)
                                                                          classes={
                                                                            Object {
                                                                              "content": "PodBrowser-content",
                                                                              "disabled": "PodBrowser-disabled",
                                                                              "expandIcon": "PodBrowser-expandIcon",
                                                                              "expanded": "PodBrowser-expanded",
                                                                              "focused": "PodBrowser-focused",
                                                                              "root": "PodBrowser-root",
                                                                            }
                                                                          }
                                                                          expandIcon={<Memo(ExpandMoreIcon) />}
                                                                        >
                                                                          <WithStyles(ForwardRef(ButtonBase))
                                                                            aria-expanded={true}
                                                                            className="PodBrowser-root PodBrowser-expanded"
                                                                            component="div"
                                                                            disableRipple={true}
                                                                            disabled={false}
                                                                            focusRipple={false}
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onFocusVisible={[Function]}
                                                                          >
                                                                            <ForwardRef(ButtonBase)
                                                                              aria-expanded={true}
                                                                              className="PodBrowser-root PodBrowser-expanded"
                                                                              classes={
                                                                                Object {
                                                                                  "disabled": "PodBrowser-disabled",
                                                                                  "focusVisible": "PodBrowser-focusVisible",
                                                                                  "root": "PodBrowser-root",
                                                                                }
                                                                              }
                                                                              component="div"
                                                                              disableRipple={true}
                                                                              disabled={false}
                                                                              focusRipple={false}
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onFocusVisible={[Function]}
                                                                            >
                                                                              <div
                                                                                aria-disabled={false}
                                                                                aria-expanded={true}
                                                                                className="PodBrowser-root PodBrowser-root PodBrowser-expanded"
                                                                                onBlur={[Function]}
                                                                                onClick={[Function]}
                                                                                onDragLeave={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                onMouseLeave={[Function]}
                                                                                onMouseUp={[Function]}
                                                                                onTouchEnd={[Function]}
                                                                                onTouchMove={[Function]}
                                                                                onTouchStart={[Function]}
                                                                                role="button"
                                                                                tabIndex={0}
                                                                              >
                                                                                <div
                                                                                  className="PodBrowser-content PodBrowser-expanded"
                                                                                >
                                                                                  Individual permissions
                                                                                </div>
                                                                                <WithStyles(ForwardRef(IconButton))
                                                                                  aria-hidden={true}
                                                                                  className="PodBrowser-expandIcon PodBrowser-expanded"
                                                                                  component="div"
                                                                                  edge="end"
                                                                                  role={null}
                                                                                  tabIndex={null}
                                                                                >
                                                                                  <ForwardRef(IconButton)
                                                                                    aria-hidden={true}
                                                                                    className="PodBrowser-expandIcon PodBrowser-expanded"
                                                                                    classes={
                                                                                      Object {
                                                                                        "colorInherit": "PodBrowser-colorInherit",
                                                                                        "colorPrimary": "PodBrowser-colorPrimary",
                                                                                        "colorSecondary": "PodBrowser-colorSecondary",
                                                                                        "disabled": "PodBrowser-disabled",
                                                                                        "edgeEnd": "PodBrowser-edgeEnd",
                                                                                        "edgeStart": "PodBrowser-edgeStart",
                                                                                        "label": "PodBrowser-label",
                                                                                        "root": "PodBrowser-root",
                                                                                        "sizeSmall": "PodBrowser-sizeSmall",
                                                                                      }
                                                                                    }
                                                                                    component="div"
                                                                                    edge="end"
                                                                                    role={null}
                                                                                    tabIndex={null}
                                                                                  >
                                                                                    <WithStyles(ForwardRef(ButtonBase))
                                                                                      aria-hidden={true}
                                                                                      centerRipple={true}
                                                                                      className="PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                                                      component="div"
                                                                                      disabled={false}
                                                                                      focusRipple={true}
                                                                                      role={null}
                                                                                      tabIndex={null}
                                                                                    >
                                                                                      <ForwardRef(ButtonBase)
                                                                                        aria-hidden={true}
                                                                                        centerRipple={true}
                                                                                        className="PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                                                        classes={
                                                                                          Object {
                                                                                            "disabled": "PodBrowser-disabled",
                                                                                            "focusVisible": "PodBrowser-focusVisible",
                                                                                            "root": "PodBrowser-root",
                                                                                          }
                                                                                        }
                                                                                        component="div"
                                                                                        disabled={false}
                                                                                        focusRipple={true}
                                                                                        role={null}
                                                                                        tabIndex={null}
                                                                                      >
                                                                                        <div
                                                                                          aria-disabled={false}
                                                                                          aria-hidden={true}
                                                                                          className="PodBrowser-root PodBrowser-root PodBrowser-expandIcon PodBrowser-expanded PodBrowser-edgeEnd"
                                                                                          onBlur={[Function]}
                                                                                          onDragLeave={[Function]}
                                                                                          onFocus={[Function]}
                                                                                          onKeyDown={[Function]}
                                                                                          onKeyUp={[Function]}
                                                                                          onMouseDown={[Function]}
                                                                                          onMouseLeave={[Function]}
                                                                                          onMouseUp={[Function]}
                                                                                          onTouchEnd={[Function]}
                                                                                          onTouchMove={[Function]}
                                                                                          onTouchStart={[Function]}
                                                                                          role={null}
                                                                                          tabIndex={null}
                                                                                        >
                                                                                          <span
                                                                                            className="PodBrowser-label"
                                                                                          >
                                                                                            <ExpandMoreIcon>
                                                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                                                <ForwardRef(SvgIcon)
                                                                                                  classes={
                                                                                                    Object {
                                                                                                      "colorAction": "PodBrowser-colorAction",
                                                                                                      "colorDisabled": "PodBrowser-colorDisabled",
                                                                                                      "colorError": "PodBrowser-colorError",
                                                                                                      "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                      "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                      "fontSizeInherit": "PodBrowser-fontSizeInherit",
                                                                                                      "fontSizeLarge": "PodBrowser-fontSizeLarge",
                                                                                                      "fontSizeSmall": "PodBrowser-fontSizeSmall",
                                                                                                      "root": "PodBrowser-root",
                                                                                                    }
                                                                                                  }
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden={true}
                                                                                                    className="PodBrowser-root"
                                                                                                    focusable="false"
                                                                                                    viewBox="0 0 24 24"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </ForwardRef(SvgIcon)>
                                                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                                                            </ExpandMoreIcon>
                                                                                          </span>
                                                                                          <WithStyles(memo)
                                                                                            center={true}
                                                                                          >
                                                                                            <ForwardRef(TouchRipple)
                                                                                              center={true}
                                                                                              classes={
                                                                                                Object {
                                                                                                  "child": "PodBrowser-child",
                                                                                                  "childLeaving": "PodBrowser-childLeaving",
                                                                                                  "childPulsate": "PodBrowser-childPulsate",
                                                                                                  "ripple": "PodBrowser-ripple",
                                                                                                  "ripplePulsate": "PodBrowser-ripplePulsate",
                                                                                                  "rippleVisible": "PodBrowser-rippleVisible",
                                                                                                  "root": "PodBrowser-root",
                                                                                                }
                                                                                              }
                                                                                            >
                                                                                              <span
                                                                                                className="PodBrowser-root"
                                                                                              >
                                                                                                <TransitionGroup
                                                                                                  childFactory={[Function]}
                                                                                                  component={null}
                                                                                                  exit={true}
                                                                                                />
                                                                                              </span>
                                                                                            </ForwardRef(TouchRipple)>
                                                                                          </WithStyles(memo)>
                                                                                        </div>
                                                                                      </ForwardRef(ButtonBase)>
                                                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                                                  </ForwardRef(IconButton)>
                                                                                </WithStyles(ForwardRef(IconButton))>
                                                                              </div>
                                                                            </ForwardRef(ButtonBase)>
                                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                                        </ForwardRef(AccordionSummary)>
                                                                      </WithStyles(ForwardRef(AccordionSummary))>
                                                                      <WithStyles(ForwardRef(Collapse))
                                                                        in={true}
                                                                        timeout="auto"
                                                                      >
                                                                        <ForwardRef(Collapse)
                                                                          classes={
                                                                            Object {
                                                                              "container": "PodBrowser-container",
                                                                              "entered": "PodBrowser-entered",
                                                                              "hidden": "PodBrowser-hidden",
                                                                              "wrapper": "PodBrowser-wrapper",
                                                                              "wrapperInner": "PodBrowser-wrapperInner",
                                                                            }
                                                                          }
                                                                          in={true}
                                                                          timeout="auto"
                                                                        >
                                                                          <Transition
                                                                            addEndListener={[Function]}
                                                                            appear={false}
                                                                            enter={true}
                                                                            exit={true}
                                                                            in={true}
                                                                            mountOnEnter={false}
                                                                            onEnter={[Function]}
                                                                            onEntered={[Function]}
                                                                            onEntering={[Function]}
                                                                            onExit={[Function]}
                                                                            onExited={[Function]}
                                                                            onExiting={[Function]}
                                                                            timeout={null}
                                                                            unmountOnExit={false}
                                                                          >
                                                                            <div
                                                                              className="PodBrowser-container PodBrowser-entered"
                                                                              style={
                                                                                Object {
                                                                                  "minHeight": "0px",
                                                                                }
                                                                              }
                                                                            >
                                                                              <div
                                                                                className="PodBrowser-wrapper"
                                                                              >
                                                                                <div
                                                                                  className="PodBrowser-wrapperInner"
                                                                                >
                                                                                  <div
                                                                                    role="region"
                                                                                  >
                                                                                    <WithStyles(ForwardRef(AccordionDetails))
                                                                                      className="PodBrowser-details"
                                                                                      key=".1"
                                                                                    >
                                                                                      <ForwardRef(AccordionDetails)
                                                                                        className="PodBrowser-details"
                                                                                        classes={
                                                                                          Object {
                                                                                            "root": "PodBrowser-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <div
                                                                                          className="PodBrowser-root PodBrowser-details"
                                                                                        >
                                                                                          <AgentAccessList
                                                                                            onLoading={[Function]}
                                                                                          >
                                                                                            <WithStyles(ForwardRef(CircularProgress))
                                                                                              color="primary"
                                                                                            >
                                                                                              <ForwardRef(CircularProgress)
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "circle": "PodBrowser-circle",
                                                                                                    "circleDisableShrink": "PodBrowser-circleDisableShrink",
                                                                                                    "circleIndeterminate": "PodBrowser-circleIndeterminate",
                                                                                                    "circleStatic": "PodBrowser-circleStatic",
                                                                                                    "colorPrimary": "PodBrowser-colorPrimary",
                                                                                                    "colorSecondary": "PodBrowser-colorSecondary",
                                                                                                    "indeterminate": "PodBrowser-indeterminate",
                                                                                                    "root": "PodBrowser-root",
                                                                                                    "static": "PodBrowser-static",
                                                                                                    "svg": "PodBrowser-svg",
                                                                                                  }
                                                                                                }
                                                                                                color="primary"
                                                                                              >
                                                                                                <div
                                                                                                  className="PodBrowser-root PodBrowser-colorPrimary PodBrowser-indeterminate"
                                                                                                  role="progressbar"
                                                                                                  style={
                                                                                                    Object {
                                                                                                      "height": 40,
                                                                                                      "width": 40,
                                                                                                    }
                                                                                                  }
                                                                                                >
                                                                                                  <svg
                                                                                                    className="PodBrowser-svg"
                                                                                                    viewBox="22 22 44 44"
                                                                                                  >
                                                                                                    <circle
                                                                                                      className="PodBrowser-circle PodBrowser-circleIndeterminate"
                                                                                                      cx={44}
                                                                                                      cy={44}
                                                                                                      fill="none"
                                                                                                      r={20.2}
                                                                                                      strokeWidth={3.6}
                                                                                                      style={Object {}}
                                                                                                    />
                                                                                                  </svg>
                                                                                                </div>
                                                                                              </ForwardRef(CircularProgress)>
                                                                                            </WithStyles(ForwardRef(CircularProgress))>
                                                                                          </AgentAccessList>
                                                                                        </div>
                                                                                      </ForwardRef(AccordionDetails)>
                                                                                    </WithStyles(ForwardRef(AccordionDetails))>
                                                                                  </div>
                                                                                </div>
                                                                              </div>
                                                                            </div>
                                                                          </Transition>
                                                                        </ForwardRef(Collapse)>
                                                                      </WithStyles(ForwardRef(Collapse))>
                                                                    </div>
                                                                  </ForwardRef(Paper)>
                                                                </WithStyles(ForwardRef(Paper))>
                                                              </ForwardRef(Accordion)>
                                                            </WithStyles(ForwardRef(Accordion))>
                                                          </ResourceSharing>
                                                        </div>
                                                      </ForwardRef(AccordionDetails)>
                                                    </WithStyles(ForwardRef(AccordionDetails))>
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </Transition>
                                        </ForwardRef(Collapse)>
                                      </WithStyles(ForwardRef(Collapse))>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </ForwardRef(Accordion)>
                            </WithStyles(ForwardRef(Accordion))>
                          </ResourceDetails>
                        </E>
                      </AccessControlProvider>
                    </div>
                  </div>
                </section>
              </Drawer>
            </ResourceDrawer>
          </DetailsContextMenuProvider>
        </y>
      </MockedSessionContextProvider>
    </ThemeProvider>
  </StylesProvider>
</Component>
`;

exports[`ResourceDrawer view renders a specific error message if resource fails with 403 1`] = `
<Component
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-ExtraBold": [Function],
        "fonts/Raleway/Raleway-Medium": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#C44539",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#4E4E4E",
          "secondary": "#4E4E4E",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 800,
        "fontWeightLight": 500,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.375rem",
          "fontWeight": 800,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.45,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.125rem",
          "fontWeight": 800,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.27,
        },
        "h3": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.05rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1.2,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.1,
        },
        "h5": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h6": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "0.625rem",
          "fontWeight": 800,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <StylesProvider
    generateClassName={[Function]}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1280,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "iconSet": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "icons": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "label": "SDK Default",
          "licenses": Array [
            "fonts/Raleway/OFL.txt",
          ],
          "localFonts": Object {
            "fonts/Raleway/Raleway-ExtraBold": [Function],
            "fonts/Raleway/Raleway-Medium": [Function],
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "name": "sdk-default",
          "overrides": Object {},
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "adjustAlpha": [Function],
            "augmentColor": [Function],
            "background": Object {
              "default": "#FFFFFF",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#C44539",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(86, 53, 178)",
              "light": "rgb(150, 112, 255)",
              "main": "#7C4DFF",
            },
            "secondary": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#083575",
              "light": "#01C9EA",
              "main": "#18A9E6",
            },
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#4E4E4E",
              "secondary": "#4E4E4E",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {},
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "stylesheets": Array [
            "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
          ],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "body1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 800,
            "fontWeightLight": 500,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.375rem",
              "fontWeight": 800,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.45,
            },
            "h2": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.125rem",
              "fontWeight": 800,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.27,
            },
            "h3": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.05rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1.2,
            },
            "h4": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.1,
            },
            "h5": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1,
            },
            "h6": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "0.625rem",
              "fontWeight": 800,
              "letterSpacing": "0.0075em",
              "lineHeight": 1,
            },
            "heading": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <MockedSessionContextProvider>
        <y
          session={
            Object {
              "fetch": [MockFunction],
              "handleIncomingRedirect": [MockFunction] {
                "calls": Array [
                  Array [
                    "http://localhost/",
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": Promise {},
                  },
                ],
              },
              "info": Object {
                "isLoggedIn": true,
                "sessionId": "some-session-id",
                "webId": "http://example.com/webId#me",
              },
              "on": [MockFunction] {
                "calls": Array [
                  Array [
                    "logout",
                    [Function],
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
            }
          }
          sessionId="test-session"
          sessionRequestInProgress={false}
        >
          <DetailsContextMenuProvider>
            <ResourceDrawer
              onUpdate={[Function]}
            >
              <Drawer
                close={[Function]}
                open={true}
              >
                <section
                  className="PodBrowser-drawer PodBrowser-drawer--open"
                >
                  <div
                    className="PodBrowser-drawer__content"
                  >
                    <div
                      className="PodBrowser-drawer__content-wrapper"
                    >
                      <div
                        className="PodBrowser-drawer__article"
                      >
                        <ForwardRef
                          onClick={[Function]}
                          variant="text"
                        >
                          <button
                            className="PodBrowser-button PodBrowser-button--text"
                            onClick={[Function]}
                          >
                            <Icon
                              name="cancel"
                            >
                              <span
                                className="PodBrowser-icon-cancel"
                              />
                            </Icon>
                             Close
                          </button>
                        </ForwardRef>
                      </div>
                      <Message
                        variant="error"
                      >
                        <div
                          className="PodBrowser-message PodBrowser-message--error"
                        >
                          <p>
                            You do not have access to this resource.
                          </p>
                        </div>
                      </Message>
                    </div>
                  </div>
                </section>
              </Drawer>
            </ResourceDrawer>
          </DetailsContextMenuProvider>
        </y>
      </MockedSessionContextProvider>
    </ThemeProvider>
  </StylesProvider>
</Component>
`;

exports[`ResourceDrawer view renders an error message if resource fails to load 1`] = `
<Component
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "iconSet": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "icons": Object {
        "config": Object {
          "cssFiles": Array [
            "css/all.css",
          ],
          "fonts": Array [
            Object {
              "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
              "fontsPath": "./webfonts",
              "licensePath": "./LICENSE.txt",
              "source": "fa-solid-900.eot",
              "sources": Array [
                Object {
                  "format": "embedded-opentype",
                  "path": "fa-solid-900.eot",
                  "urlAddition": "?#iefix",
                },
                Object {
                  "format": "woff2",
                  "path": "fa-solid-900.woff2",
                },
                Object {
                  "format": "woff",
                  "path": "fa-solid-900.woff",
                },
                Object {
                  "format": "truetype",
                  "path": "fa-solid-900.ttf",
                },
                Object {
                  "format": "svg",
                  "path": "fa-solid-900.svg",
                  "urlAddition": "#fontawesome",
                },
              ],
            },
          ],
          "label": "Font Awesome Solid",
          "name": "fontawesome-solid",
          "npmModule": "@fortawesome/fontawesome-free",
          "type": 0,
        },
        "iconColor": [Function],
        "styles": [Function],
      },
      "label": "SDK Default",
      "licenses": Array [
        "fonts/Raleway/OFL.txt",
      ],
      "localFonts": Object {
        "fonts/Raleway/Raleway-ExtraBold": [Function],
        "fonts/Raleway/Raleway-Medium": [Function],
      },
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "name": "sdk-default",
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "adjustAlpha": [Function],
        "augmentColor": [Function],
        "background": Object {
          "default": "#FFFFFF",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#C44539",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#1976d2",
          "light": "#64b5f6",
          "main": "#2196f3",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "rgb(86, 53, 178)",
          "light": "rgb(150, 112, 255)",
          "main": "#7C4DFF",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#083575",
          "light": "#01C9EA",
          "main": "#18A9E6",
        },
        "success": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#388e3c",
          "light": "#81c784",
          "main": "#4caf50",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "#4E4E4E",
          "secondary": "#4E4E4E",
        },
        "tonalOffset": 0.2,
        "type": "light",
        "warning": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "#f57c00",
          "light": "#ffb74d",
          "main": "#ff9800",
        },
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "stylesheets": Array [
        "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
      ],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "body1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Raleway-Medium\\"",
          "fontSize": "0.9375rem",
          "fontWeight": 500,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 800,
        "fontWeightLight": 500,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.375rem",
          "fontWeight": 800,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.45,
        },
        "h2": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.125rem",
          "fontWeight": 800,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.27,
        },
        "h3": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1.05rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1.2,
        },
        "h4": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.1,
        },
        "h5": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0em",
          "lineHeight": 1,
        },
        "h6": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "0.625rem",
          "fontWeight": 800,
          "letterSpacing": "0.0075em",
          "lineHeight": 1,
        },
        "heading": Object {
          "fontFamily": "\\"Raleway-ExtraBold\\"",
          "fontSize": "1rem",
          "fontWeight": 800,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <StylesProvider
    generateClassName={[Function]}
  >
    <ThemeProvider
      theme={
        Object {
          "breakpoints": Object {
            "between": [Function],
            "down": [Function],
            "keys": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
            "only": [Function],
            "up": [Function],
            "values": Object {
              "lg": 1280,
              "md": 960,
              "sm": 600,
              "xl": 1920,
              "xs": 0,
            },
            "width": [Function],
          },
          "direction": "ltr",
          "iconSet": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "icons": Object {
            "config": Object {
              "cssFiles": Array [
                "css/all.css",
              ],
              "fonts": Array [
                Object {
                  "fontFace": "
font-family: 'Font Awesome 5 Free';
font-style: normal;
font-weight: 900;
font-display: block;",
                  "fontsPath": "./webfonts",
                  "licensePath": "./LICENSE.txt",
                  "source": "fa-solid-900.eot",
                  "sources": Array [
                    Object {
                      "format": "embedded-opentype",
                      "path": "fa-solid-900.eot",
                      "urlAddition": "?#iefix",
                    },
                    Object {
                      "format": "woff2",
                      "path": "fa-solid-900.woff2",
                    },
                    Object {
                      "format": "woff",
                      "path": "fa-solid-900.woff",
                    },
                    Object {
                      "format": "truetype",
                      "path": "fa-solid-900.ttf",
                    },
                    Object {
                      "format": "svg",
                      "path": "fa-solid-900.svg",
                      "urlAddition": "#fontawesome",
                    },
                  ],
                },
              ],
              "label": "Font Awesome Solid",
              "name": "fontawesome-solid",
              "npmModule": "@fortawesome/fontawesome-free",
              "type": 0,
            },
            "iconColor": [Function],
            "styles": [Function],
          },
          "label": "SDK Default",
          "licenses": Array [
            "fonts/Raleway/OFL.txt",
          ],
          "localFonts": Object {
            "fonts/Raleway/Raleway-ExtraBold": [Function],
            "fonts/Raleway/Raleway-Medium": [Function],
          },
          "mixins": Object {
            "gutters": [Function],
            "toolbar": Object {
              "@media (min-width:0px) and (orientation: landscape)": Object {
                "minHeight": 48,
              },
              "@media (min-width:600px)": Object {
                "minHeight": 64,
              },
              "minHeight": 56,
            },
          },
          "name": "sdk-default",
          "overrides": Object {},
          "palette": Object {
            "action": Object {
              "activatedOpacity": 0.12,
              "active": "rgba(0, 0, 0, 0.54)",
              "disabled": "rgba(0, 0, 0, 0.26)",
              "disabledBackground": "rgba(0, 0, 0, 0.12)",
              "disabledOpacity": 0.38,
              "focus": "rgba(0, 0, 0, 0.12)",
              "focusOpacity": 0.12,
              "hover": "rgba(0, 0, 0, 0.04)",
              "hoverOpacity": 0.04,
              "selected": "rgba(0, 0, 0, 0.08)",
              "selectedOpacity": 0.08,
            },
            "adjustAlpha": [Function],
            "augmentColor": [Function],
            "background": Object {
              "default": "#FFFFFF",
              "paper": "#fff",
            },
            "common": Object {
              "black": "#000",
              "white": "#fff",
            },
            "contrastThreshold": 3,
            "divider": "rgba(0, 0, 0, 0.12)",
            "error": Object {
              "contrastText": "#fff",
              "dark": "#d32f2f",
              "light": "#e57373",
              "main": "#C44539",
            },
            "getContrastText": [Function],
            "grey": Object {
              "100": "#f5f5f5",
              "200": "#eeeeee",
              "300": "#e0e0e0",
              "400": "#bdbdbd",
              "50": "#fafafa",
              "500": "#9e9e9e",
              "600": "#757575",
              "700": "#616161",
              "800": "#424242",
              "900": "#212121",
              "A100": "#d5d5d5",
              "A200": "#aaaaaa",
              "A400": "#303030",
              "A700": "#616161",
            },
            "info": Object {
              "contrastText": "#fff",
              "dark": "#1976d2",
              "light": "#64b5f6",
              "main": "#2196f3",
            },
            "primary": Object {
              "contrastText": "#fff",
              "dark": "rgb(86, 53, 178)",
              "light": "rgb(150, 112, 255)",
              "main": "#7C4DFF",
            },
            "secondary": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#083575",
              "light": "#01C9EA",
              "main": "#18A9E6",
            },
            "success": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#388e3c",
              "light": "#81c784",
              "main": "#4caf50",
            },
            "text": Object {
              "disabled": "rgba(0, 0, 0, 0.38)",
              "hint": "rgba(0, 0, 0, 0.38)",
              "primary": "#4E4E4E",
              "secondary": "#4E4E4E",
            },
            "tonalOffset": 0.2,
            "type": "light",
            "warning": Object {
              "contrastText": "rgba(0, 0, 0, 0.87)",
              "dark": "#f57c00",
              "light": "#ffb74d",
              "main": "#ff9800",
            },
          },
          "props": Object {},
          "shadows": Array [
            "none",
            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
          ],
          "shape": Object {
            "borderRadius": 4,
          },
          "spacing": [Function],
          "stylesheets": Array [
            "https://fonts.googleapis.com/css?family=Raleway:500,800&display=swap",
          ],
          "transitions": Object {
            "create": [Function],
            "duration": Object {
              "complex": 375,
              "enteringScreen": 225,
              "leavingScreen": 195,
              "short": 250,
              "shorter": 200,
              "shortest": 150,
              "standard": 300,
            },
            "easing": Object {
              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
            },
            "getAutoHeightDuration": [Function],
          },
          "typography": Object {
            "body": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "body1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "body2": Object {
              "fontFamily": "\\"Raleway-Medium\\"",
              "fontSize": "0.9375rem",
              "fontWeight": 500,
              "letterSpacing": "0.01071em",
              "lineHeight": 1.43,
            },
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.02857em",
              "lineHeight": 1.75,
              "textTransform": "uppercase",
            },
            "caption": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.03333em",
              "lineHeight": 1.66,
            },
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": 14,
            "fontWeightBold": 800,
            "fontWeightLight": 500,
            "fontWeightMedium": 500,
            "fontWeightRegular": 400,
            "h1": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.375rem",
              "fontWeight": 800,
              "letterSpacing": "-0.01562em",
              "lineHeight": 1.45,
            },
            "h2": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.125rem",
              "fontWeight": 800,
              "letterSpacing": "-0.00833em",
              "lineHeight": 1.27,
            },
            "h3": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1.05rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1.2,
            },
            "h4": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00735em",
              "lineHeight": 1.1,
            },
            "h5": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0em",
              "lineHeight": 1,
            },
            "h6": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "0.625rem",
              "fontWeight": 800,
              "letterSpacing": "0.0075em",
              "lineHeight": 1,
            },
            "heading": Object {
              "fontFamily": "\\"Raleway-ExtraBold\\"",
              "fontSize": "1rem",
              "fontWeight": 800,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.5,
            },
            "htmlFontSize": 16,
            "overline": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.75rem",
              "fontWeight": 400,
              "letterSpacing": "0.08333em",
              "lineHeight": 2.66,
              "textTransform": "uppercase",
            },
            "pxToRem": [Function],
            "round": [Function],
            "subtitle1": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "1rem",
              "fontWeight": 400,
              "letterSpacing": "0.00938em",
              "lineHeight": 1.75,
            },
            "subtitle2": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": "0.875rem",
              "fontWeight": 500,
              "letterSpacing": "0.00714em",
              "lineHeight": 1.57,
            },
          },
          "zIndex": Object {
            "appBar": 1100,
            "drawer": 1200,
            "mobileStepper": 1000,
            "modal": 1300,
            "snackbar": 1400,
            "speedDial": 1050,
            "tooltip": 1500,
          },
          Symbol(mui.nested): false,
        }
      }
    >
      <MockedSessionContextProvider>
        <y
          session={
            Object {
              "fetch": [MockFunction],
              "handleIncomingRedirect": [MockFunction] {
                "calls": Array [
                  Array [
                    "http://localhost/",
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": Promise {},
                  },
                ],
              },
              "info": Object {
                "isLoggedIn": true,
                "sessionId": "some-session-id",
                "webId": "http://example.com/webId#me",
              },
              "on": [MockFunction] {
                "calls": Array [
                  Array [
                    "logout",
                    [Function],
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
            }
          }
          sessionId="test-session"
          sessionRequestInProgress={false}
        >
          <DetailsContextMenuProvider>
            <ResourceDrawer
              onUpdate={[Function]}
            >
              <Drawer
                close={[Function]}
                open={true}
              >
                <section
                  className="PodBrowser-drawer PodBrowser-drawer--open"
                >
                  <div
                    className="PodBrowser-drawer__content"
                  >
                    <div
                      className="PodBrowser-drawer__content-wrapper"
                    >
                      <div
                        className="PodBrowser-drawer__article"
                      >
                        <ForwardRef
                          onClick={[Function]}
                          variant="text"
                        >
                          <button
                            className="PodBrowser-button PodBrowser-button--text"
                            onClick={[Function]}
                          >
                            <Icon
                              name="cancel"
                            >
                              <span
                                className="PodBrowser-icon-cancel"
                              />
                            </Icon>
                             Close
                          </button>
                        </ForwardRef>
                      </div>
                      <Message
                        variant="error"
                      >
                        <div
                          className="PodBrowser-message PodBrowser-message--error"
                        >
                          <p>
                            We had a problem loading the resource.
                          </p>
                        </div>
                      </Message>
                    </div>
                  </div>
                </section>
              </Drawer>
            </ResourceDrawer>
          </DetailsContextMenuProvider>
        </y>
      </MockedSessionContextProvider>
    </ThemeProvider>
  </StylesProvider>
</Component>
`;
